<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="class.acl.php" hash="5b8e9765a9e881dacbd7eaf4ad2e79cd" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="Phoenix">
      <extends>\Security</extends>
      <name>ACL</name>
      <full_name>\ACL</full_name>
      <docblock line="3">
        <description>&lt;p&gt;The Security class provides security and access control services
to the entire package.</description>
        <long-description>&lt;p&gt;Requires Common class.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ACL and Security class as of v30104 require SSO access.&lt;/p&gt;</long-description>
        <tag line="3" name="author" description="Yectep Studios &lt;info@yectep.hk&gt;"/>
        <tag line="3" name="version" description="30104"/>
        <tag line="3" name="package" description="Phoenix"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="19" package="Phoenix">
        <name>initiateSecurity</name>
        <full_name>initiateSecurity</full_name>
        <docblock line="14">
          <description>Begins ACL class and handles sessions</description>
          <long-description></long-description>
          <tag line="14" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="33" package="Phoenix">
        <name>genSession</name>
        <full_name>genSession</full_name>
        <docblock line="29">
          <description>Generates a session key based on UA and IP and logs the action</description>
          <long-description></long-description>
          <tag line="29" name="param" description="Single-sign-on user ID number" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="50" package="Phoenix">
        <name>checkActive</name>
        <full_name>checkActive</full_name>
        <docblock line="46">
          <description>Sees if an associated family account is activated.</description>
          <long-description>&lt;p&gt;True if active, false otherwise&lt;/p&gt;</long-description>
          <tag line="46" name="param" description="Single sign-on user ID number" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="65" package="Phoenix">
        <name>checkSsoEmail</name>
        <full_name>checkSsoEmail</full_name>
        <docblock line="60">
          <description>Looks up SSO object ID by email and (optionally) object type.</description>
          <long-description>&lt;p&gt;Success returns SSOID.&lt;/p&gt;</long-description>
          <tag line="60" name="param" description="Email address to lookup SSO object by" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="Portal type to authenticate against (eg: public, staff...)" type="string" variable="$portalType">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$portalType</name>
          <default>'public'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="85" package="Phoenix">
        <name>makeSsoObject</name>
        <full_name>makeSsoObject</full_name>
        <docblock line="80">
          <description>Creates an SSO object of the specified type</description>
          <long-description></long-description>
          <tag line="80" name="package" description="Phoenix"/>
          <tag line="80" name="version" description="30104"/>
        </docblock>
        <argument line="85">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$type</name>
          <default>'family'</default>
          <type/>
        </argument>
        <argument line="85">
          <name>$portal</name>
          <default>"public"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="116" package="Phoenix">
        <name>updatePassword</name>
        <full_name>updatePassword</full_name>
        <docblock line="111">
          <description>Updates SSO password and logs it</description>
          <long-description></long-description>
          <tag line="111" name="package" description="Phoenix"/>
          <tag line="111" name="version" description="30405"/>
        </docblock>
        <argument line="116">
          <name>$ssoid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="116">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="143" package="Phoenix">
        <name>checkPassword</name>
        <full_name>checkPassword</full_name>
        <docblock line="137">
          <description>Verifies SSO authentication, generate and store session information</description>
          <long-description></long-description>
          <tag line="137" name="package" description="Phoenix"/>
          <tag line="137" name="version" description="30104"/>
        </docblock>
        <argument line="143">
          <name>$ssoid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="143">
          <name>$plainpass</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="165" package="Phoenix">
        <name>getSsoObject</name>
        <full_name>getSsoObject</full_name>
        <docblock line="162">
          <description>Gets SSO object</description>
          <long-description></long-description>
        </docblock>
        <argument line="165">
          <name>$objId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="175" package="Phoenix">
        <name>getSsoType</name>
        <full_name>getSsoType</full_name>
        <docblock line="172">
          <description>Gets SSO Object Type</description>
          <long-description></long-description>
        </docblock>
        <argument line="175">
          <name>$typeId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="186" package="Phoenix">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="182">
          <description>Logs a user out based on their session</description>
          <long-description></long-description>
          <tag line="182" name="package" description="Phoenix"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="196" package="Phoenix">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="192">
          <description>Performs an SSO login</description>
          <long-description></long-description>
          <tag line="192" name="package" description="Phoenix"/>
        </docblock>
        <argument line="196">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$plainpass</name>
          <default></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$portal</name>
          <default>'public'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="212" package="Phoenix">
        <name>checkLogin</name>
        <full_name>checkLogin</full_name>
        <docblock line="209">
          <description>Verifies an active SSO session information including IP and UA validation</description>
          <long-description></long-description>
        </docblock>
        <argument line="212">
          <name>$portal</name>
          <default>'public'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="232" package="Phoenix">
        <name>getPermsByType</name>
        <full_name>getPermsByType</full_name>
        <docblock line="227">
          <description>Get array of permissions allowed determined by the object type</description>
          <long-description></long-description>
          <tag line="227" name="param" description="Group ID of permissions to look up as an array" type="int" variable="$typeId">
            <type by_reference="false">int</type>
          </tag>
          <tag line="227" name="return" description="Permissions array based on ID =&gt; name of permission" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$typeId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="250" package="Phoenix">
        <name>addTeacherSafe</name>
        <full_name>addTeacherSafe</full_name>
        <docblock line="244">
          <description>Sees if a teacher exists, if so, returns their Staff ID.</description>
          <long-description>&lt;p&gt;If not, creates it and returns staff ID&lt;/p&gt;</long-description>
          <tag line="244" name="param" description="Email address used to authenticate teacher" type="\str" variable="$email">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="244" name="param" description="Teacher's name in case we need to create it in the Staff table" type="\str" variable="$name">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="244" name="return" description="Staff ID of new/existing teacher. Returns FALSE if email doesn't correspond to a teacher" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="250">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="280" package="Phoenix">
        <name>getSsoTypeByName</name>
        <full_name>getSsoTypeByName</full_name>
        <argument line="280">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.acl.php</error>
      <error line="80" code="50015">Argument $email is missing from the Docblock of makeSsoObject()</error>
      <error line="80" code="50015">Argument $password is missing from the Docblock of makeSsoObject()</error>
      <error line="80" code="50015">Argument $type is missing from the Docblock of makeSsoObject()</error>
      <error line="80" code="50015">Argument $portal is missing from the Docblock of makeSsoObject()</error>
      <error line="111" code="50015">Argument $ssoid is missing from the Docblock of updatePassword()</error>
      <error line="111" code="50015">Argument $password is missing from the Docblock of updatePassword()</error>
      <error line="137" code="50015">Argument $ssoid is missing from the Docblock of checkPassword()</error>
      <error line="137" code="50015">Argument $plainpass is missing from the Docblock of checkPassword()</error>
      <error line="162" code="50015">Argument $objId is missing from the Docblock of getSsoObject()</error>
      <error line="172" code="50015">Argument $typeId is missing from the Docblock of getSsoType()</error>
      <error line="192" code="50015">Argument $email is missing from the Docblock of login()</error>
      <error line="192" code="50015">Argument $plainpass is missing from the Docblock of login()</error>
      <error line="192" code="50015">Argument $portal is missing from the Docblock of login()</error>
      <error line="209" code="50015">Argument $portal is missing from the Docblock of checkLogin()</error>
      <error line="280" code="50010">No DocBlock was found for method getSsoTypeByName()</error>
    </parse_markers>
  </file>
  <file path="class.browser.php" hash="62e85960e71c4dc3ac2adfa4d316ca52" package="Default">
    <class final="false" abstract="false" namespace="global" line="136" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
      <extends/>
      <name>Browser</name>
      <full_name>\Browser</full_name>
      <docblock line="2">
        <description>File: Browser.php
Author: Chris Schuld (http://chrisschuld.com/)
Last Modified: August 20th, 2010</description>
        <long-description/>
        <tag line="2" name="version" description="1.9"/>
        <tag line="2" name="package" description="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld.com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version.&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU General Public License for more details at:&#10;http://www.gnu.org/copyleft/gpl.html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER_FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www.useragentstring.com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools.com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1.9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM_ANDROID)&#10; + Fixed issue with Android 1.6/2.2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1.8):&#10; + Added iPad Support&#10;2010-03-07 (v1.7):&#10; + *MAJOR* Rebuild (preg_match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the __toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5.3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1.8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5.3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator.&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods.&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones.&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick.id.au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script. You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values.&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)"/>
      </docblock>
      <constant namespace="global" line="147" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_UNKNOWN</name>
        <full_name>BROWSER_UNKNOWN</full_name>
        <value>'unknown'</value>
      </constant>
      <constant namespace="global" line="148" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>VERSION_UNKNOWN</name>
        <full_name>VERSION_UNKNOWN</full_name>
        <value>'unknown'</value>
      </constant>
      <constant namespace="global" line="150" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_OPERA</name>
        <full_name>BROWSER_OPERA</full_name>
        <value>'Opera'</value>
      </constant>
      <constant namespace="global" line="151" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_OPERA_MINI</name>
        <full_name>BROWSER_OPERA_MINI</full_name>
        <value>'Opera Mini'</value>
      </constant>
      <constant namespace="global" line="152" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_WEBTV</name>
        <full_name>BROWSER_WEBTV</full_name>
        <value>'WebTV'</value>
      </constant>
      <constant namespace="global" line="153" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_IE</name>
        <full_name>BROWSER_IE</full_name>
        <value>'Internet Explorer'</value>
      </constant>
      <constant namespace="global" line="154" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_POCKET_IE</name>
        <full_name>BROWSER_POCKET_IE</full_name>
        <value>'Pocket Internet Explorer'</value>
      </constant>
      <constant namespace="global" line="155" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_KONQUEROR</name>
        <full_name>BROWSER_KONQUEROR</full_name>
        <value>'Konqueror'</value>
      </constant>
      <constant namespace="global" line="156" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_ICAB</name>
        <full_name>BROWSER_ICAB</full_name>
        <value>'iCab'</value>
      </constant>
      <constant namespace="global" line="157" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_OMNIWEB</name>
        <full_name>BROWSER_OMNIWEB</full_name>
        <value>'OmniWeb'</value>
      </constant>
      <constant namespace="global" line="158" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_FIREBIRD</name>
        <full_name>BROWSER_FIREBIRD</full_name>
        <value>'Firebird'</value>
      </constant>
      <constant namespace="global" line="159" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_FIREFOX</name>
        <full_name>BROWSER_FIREFOX</full_name>
        <value>'Firefox'</value>
      </constant>
      <constant namespace="global" line="160" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_ICEWEASEL</name>
        <full_name>BROWSER_ICEWEASEL</full_name>
        <value>'Iceweasel'</value>
      </constant>
      <constant namespace="global" line="161" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_SHIRETOKO</name>
        <full_name>BROWSER_SHIRETOKO</full_name>
        <value>'Shiretoko'</value>
      </constant>
      <constant namespace="global" line="162" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_MOZILLA</name>
        <full_name>BROWSER_MOZILLA</full_name>
        <value>'Mozilla'</value>
      </constant>
      <constant namespace="global" line="163" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_AMAYA</name>
        <full_name>BROWSER_AMAYA</full_name>
        <value>'Amaya'</value>
      </constant>
      <constant namespace="global" line="164" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_LYNX</name>
        <full_name>BROWSER_LYNX</full_name>
        <value>'Lynx'</value>
      </constant>
      <constant namespace="global" line="165" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_SAFARI</name>
        <full_name>BROWSER_SAFARI</full_name>
        <value>'Safari'</value>
      </constant>
      <constant namespace="global" line="166" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_IPHONE</name>
        <full_name>BROWSER_IPHONE</full_name>
        <value>'iPhone'</value>
      </constant>
      <constant namespace="global" line="167" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_IPOD</name>
        <full_name>BROWSER_IPOD</full_name>
        <value>'iPod'</value>
      </constant>
      <constant namespace="global" line="168" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_IPAD</name>
        <full_name>BROWSER_IPAD</full_name>
        <value>'iPad'</value>
      </constant>
      <constant namespace="global" line="169" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_CHROME</name>
        <full_name>BROWSER_CHROME</full_name>
        <value>'Chrome'</value>
      </constant>
      <constant namespace="global" line="170" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_ANDROID</name>
        <full_name>BROWSER_ANDROID</full_name>
        <value>'Android'</value>
      </constant>
      <constant namespace="global" line="171" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_GOOGLEBOT</name>
        <full_name>BROWSER_GOOGLEBOT</full_name>
        <value>'GoogleBot'</value>
      </constant>
      <constant namespace="global" line="172" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_SLURP</name>
        <full_name>BROWSER_SLURP</full_name>
        <value>'Yahoo! Slurp'</value>
      </constant>
      <constant namespace="global" line="173" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_W3CVALIDATOR</name>
        <full_name>BROWSER_W3CVALIDATOR</full_name>
        <value>'W3C Validator'</value>
      </constant>
      <constant namespace="global" line="174" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_BLACKBERRY</name>
        <full_name>BROWSER_BLACKBERRY</full_name>
        <value>'BlackBerry'</value>
      </constant>
      <constant namespace="global" line="175" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_ICECAT</name>
        <full_name>BROWSER_ICECAT</full_name>
        <value>'IceCat'</value>
      </constant>
      <constant namespace="global" line="176" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_NOKIA_S60</name>
        <full_name>BROWSER_NOKIA_S60</full_name>
        <value>'Nokia S60 OSS Browser'</value>
      </constant>
      <constant namespace="global" line="177" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_NOKIA</name>
        <full_name>BROWSER_NOKIA</full_name>
        <value>'Nokia Browser'</value>
      </constant>
      <constant namespace="global" line="178" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_MSN</name>
        <full_name>BROWSER_MSN</full_name>
        <value>'MSN Browser'</value>
      </constant>
      <constant namespace="global" line="179" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_MSNBOT</name>
        <full_name>BROWSER_MSNBOT</full_name>
        <value>'MSN Bot'</value>
      </constant>
      <constant namespace="global" line="182" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_NETSCAPE_NAVIGATOR</name>
        <full_name>BROWSER_NETSCAPE_NAVIGATOR</full_name>
        <value>'Netscape Navigator'</value>
      </constant>
      <constant namespace="global" line="183" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_GALEON</name>
        <full_name>BROWSER_GALEON</full_name>
        <value>'Galeon'</value>
      </constant>
      <constant namespace="global" line="184" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_NETPOSITIVE</name>
        <full_name>BROWSER_NETPOSITIVE</full_name>
        <value>'NetPositive'</value>
      </constant>
      <constant namespace="global" line="185" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>BROWSER_PHOENIX</name>
        <full_name>BROWSER_PHOENIX</full_name>
        <value>'Phoenix'</value>
      </constant>
      <constant namespace="global" line="187" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_UNKNOWN</name>
        <full_name>PLATFORM_UNKNOWN</full_name>
        <value>'unknown'</value>
      </constant>
      <constant namespace="global" line="188" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_WINDOWS</name>
        <full_name>PLATFORM_WINDOWS</full_name>
        <value>'Windows'</value>
      </constant>
      <constant namespace="global" line="189" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_WINDOWS_CE</name>
        <full_name>PLATFORM_WINDOWS_CE</full_name>
        <value>'Windows CE'</value>
      </constant>
      <constant namespace="global" line="190" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_APPLE</name>
        <full_name>PLATFORM_APPLE</full_name>
        <value>'Apple'</value>
      </constant>
      <constant namespace="global" line="191" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_LINUX</name>
        <full_name>PLATFORM_LINUX</full_name>
        <value>'Linux'</value>
      </constant>
      <constant namespace="global" line="192" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_OS2</name>
        <full_name>PLATFORM_OS2</full_name>
        <value>'OS/2'</value>
      </constant>
      <constant namespace="global" line="193" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_BEOS</name>
        <full_name>PLATFORM_BEOS</full_name>
        <value>'BeOS'</value>
      </constant>
      <constant namespace="global" line="194" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_IPHONE</name>
        <full_name>PLATFORM_IPHONE</full_name>
        <value>'iPhone'</value>
      </constant>
      <constant namespace="global" line="195" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_IPOD</name>
        <full_name>PLATFORM_IPOD</full_name>
        <value>'iPod'</value>
      </constant>
      <constant namespace="global" line="196" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_IPAD</name>
        <full_name>PLATFORM_IPAD</full_name>
        <value>'iPad'</value>
      </constant>
      <constant namespace="global" line="197" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_BLACKBERRY</name>
        <full_name>PLATFORM_BLACKBERRY</full_name>
        <value>'BlackBerry'</value>
      </constant>
      <constant namespace="global" line="198" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_NOKIA</name>
        <full_name>PLATFORM_NOKIA</full_name>
        <value>'Nokia'</value>
      </constant>
      <constant namespace="global" line="199" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_FREEBSD</name>
        <full_name>PLATFORM_FREEBSD</full_name>
        <value>'FreeBSD'</value>
      </constant>
      <constant namespace="global" line="200" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_OPENBSD</name>
        <full_name>PLATFORM_OPENBSD</full_name>
        <value>'OpenBSD'</value>
      </constant>
      <constant namespace="global" line="201" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_NETBSD</name>
        <full_name>PLATFORM_NETBSD</full_name>
        <value>'NetBSD'</value>
      </constant>
      <constant namespace="global" line="202" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_SUNOS</name>
        <full_name>PLATFORM_SUNOS</full_name>
        <value>'SunOS'</value>
      </constant>
      <constant namespace="global" line="203" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_OPENSOLARIS</name>
        <full_name>PLATFORM_OPENSOLARIS</full_name>
        <value>'OpenSolaris'</value>
      </constant>
      <constant namespace="global" line="204" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>PLATFORM_ANDROID</name>
        <full_name>PLATFORM_ANDROID</full_name>
        <value>'Android'</value>
      </constant>
      <constant namespace="global" line="206" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>OPERATING_SYSTEM_UNKNOWN</name>
        <full_name>OPERATING_SYSTEM_UNKNOWN</full_name>
        <value>'unknown'</value>
      </constant>
      <property final="false" static="false" visibility="private" line="137" namespace="global" package="Default">
        <name>$_agent</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="138" namespace="global" package="Default">
        <name>$_browser_name</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="139" namespace="global" package="Default">
        <name>$_version</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="140" namespace="global" package="Default">
        <name>$_platform</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="141" namespace="global" package="Default">
        <name>$_os</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="142" namespace="global" package="Default">
        <name>$_is_aol</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="143" namespace="global" package="Default">
        <name>$_is_mobile</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="144" namespace="global" package="Default">
        <name>$_is_robot</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="145" namespace="global" package="Default">
        <name>$_aol_version</name>
        <default>''</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="208" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>Browser</name>
        <full_name>Browser</full_name>
        <argument line="208">
          <name>$useragent</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="218">
          <description>Reset all properties</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>isBrowser</name>
        <full_name>isBrowser</full_name>
        <docblock line="233">
          <description>Check to see if the specific browser is valid</description>
          <long-description/>
          <tag line="233" name="param" description="" type="string" variable="$browserName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="return" description="if the browser is the specified browser" type="True">
            <type by_reference="false">True</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$browserName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="244" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>getBrowser</name>
        <full_name>getBrowser</full_name>
        <docblock line="240">
          <description>The name of the browser.</description>
          <long-description>&lt;p&gt;All return types are from the class contants&lt;/p&gt;</long-description>
          <tag line="240" name="return" description="Name of the browser" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="249" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>setBrowser</name>
        <full_name>setBrowser</full_name>
        <docblock line="245">
          <description>Set the name of the browser</description>
          <long-description/>
          <tag line="245" name="param" description="The name of the Browser" type="\" variable="$browser"/>
        </docblock>
        <argument line="249">
          <name>$browser</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>getPlatform</name>
        <full_name>getPlatform</full_name>
        <docblock line="250">
          <description>The name of the platform.</description>
          <long-description>&lt;p&gt;All return types are from the class contants&lt;/p&gt;</long-description>
          <tag line="250" name="return" description="Name of the browser" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="259" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>setPlatform</name>
        <full_name>setPlatform</full_name>
        <docblock line="255">
          <description>Set the name of the platform</description>
          <long-description/>
          <tag line="255" name="param" description="The name of the Platform" type="\" variable="$platform"/>
        </docblock>
        <argument line="259">
          <name>$platform</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="264" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>getVersion</name>
        <full_name>getVersion</full_name>
        <docblock line="260">
          <description>The version of the browser.</description>
          <long-description/>
          <tag line="260" name="return" description="Version of the browser (will only contain alpha-numeric characters and a period)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="269" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>setVersion</name>
        <full_name>setVersion</full_name>
        <docblock line="265">
          <description>Set the version of the browser</description>
          <long-description/>
          <tag line="265" name="param" description="The version of the Browser" type="\" variable="$version"/>
        </docblock>
        <argument line="269">
          <name>$version</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="274" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>getAolVersion</name>
        <full_name>getAolVersion</full_name>
        <docblock line="270">
          <description>The version of AOL.</description>
          <long-description/>
          <tag line="270" name="return" description="Version of AOL (will only contain alpha-numeric characters and a period)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="279" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>setAolVersion</name>
        <full_name>setAolVersion</full_name>
        <docblock line="275">
          <description>Set the version of AOL</description>
          <long-description/>
          <tag line="275" name="param" description="The version of AOL" type="\" variable="$version"/>
        </docblock>
        <argument line="279">
          <name>$version</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="284" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>isAol</name>
        <full_name>isAol</full_name>
        <docblock line="280">
          <description>Is the browser from AOL?</description>
          <long-description/>
          <tag line="280" name="return" description="True if the browser is from AOL otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>isMobile</name>
        <full_name>isMobile</full_name>
        <docblock line="285">
          <description>Is the browser from a mobile device?</description>
          <long-description/>
          <tag line="285" name="return" description="True if the browser is from a mobile device otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>isRobot</name>
        <full_name>isRobot</full_name>
        <docblock line="290">
          <description>Is the browser from a robot (ex Slurp,GoogleBot)?</description>
          <long-description/>
          <tag line="290" name="return" description="True if the browser is from a robot otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>setAol</name>
        <full_name>setAol</full_name>
        <docblock line="295">
          <description>Set the browser to be from AOL</description>
          <long-description/>
          <tag line="295" name="param" description="" type="\" variable="$isAol"/>
        </docblock>
        <argument line="299">
          <name>$isAol</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="304" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>setMobile</name>
        <full_name>setMobile</full_name>
        <docblock line="300">
          <description>Set the Browser to be mobile</description>
          <long-description/>
          <tag line="300" name="param" description="is the browser a mobile brower or not" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="304">
          <name>$value</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="309" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>setRobot</name>
        <full_name>setRobot</full_name>
        <docblock line="305">
          <description>Set the Browser to be a robot</description>
          <long-description/>
          <tag line="305" name="param" description="is the browser a robot or not" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$value</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="314" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>getUserAgent</name>
        <full_name>getUserAgent</full_name>
        <docblock line="310">
          <description>Get the user agent value in use to determine the browser</description>
          <long-description/>
          <tag line="310" name="return" description="The user agent from the HTTP header" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="319" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>setUserAgent</name>
        <full_name>setUserAgent</full_name>
        <docblock line="315">
          <description>Set the user agent value (the construction will use the HTTP header value - this will overwrite it)</description>
          <long-description/>
          <tag line="315" name="param" description="The value for the User Agent" type="\" variable="$agent_string"/>
        </docblock>
        <argument line="319">
          <name>$agent_string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="329" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>isChromeFrame</name>
        <full_name>isChromeFrame</full_name>
        <docblock line="324">
          <description>Used to determine if the browser is actually "chromeframe"</description>
          <long-description/>
          <tag line="324" name="since" description="1.7"/>
          <tag line="324" name="return" description="True if the browser is using chromeframe" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="332">
          <description>Returns a formatted string with a summary of the details of the browser.</description>
          <long-description/>
          <tag line="332" name="return" description="formatted string with a summary of the browser" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="345" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>determine</name>
        <full_name>determine</full_name>
        <docblock line="342">
          <description>Protected routine to calculate and determine what the browser is in use (including platform)</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="354" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowsers</name>
        <full_name>checkBrowsers</full_name>
        <docblock line="350">
          <description>Protected routine to determine the browser type</description>
          <long-description/>
          <tag line="350" name="return" description="True if the browser was detected otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="412" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserBlackBerry</name>
        <full_name>checkBrowserBlackBerry</full_name>
        <docblock line="408">
          <description>Determine if the user is using a BlackBerry (last updated 1.7)</description>
          <long-description/>
          <tag line="408" name="return" description="True if the browser is the BlackBerry browser otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="428" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkForAol</name>
        <full_name>checkForAol</full_name>
        <docblock line="424">
          <description>Determine if the user is using an AOL User Agent (last updated 1.7)</description>
          <long-description/>
          <tag line="424" name="return" description="True if the browser is from AOL otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="445" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserGoogleBot</name>
        <full_name>checkBrowserGoogleBot</full_name>
        <docblock line="441">
          <description>Determine if the browser is the GoogleBot or not (last updated 1.7)</description>
          <long-description/>
          <tag line="441" name="return" description="True if the browser is the GoogletBot otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="461" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserMSNBot</name>
        <full_name>checkBrowserMSNBot</full_name>
        <docblock line="457">
          <description>Determine if the browser is the MSNBot or not (last updated 1.9)</description>
          <long-description/>
          <tag line="457" name="return" description="True if the browser is the MSNBot otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="477" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserW3CValidator</name>
        <full_name>checkBrowserW3CValidator</full_name>
        <docblock line="473">
          <description>Determine if the browser is the W3C Validator or not (last updated 1.7)</description>
          <long-description/>
          <tag line="473" name="return" description="True if the browser is the W3C Validator otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="501" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserSlurp</name>
        <full_name>checkBrowserSlurp</full_name>
        <docblock line="497">
          <description>Determine if the browser is the Yahoo! Slurp Robot or not (last updated 1.7)</description>
          <long-description/>
          <tag line="497" name="return" description="True if the browser is the Yahoo! Slurp Robot otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="518" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserInternetExplorer</name>
        <full_name>checkBrowserInternetExplorer</full_name>
        <docblock line="514">
          <description>Determine if the browser is Internet Explorer or not (last updated 1.7)</description>
          <long-description/>
          <tag line="514" name="return" description="True if the browser is Internet Explorer otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="567" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserOpera</name>
        <full_name>checkBrowserOpera</full_name>
        <docblock line="563">
          <description>Determine if the browser is Opera or not (last updated 1.7)</description>
          <long-description/>
          <tag line="563" name="return" description="True if the browser is Opera otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="607" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserChrome</name>
        <full_name>checkBrowserChrome</full_name>
        <docblock line="603">
          <description>Determine if the browser is Chrome or not (last updated 1.7)</description>
          <long-description/>
          <tag line="603" name="return" description="True if the browser is Chrome otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="623" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserWebTv</name>
        <full_name>checkBrowserWebTv</full_name>
        <docblock line="619">
          <description>Determine if the browser is WebTv or not (last updated 1.7)</description>
          <long-description/>
          <tag line="619" name="return" description="True if the browser is WebTv otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="638" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserNetPositive</name>
        <full_name>checkBrowserNetPositive</full_name>
        <docblock line="634">
          <description>Determine if the browser is NetPositive or not (last updated 1.7)</description>
          <long-description/>
          <tag line="634" name="return" description="True if the browser is NetPositive otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="653" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserGaleon</name>
        <full_name>checkBrowserGaleon</full_name>
        <docblock line="649">
          <description>Determine if the browser is Galeon or not (last updated 1.7)</description>
          <long-description/>
          <tag line="649" name="return" description="True if the browser is Galeon otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="668" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserKonqueror</name>
        <full_name>checkBrowserKonqueror</full_name>
        <docblock line="664">
          <description>Determine if the browser is Konqueror or not (last updated 1.7)</description>
          <long-description/>
          <tag line="664" name="return" description="True if the browser is Konqueror otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="683" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserIcab</name>
        <full_name>checkBrowserIcab</full_name>
        <docblock line="679">
          <description>Determine if the browser is iCab or not (last updated 1.7)</description>
          <long-description/>
          <tag line="679" name="return" description="True if the browser is iCab otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="697" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserOmniWeb</name>
        <full_name>checkBrowserOmniWeb</full_name>
        <docblock line="693">
          <description>Determine if the browser is OmniWeb or not (last updated 1.7)</description>
          <long-description/>
          <tag line="693" name="return" description="True if the browser is OmniWeb otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="712" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserPhoenix</name>
        <full_name>checkBrowserPhoenix</full_name>
        <docblock line="708">
          <description>Determine if the browser is Phoenix or not (last updated 1.7)</description>
          <long-description/>
          <tag line="708" name="return" description="True if the browser is Phoenix otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="726" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserFirebird</name>
        <full_name>checkBrowserFirebird</full_name>
        <docblock line="722">
          <description>Determine if the browser is Firebird or not (last updated 1.7)</description>
          <long-description/>
          <tag line="722" name="return" description="True if the browser is Firebird otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="741" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserNetscapeNavigator9Plus</name>
        <full_name>checkBrowserNetscapeNavigator9Plus</full_name>
        <docblock line="736">
          <description>Determine if the browser is Netscape Navigator 9+ or not (last updated 1.7)
NOTE: (http://browser.netscape.com/ - Official support ended on March 1st, 2008)</description>
          <long-description/>
          <tag line="736" name="return" description="True if the browser is Netscape Navigator 9+ otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="759" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserShiretoko</name>
        <full_name>checkBrowserShiretoko</full_name>
        <docblock line="755">
          <description>Determine if the browser is Shiretoko or not (https://wiki.mozilla.org/Projects/shiretoko) (last updated 1.7)</description>
          <long-description/>
          <tag line="755" name="return" description="True if the browser is Shiretoko otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="772" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserIceCat</name>
        <full_name>checkBrowserIceCat</full_name>
        <docblock line="768">
          <description>Determine if the browser is Ice Cat or not (http://en.wikipedia.org/wiki/GNU_IceCat) (last updated 1.7)</description>
          <long-description/>
          <tag line="768" name="return" description="True if the browser is Ice Cat otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="785" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserNokia</name>
        <full_name>checkBrowserNokia</full_name>
        <docblock line="781">
          <description>Determine if the browser is Nokia or not (last updated 1.7)</description>
          <long-description/>
          <tag line="781" name="return" description="True if the browser is Nokia otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="804" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserFirefox</name>
        <full_name>checkBrowserFirefox</full_name>
        <docblock line="800">
          <description>Determine if the browser is Firefox or not (last updated 1.7)</description>
          <long-description/>
          <tag line="800" name="return" description="True if the browser is Firefox otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="824" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserIceweasel</name>
        <full_name>checkBrowserIceweasel</full_name>
        <docblock line="820">
          <description>Determine if the browser is Firefox or not (last updated 1.7)</description>
          <long-description/>
          <tag line="820" name="return" description="True if the browser is Firefox otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="838" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserMozilla</name>
        <full_name>checkBrowserMozilla</full_name>
        <docblock line="834">
          <description>Determine if the browser is Mozilla or not (last updated 1.7)</description>
          <long-description/>
          <tag line="834" name="return" description="True if the browser is Mozilla otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="864" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserLynx</name>
        <full_name>checkBrowserLynx</full_name>
        <docblock line="860">
          <description>Determine if the browser is Lynx or not (last updated 1.7)</description>
          <long-description/>
          <tag line="860" name="return" description="True if the browser is Lynx otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="879" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserAmaya</name>
        <full_name>checkBrowserAmaya</full_name>
        <docblock line="875">
          <description>Determine if the browser is Amaya or not (last updated 1.7)</description>
          <long-description/>
          <tag line="875" name="return" description="True if the browser is Amaya otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="894" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserSafari</name>
        <full_name>checkBrowserSafari</full_name>
        <docblock line="890">
          <description>Determine if the browser is Safari or not (last updated 1.7)</description>
          <long-description/>
          <tag line="890" name="return" description="True if the browser is Safari otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="914" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowseriPhone</name>
        <full_name>checkBrowseriPhone</full_name>
        <docblock line="910">
          <description>Determine if the browser is iPhone or not (last updated 1.7)</description>
          <long-description/>
          <tag line="910" name="return" description="True if the browser is iPhone otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="935" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowseriPad</name>
        <full_name>checkBrowseriPad</full_name>
        <docblock line="931">
          <description>Determine if the browser is iPod or not (last updated 1.7)</description>
          <long-description/>
          <tag line="931" name="return" description="True if the browser is iPod otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="956" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowseriPod</name>
        <full_name>checkBrowseriPod</full_name>
        <docblock line="952">
          <description>Determine if the browser is iPod or not (last updated 1.7)</description>
          <long-description/>
          <tag line="952" name="return" description="True if the browser is iPod otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="977" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkBrowserAndroid</name>
        <full_name>checkBrowserAndroid</full_name>
        <docblock line="973">
          <description>Determine if the browser is Android or not (last updated 1.7)</description>
          <long-description/>
          <tag line="973" name="return" description="True if the browser is Android otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="997" package="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)">
        <name>checkPlatform</name>
        <full_name>checkPlatform</full_name>
        <docblock line="994">
          <description>Determine the user's platform (last updated 1.7)</description>
          <long-description/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.browser.php</error>
      <error line="137" code="50018">No DocBlock was found for property $_agent</error>
      <error line="138" code="50018">No DocBlock was found for property $_browser_name</error>
      <error line="139" code="50018">No DocBlock was found for property $_version</error>
      <error line="140" code="50018">No DocBlock was found for property $_platform</error>
      <error line="141" code="50018">No DocBlock was found for property $_os</error>
      <error line="142" code="50018">No DocBlock was found for property $_is_aol</error>
      <error line="143" code="50018">No DocBlock was found for property $_is_mobile</error>
      <error line="144" code="50018">No DocBlock was found for property $_is_robot</error>
      <error line="145" code="50018">No DocBlock was found for property $_aol_version</error>
      <error line="208" code="50010">No DocBlock was found for method Browser()</error>
    </parse_markers>
  </file>
  <file path="class.common.php" hash="1507813c2350f923c90c6daa45083b4c" package="Default">
    <include line="127" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="11" package="Phoenix">
      <extends/>
      <name>Common</name>
      <full_name>\Common</full_name>
      <docblock line="3">
        <description>The Common class provides default page construction common functions
and classes.</description>
        <long-description></long-description>
        <tag line="3" name="author" description="Yectep Studios &lt;info@yectep.hk&gt;"/>
        <tag line="3" name="version" description="20627"/>
        <tag line="3" name="package" description="Phoenix"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Phoenix">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="13">
          <description>Output buffer and Content-Type handler</description>
          <long-description></long-description>
          <tag line="13" name="param" description="Diagnostic script type. Default outputs plaintext" type="string" variable="$scriptType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="13" name="access" description="public"/>
          <tag line="13" name="return" description="Always." type="true">
            <type by_reference="false">true</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$scriptType</name>
          <default>'HTML'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Phoenix">
        <name>logAction</name>
        <full_name>logAction</full_name>
        <docblock line="69">
          <description>Adds an action into the log table</description>
          <long-description></long-description>
          <tag line="69" name="package" description="Phoenix"/>
          <tag line="69" name="version" description="20819"/>
        </docblock>
        <argument line="75">
          <name>$action</name>
          <default></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$user</name>
          <default>'UNK=unknown'</default>
          <type/>
        </argument>
        <argument line="75">
          <name>$remarks</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="75">
          <name>$ip</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="75">
          <name>$ua</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Phoenix">
        <name>throwNiceDataException</name>
        <full_name>throwNiceDataException</full_name>
        <docblock line="103">
          <description>Throws a nicely formatted error page</description>
          <long-description></long-description>
          <tag line="103" name="package" description="Phoenix"/>
          <tag line="103" name="version" description="20819"/>
          <tag line="103" name="param" description="PDO Exception object from failed query" type="\PDOException" variable="$e">
            <type by_reference="false">\PDOException</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$e</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="126" package="Phoenix">
        <name>niceException</name>
        <full_name>niceException</full_name>
        <docblock line="119">
          <description>Error handling output function</description>
          <long-description></long-description>
          <tag line="119" name="package" description="Phoenix"/>
          <tag line="119" name="version" description="20819"/>
          <tag line="119" name="param" description="Unformatted (for insertion within a &lt;pre&gt; tag) error technical information. Use stacktraces where applicable." type="string" variable="$pretext">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$pretext</name>
          <default>'No further information supplied'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="Phoenix">
        <name>fetchNews</name>
        <full_name>fetchNews</full_name>
        <docblock line="132">
          <description>Loads news items</description>
          <long-description></long-description>
          <tag line="132" name="package" description="Phoenix"/>
          <tag line="132" name="version" description="21220"/>
        </docblock>
        <argument line="138">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="138">
          <name>$for</name>
          <default>5</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="153" package="Phoenix">
        <name>relativeTime</name>
        <full_name>relativeTime</full_name>
        <docblock line="150">
          <description>Relative datetime strings from Zachstronaut</description>
          <long-description></long-description>
        </docblock>
        <argument line="153">
          <name>$ptime</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="180" package="Phoenix">
        <name>cleanse</name>
        <full_name>cleanse</full_name>
        <docblock line="177">
          <description>Strips HTML and performs nl2br on a string.</description>
          <long-description>&lt;p&gt;Allows &lt;strong&gt;, &lt;em&gt; and&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;blockquote&gt;&lt;/p&gt;</long-description>
        </docblock>
        <argument line="180">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="188" package="Phoenix">
        <name>getCurrentWeek</name>
        <full_name>getCurrentWeek</full_name>
        <docblock line="185">
          <description>Returns current week</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.common.php</error>
      <error line="69" code="50015">Argument $action is missing from the Docblock of logAction()</error>
      <error line="69" code="50015">Argument $result is missing from the Docblock of logAction()</error>
      <error line="69" code="50015">Argument $user is missing from the Docblock of logAction()</error>
      <error line="69" code="50015">Argument $remarks is missing from the Docblock of logAction()</error>
      <error line="69" code="50015">Argument $ip is missing from the Docblock of logAction()</error>
      <error line="69" code="50015">Argument $ua is missing from the Docblock of logAction()</error>
      <error line="132" code="50015">Argument $start is missing from the Docblock of fetchNews()</error>
      <error line="132" code="50015">Argument $for is missing from the Docblock of fetchNews()</error>
      <error line="150" code="50015">Argument $ptime is missing from the Docblock of relativeTime()</error>
      <error line="177" code="50015">Argument $str is missing from the Docblock of cleanse()</error>
    </parse_markers>
  </file>
  <file path="class.courses.php" hash="81dab059835d97fd8e56de3e2234d785" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Phoenix">
      <extends/>
      <name>Courses</name>
      <full_name>\Courses</full_name>
      <docblock line="3">
        <description>The Courses class contains features and methods
to load multiple course data, teacher data and
class data.</description>
        <long-description></long-description>
        <tag line="3" name="author" description="Yectep Studios &lt;info@yectep.hk&gt;"/>
        <tag line="3" name="version" description="20930"/>
        <tag line="3" name="package" description="Phoenix"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="19" package="Phoenix">
        <name>getRoomList</name>
        <full_name>getRoomList</full_name>
        <docblock line="15">
          <description>Returns an array of rooms available for use based on the rooms table.</description>
          <long-description></long-description>
          <tag line="15" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="37" package="Phoenix">
        <name>getApps</name>
        <full_name>getApps</full_name>
        <docblock line="34">
          <description>Gets all applications based on a certain status</description>
          <long-description></long-description>
        </docblock>
        <argument line="37">
          <name>$status</name>
          <default>'submitted'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="77" package="Phoenix">
        <name>getAppDataById</name>
        <full_name>getAppDataById</full_name>
        <docblock line="73">
          <description>Gets and returns a data array (similar to load app) for a particular submitted application based on ID</description>
          <long-description></long-description>
          <tag line="73" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="105" package="Phoenix">
        <name>getSubjectName</name>
        <full_name>getSubjectName</full_name>
        <docblock line="101">
          <description>Get name of subject</description>
          <long-description></long-description>
          <tag line="101" name="param" description="" type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="140" package="Phoenix">
        <name>getCourseList</name>
        <full_name>getCourseList</full_name>
        <docblock line="137">
          <description>Get list of courses</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="161" package="Phoenix">
        <name>getCourseById</name>
        <full_name>getCourseById</full_name>
        <docblock line="156">
          <description>Get information on a single course based on ID</description>
          <long-description></long-description>
          <tag line="156" name="param" description="Course ID number to lookup data for" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="156" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="179" package="Phoenix">
        <name>getClassById</name>
        <full_name>getClassById</full_name>
        <docblock line="174">
          <description>Get information on a single class based on ID</description>
          <long-description></long-description>
          <tag line="174" name="param" description="Class ID number to lookup data for" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="174" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="197" package="Phoenix">
        <name>getClassEnrollment</name>
        <full_name>getClassEnrollment</full_name>
        <docblock line="192">
          <description>Get enrollments for a single class</description>
          <long-description></long-description>
          <tag line="192" name="param" description="Class ID" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="192" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="197">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="208" package="Phoenix">
        <name>getClassesOfCourseById</name>
        <full_name>getClassesOfCourseById</full_name>
        <docblock line="205">
          <description>Get course classes</description>
          <long-description></long-description>
        </docblock>
        <argument line="208">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="226" package="Phoenix">
        <name>getAgeAtWeek</name>
        <full_name>getAgeAtWeek</full_name>
        <docblock line="223">
          <description>Gets the age of the student given the week</description>
          <long-description></long-description>
        </docblock>
        <argument line="226">
          <name>$week</name>
          <default></default>
          <type/>
        </argument>
        <argument line="226">
          <name>$dob</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="250" package="Phoenix">
        <name>getTeacherById</name>
        <full_name>getTeacherById</full_name>
        <docblock line="247">
          <description>Get teacher info (email and display name)</description>
          <long-description></long-description>
        </docblock>
        <argument line="250">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="266" package="Phoenix">
        <name>getTeacher</name>
        <full_name>getTeacher</full_name>
        <docblock line="263">
          <description>Get teacher info by email.</description>
          <long-description>&lt;p&gt;Creates it and returns ID if necessary&lt;/p&gt;</long-description>
        </docblock>
        <argument line="266">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
        <argument line="266">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="274" package="Phoenix">
        <name>getActiveEnrollmentCount</name>
        <full_name>getActiveEnrollmentCount</full_name>
        <docblock line="271">
          <description>Gets active (enrolled) count for a given class ID</description>
          <long-description></long-description>
        </docblock>
        <argument line="274">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="289" package="Phoenix">
        <name>getHtmlStatus</name>
        <full_name>getHtmlStatus</full_name>
        <docblock line="286">
          <description>Returns an HTML-friendly status based on class status</description>
          <long-description></long-description>
        </docblock>
        <argument line="289">
          <name>$status</name>
          <default>'unknown'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="312" package="Phoenix">
        <name>getDifficulty</name>
        <full_name>getDifficulty</full_name>
        <docblock line="309">
          <description>Translates difficulty level to text</description>
          <long-description></long-description>
        </docblock>
        <argument line="312">
          <name>$dLevel</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="332" package="Phoenix">
        <name>getDueDate</name>
        <full_name>getDueDate</full_name>
        <docblock line="329">
          <description>Get due date</description>
          <long-description></long-description>
        </docblock>
        <argument line="332">
          <name>$week</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.courses.php</error>
      <error line="34" code="50015">Argument $status is missing from the Docblock of getApps()</error>
      <error line="205" code="50015">Argument $id is missing from the Docblock of getClassesOfCourseById()</error>
      <error line="223" code="50015">Argument $week is missing from the Docblock of getAgeAtWeek()</error>
      <error line="223" code="50015">Argument $dob is missing from the Docblock of getAgeAtWeek()</error>
      <error line="247" code="50015">Argument $id is missing from the Docblock of getTeacherById()</error>
      <error line="263" code="50015">Argument $email is missing from the Docblock of getTeacher()</error>
      <error line="263" code="50015">Argument $name is missing from the Docblock of getTeacher()</error>
      <error line="271" code="50015">Argument $cid is missing from the Docblock of getActiveEnrollmentCount()</error>
      <error line="286" code="50015">Argument $status is missing from the Docblock of getHtmlStatus()</error>
      <error line="309" code="50015">Argument $dLevel is missing from the Docblock of getDifficulty()</error>
      <error line="329" code="50015">Argument $week is missing from the Docblock of getDueDate()</error>
    </parse_markers>
  </file>
  <file path="class.data.php" hash="4b04289d5b304c4c00913ca6ad22f8ea" package="Phoenix">
    <docblock line="4">
      <description>Database host.</description>
      <long-description>&lt;p&gt;Use 127.0.0.1 instead of localhost&lt;/p&gt;</long-description>
      <tag line="4" name="package" description="Phoenix"/>
    </docblock>
    <constant namespace="global" line="8" package="Phoenix">
      <name>DB_HOST</name>
      <full_name>\DB_HOST</full_name>
      <value>'127.0.0.1'</value>
    </constant>
    <constant namespace="global" line="13" package="Phoenix">
      <name>DB_USER</name>
      <full_name>\DB_USER</full_name>
      <value>'webuser'</value>
    </constant>
    <constant namespace="global" line="18" package="Phoenix">
      <name>DB_PASS</name>
      <full_name>\DB_PASS</full_name>
      <value>'Ci$L1n0d3VPS'</value>
    </constant>
    <constant namespace="global" line="23" package="Phoenix">
      <name>DB_NAME</name>
      <full_name>\DB_NAME</full_name>
      <value>'phoenix2'</value>
    </constant>
    <constant namespace="global" line="28" package="Phoenix">
      <name>DB_DSN</name>
      <full_name>\DB_DSN</full_name>
      <value>'mysql:dbname=' . DB_NAME . ';host=' . DB_HOST</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="37" package="Phoenix">
      <extends/>
      <name>Data</name>
      <full_name>\Data</full_name>
      <docblock line="30">
        <description>Database class</description>
        <long-description/>
        <tag line="30" name="author" description="Yectep Studios &lt;info@yectep.hk&gt;"/>
        <tag line="30" name="version" description="20624"/>
        <tag line="30" name="package" description="Phoenix"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="42" namespace="global" package="Default">
        <name>$objInstance</name>
        <default/>
        <docblock line="39">
          <description>Forwarder variable.</description>
          <long-description>&lt;p&gt;&lt;b&gt;Internal Use Only&lt;/b&gt;&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="49" package="Phoenix">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="44">
          <description>Constructor is set to protected so nobody can access it</description>
          <long-description/>
          <tag line="44" name="see" description="\__destruct()" refers="\__destruct()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="58" package="Phoenix">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="53">
          <description>Destruct is set to protected so nobody can access it</description>
          <long-description/>
          <tag line="53" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="65" package="Phoenix">
        <name>__clone</name>
        <full_name>__clone</full_name>
        <docblock line="62">
          <description>Used for forwarding requests so we don't need &lt;code&gt;new Data&lt;/code&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="72" package="Phoenix">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="67">
          <description>Returns DB instance or create initial connection</description>
          <long-description/>
          <tag line="67" name="return" description="" type="\$objInstance;">
            <type by_reference="false">\$objInstance;</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="89" package="Phoenix">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="83">
          <description>Passes on any static calls to this class onto the singleton PDO instance</description>
          <long-description/>
          <tag line="83" name="param" description="" type="\" variable="$chrMethod"/>
          <tag line="83" name="param" description="" type="\" variable="$arrArguments"/>
          <tag line="83" name="return" description="" type="\$mix">
            <type by_reference="false">\$mix</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$chrMethod</name>
          <default/>
          <type/>
        </argument>
        <argument line="89">
          <name>$arrArguments</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="class.enrollment.php" hash="d41d8cd98f00b204e9800998ecf8427e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.enrollment.php</error>
    </parse_markers>
  </file>
  <file path="class.laoshi.php" hash="9c3a3f04d71a5a35eb65eebef2b30856" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="Phoenix">
      <extends/>
      <name>Laoshi</name>
      <full_name>\Laoshi</full_name>
      <docblock line="3">
        <description>Laoshi provides all staff portal major functions.</description>
        <long-description>&lt;p&gt;Must be initialized.&lt;/p&gt;</long-description>
        <tag line="3" name="author" description="Yectep Studios &lt;info@yectep.hk&gt;"/>
        <tag line="3" name="version" description="30104"/>
        <tag line="3" name="package" description="Phoenix"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="13" namespace="global" package="Default">
        <name>$sso</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$myPerms</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="Phoenix">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="16">
          <description>Constructor class gets staff type</description>
          <long-description></long-description>
        </docblock>
        <argument line="19">
          <name>$objId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Phoenix">
        <name>fetchDefaultPage</name>
        <full_name>fetchDefaultPage</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Phoenix">
        <name>fetchNavPage</name>
        <full_name>fetchNavPage</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="62" package="Phoenix">
        <name>perms</name>
        <full_name>perms</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="75" package="Phoenix">
        <name>getStaff</name>
        <full_name>getStaff</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.laoshi.php</error>
      <error line="13" code="50018">No DocBlock was found for property $sso</error>
      <error line="14" code="50018">No DocBlock was found for property $myPerms</error>
      <error line="16" code="50015">Argument $objId is missing from the Docblock of __construct()</error>
      <error line="30" code="50010">No DocBlock was found for method fetchDefaultPage()</error>
      <error line="45" code="50010">No DocBlock was found for method fetchNavPage()</error>
      <error line="62" code="50010">No DocBlock was found for method perms()</error>
      <error line="75" code="50010">No DocBlock was found for method getStaff()</error>
    </parse_markers>
  </file>
  <file path="class.mailchimp.php" hash="15bb92d25d0fd9f4c6a4cfa628ad4fd5" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>MCAPI</name>
      <full_name>\MCAPI</full_name>
      <property final="false" static="false" visibility="public" line="4" namespace="global" package="Default">
        <name>$version</name>
        <default>"1.3"</default>
      </property>
      <property final="false" static="false" visibility="public" line="5" namespace="global" package="Default">
        <name>$errorMessage</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="6" namespace="global" package="Default">
        <name>$errorCode</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="11" namespace="global" package="Default">
        <name>$apiUrl</name>
        <default></default>
        <docblock line="8">
          <description>Cache the information on the API location on the server</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$timeout</name>
        <default>300</default>
        <docblock line="13">
          <description>Default to a 300 second timeout on server calls</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$chunkSize</name>
        <default>8192</default>
        <docblock line="18">
          <description>Default to a 8K chunk size</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$api_key</name>
        <default></default>
        <docblock line="23">
          <description>Cache the user api_key so we only have to log in once per client instantiation</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$secure</name>
        <default>false</default>
        <docblock line="28">
          <description>Cache the user api_key so we only have to log in once per client instantiation</description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>MCAPI</name>
        <full_name>MCAPI</full_name>
        <docblock line="33">
          <description>Connect to the MailChimp API for a given list.</description>
          <long-description></long-description>
          <tag line="33" name="param" description="Your MailChimp apikey" type="string" variable="$apikey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="param" description="Whether or not this should use a secure connection" type="string" variable="$secure">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$apikey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Default">
        <name>setTimeout</name>
        <full_name>setTimeout</full_name>
        <argument line="44">
          <name>$seconds</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Default">
        <name>getTimeout</name>
        <full_name>getTimeout</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Default">
        <name>useSecure</name>
        <full_name>useSecure</full_name>
        <argument line="53">
          <name>$val</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Default">
        <name>campaignUnschedule</name>
        <full_name>campaignUnschedule</full_name>
        <docblock line="61">
          <description>Unschedule a campaign that is scheduled to be sent in the future</description>
          <long-description></long-description>
          <tag line="61" name="section" description="Campaign  Related"/>
          <tag line="61" name="example" description="mcapi_campaignUnschedule.php"/>
          <tag line="61" name="example" description="xml-rpc_campaignUnschedule.php"/>
          <tag line="61" name="param" description="the id of the campaign to unschedule" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="true on success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Default">
        <name>campaignSchedule</name>
        <full_name>campaignSchedule</full_name>
        <docblock line="77">
          <description>Schedule a campaign to be sent in the future</description>
          <long-description></long-description>
          <tag line="77" name="section" description="Campaign  Related"/>
          <tag line="77" name="example" description="mcapi_campaignSchedule.php"/>
          <tag line="77" name="example" description="xml-rpc_campaignSchedule.php"/>
          <tag line="77" name="param" description="the id of the campaign to schedule" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="param" description="the time to schedule the campaign. For A/B Split &quot;schedule&quot; campaigns, the time for Group A - in YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;" type="string" variable="$schedule_time">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="param" description="optional -the time to schedule Group B of an A/B Split &quot;schedule&quot; campaign - in YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;" type="string" variable="$schedule_time_b">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="true on success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$schedule_time</name>
          <default></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$schedule_time_b</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Default">
        <name>campaignScheduleBatch</name>
        <full_name>campaignScheduleBatch</full_name>
        <docblock line="97">
          <description>Schedule a campaign to be sent in batches sometime in the future.</description>
          <long-description>&lt;p&gt;Only valid for "regular" campaigns&lt;/p&gt;</long-description>
          <tag line="97" name="section" description="Campaign  Related"/>
          <tag line="97" name="param" description="the id of the campaign to schedule" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="the time to schedule the campaign." type="string" variable="$schedule_time">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="optional - the number of batches between 2 and 26 to send. defaults to 2" type="string" variable="$num_batches">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="optional - the number of minutes between each batch - 5, 10, 15, 20, 25, 30, or 60. defaults to 5" type="string" variable="$stagger_mins">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="return" description="true on success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="108">
          <name>$schedule_time</name>
          <default></default>
          <type/>
        </argument>
        <argument line="108">
          <name>$num_batches</name>
          <default>2</default>
          <type/>
        </argument>
        <argument line="108">
          <name>$stagger_mins</name>
          <default>5</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Default">
        <name>campaignResume</name>
        <full_name>campaignResume</full_name>
        <docblock line="117">
          <description>Resume sending an AutoResponder or RSS campaign</description>
          <long-description></long-description>
          <tag line="117" name="section" description="Campaign  Related"/>
          <tag line="117" name="param" description="the id of the campaign to pause" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="117" name="return" description="true on success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="Default">
        <name>campaignPause</name>
        <full_name>campaignPause</full_name>
        <docblock line="131">
          <description>Pause an AutoResponder or RSS campaign from sending</description>
          <long-description></long-description>
          <tag line="131" name="section" description="Campaign  Related"/>
          <tag line="131" name="param" description="the id of the campaign to pause" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="return" description="true on success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="Default">
        <name>campaignSendNow</name>
        <full_name>campaignSendNow</full_name>
        <docblock line="145">
          <description>Send a given campaign immediately.</description>
          <long-description>&lt;p&gt;For RSS campaigns, this will "start" them.&lt;/p&gt;</long-description>
          <tag line="145" name="section" description="Campaign  Related"/>
          <tag line="145" name="example" description="mcapi_campaignSendNow.php"/>
          <tag line="145" name="example" description="xml-rpc_campaignSendNow.php"/>
          <tag line="145" name="param" description="the id of the campaign to send" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="return" description="true on success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="Default">
        <name>campaignSendTest</name>
        <full_name>campaignSendTest</full_name>
        <docblock line="162">
          <description>Send a test of this campaign to the provided email address</description>
          <long-description></long-description>
          <tag line="162" name="section" description="Campaign  Related"/>
          <tag line="162" name="example" description="mcapi_campaignSendTest.php"/>
          <tag line="162" name="example" description="xml-rpc_campaignSendTest.php"/>
          <tag line="162" name="param" description="the id of the campaign to test" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="param" description="an array of email address to receive the test message" type="array" variable="$test_emails">
            <type by_reference="false">array</type>
          </tag>
          <tag line="162" name="param" description="optional by default (null) both formats are sent - &quot;html&quot; or &quot;text&quot; send just that format" type="string" variable="$send_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="return" description="true on success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="175">
          <name>$test_emails</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="176">
          <name>$send_type</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="Default">
        <name>campaignSegmentTest</name>
        <full_name>campaignSegmentTest</full_name>
        <docblock line="184">
          <description>Allows one to test their segmentation rules before creating a campaign using them</description>
          <long-description></long-description>
          <tag line="184" name="section" description="Campaign  Related"/>
          <tag line="184" name="example" description="mcapi_campaignSegmentTest.php"/>
          <tag line="184" name="example" description="xml-rpc_campaignSegmentTest.php"/>
          <tag line="184" name="param" description="the list to test segmentation on - get lists using lists()" type="string" variable="$list_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="param" description="with 2 keys:&#10;string &quot;match&quot; controls whether to use AND or OR when applying your options - expects &quot;&lt;strong&gt;any&lt;/strong&gt;&quot; (for OR) or &quot;&lt;strong&gt;all&lt;/strong&gt;&quot; (for AND)&#10;array &quot;conditions&quot; - up to 10 different criteria to apply while segmenting. Each criteria row must contain 3 keys - &quot;&lt;strong&gt;field&lt;/strong&gt;&quot;, &quot;&lt;strong&gt;op&lt;/strong&gt;&quot;, and &quot;&lt;strong&gt;value&lt;/strong&gt;&quot; - and possibly a fourth, &quot;&lt;strong&gt;extra&lt;/strong&gt;&quot;, based on these definitions:&#10;Field = &quot;&lt;strong&gt;date&lt;/strong&gt;&quot; : Select based on signup date&#10;Valid Op(eration): &lt;strong&gt;eq&lt;/strong&gt; (is) / &lt;strong&gt;gt&lt;/strong&gt; (after) / &lt;strong&gt;lt&lt;/strong&gt; (before)&#10;Valid Values:&#10;string last_campaign_sent  uses the date of the last campaign sent&#10;string campaign_id - uses the send date of the campaign that carriers the Id submitted - see campaigns()&#10;string YYYY-MM-DD - any date in the form of YYYY-MM-DD - &lt;em&gt;note:&lt;/em&gt; anything that appears to start with YYYY will be treated as a date&#10;Field = &quot;&lt;strong&gt;last_changed&lt;/strong&gt;&quot; : Select based on subscriber record last changed date&#10;Valid Op(eration): &lt;strong&gt;eq&lt;/strong&gt; (is) / &lt;strong&gt;gt&lt;/strong&gt; (after) / &lt;strong&gt;lt&lt;/strong&gt; (before)&#10;Valid Values:&#10;string last_campaign_sent  uses the date of the last campaign sent&#10;string campaign_id - uses the send date of the campaign that carriers the Id submitted - see campaigns()&#10;string YYYY-MM-DD - any date in the form of YYYY-MM-DD - &lt;em&gt;note:&lt;/em&gt; anything that appears to start with YYYY will be treated as a date&#10;Field = &quot;&lt;strong&gt;interests-X&lt;/strong&gt;&quot;: where X is the Grouping Id from listInterestGroupings()&#10;Valid Op(erations): &lt;strong&gt;one&lt;/strong&gt; / &lt;strong&gt;none&lt;/strong&gt; / &lt;strong&gt;all&lt;/strong&gt;&#10;Valid Values: a comma delimited of interest groups for the list - see listInterestGroupings()&#10;Field = &quot;&lt;strong&gt;aim&lt;/strong&gt;&quot;&#10;Valid Op(erations): &lt;strong&gt;open&lt;/strong&gt; / &lt;strong&gt;noopen&lt;/strong&gt; / &lt;strong&gt;click&lt;/strong&gt; / &lt;strong&gt;noclick&lt;/strong&gt;&#10;Valid Values: &quot;&lt;strong&gt;any&lt;/strong&gt;&quot; or a valid AIM-enabled Campaign that has been sent&#10;Field = &quot;&lt;strong&gt;rating&lt;/strong&gt;&quot; : allows matching based on list member ratings&#10;Valid Op(erations):  &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;)&#10;Valid Values: a number between 0 and 5&#10;Field = &quot;&lt;strong&gt;ecomm_prod&lt;/strong&gt;&quot; or &quot;&lt;strong&gt;ecomm_prod&lt;/strong&gt;&quot;: allows matching product and category names from purchases&#10;Valid Op(erations):&#10;&lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;) / &lt;strong&gt;like&lt;/strong&gt; (like '%blah%') / &lt;strong&gt;nlike&lt;/strong&gt; (not like '%blah%') / &lt;strong&gt;starts&lt;/strong&gt; (like 'blah%') / &lt;strong&gt;ends&lt;/strong&gt; (like '%blah')&#10;Valid Values: any string&#10;Field = &quot;&lt;strong&gt;ecomm_spent_one&lt;/strong&gt;&quot; or &quot;&lt;strong&gt;ecomm_spent_all&lt;/strong&gt;&quot; : allows matching purchase amounts on a single order or all orders&#10;Valid Op(erations): &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;)&#10;Valid Values: a number&#10;Field = &quot;&lt;strong&gt;ecomm_date&lt;/strong&gt;&quot; : allow matching based on order dates&#10;Valid Op(eration): &lt;strong&gt;eq&lt;/strong&gt; (is) / &lt;strong&gt;gt&lt;/strong&gt; (after) / &lt;strong&gt;lt&lt;/strong&gt; (before)&#10;Valid Values:&#10;string last_campaign_sent  uses the date of the last campaign sent&#10;string campaign_id - uses the send date of the campaign that carriers the Id submitted - see campaigns()&#10;string YYYY-MM-DD - any date in the form of YYYY-MM-DD - &lt;em&gt;note:&lt;/em&gt; anything that appears to start with YYYY will be treated as a date&#10;Field = &quot;&lt;strong&gt;social_gender&lt;/strong&gt;&quot; : allows matching against the gender acquired from SocialPro&#10;Valid Op(eration): &lt;strong&gt;eq&lt;/strong&gt; (is) / &lt;strong&gt;ne&lt;/strong&gt; (is not)&#10;Valid Values: male, female&#10;Field = &quot;&lt;strong&gt;social_age&lt;/strong&gt;&quot; : allows matching against the age acquired from SocialPro&#10;Valid Op(erations):  &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;)&#10;Valid Values: any number&#10;Field = &quot;&lt;strong&gt;social_influence&lt;/strong&gt;&quot; : allows matching against the influence acquired from SocialPro&#10;Valid Op(erations):  &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;)&#10;Valid Values: a number between 0 and 5&#10;Field = &quot;&lt;strong&gt;social_network&lt;/strong&gt;&quot; :&#10;Valid Op(erations):  &lt;strong&gt;member&lt;/strong&gt; (is a member of) / &lt;strong&gt;notmember&lt;/strong&gt; (is not a member of)&#10;Valid Values: twitter, facebook, myspace, linkedin, flickr&#10;Field = &quot;&lt;strong&gt;static_segment&lt;/strong&gt;&quot; :&#10;Valid Op(erations): &lt;strong&gt;eq&lt;/strong&gt; (is in) / &lt;strong&gt;ne&lt;/strong&gt; (is not in)&#10;Valid Values: an int - get from listStaticSegments()&#10;Field = &quot;&lt;strong&gt;default_location&lt;/strong&gt;&quot; : the location we automatically assign to a subscriber based on where we've seen their activity originate&#10;Valid Op(erations): &lt;strong&gt;ipgeostate&lt;/strong&gt; (within a US state) / &lt;strong&gt;ipgeonotstate&lt;/strong&gt; (not within a US state) / &lt;strong&gt;ipgeocountry&lt;/strong&gt; (within a country) / &lt;strong&gt;ipgeonotcountry&lt;/strong&gt; (not within a country) / &lt;strong&gt;ipgeoin&lt;/strong&gt; (within lat/lng parameters) / &lt;strong&gt;ipgeonotin&lt;/strong&gt; (not within lat/lng parameters)&#10;Valid Values:&#10;string ipgeostate/ipgeonotstate  a full US state name (not case sensitive)&#10;string ipgeocountry/ipgeonotcountry  an ISO3166 2 digit country code (not case sensitive)&#10;int ipgeoin/ipgeonotin a distance in miles centered around a point you must specify by also passing &lt;strong&gt;lat&lt;/strong&gt; (latitude) and &lt;strong&gt;lng&lt;/strong&gt; (longitude) parameters&#10;Field = A &lt;strong&gt;Birthday&lt;/strong&gt; type Merge Var. Use &lt;strong&gt;Merge0-Merge30&lt;/strong&gt; or the &lt;strong&gt;Custom Tag&lt;/strong&gt; you've setup for your merge field - see listMergeVars(). Note, Brithday fields can &lt;strong&gt;only&lt;/strong&gt; use the operations listed here.&#10;Valid Op(erations): &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;starts&lt;/strong&gt; (month equals) / &lt;strong&gt;ends&lt;/strong&gt; (day equals)&#10;Valid Values: Any valid number for the operation being checked.&#10;Field = A &lt;strong&gt;Zip&lt;/strong&gt; type Merge Var. Use &lt;strong&gt;Merge0-Merge30&lt;/strong&gt; or the &lt;strong&gt;Custom Tag&lt;/strong&gt; you've setup for your merge field - see listMergeVars(). Note, Zip fields can &lt;strong&gt;only&lt;/strong&gt; use the operations listed here.&#10;Valid Op(erations): &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;geoin&lt;/strong&gt; (US only)&#10;Valid Values: For &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt;, a Zip Code. For &lt;strong&gt;geoin&lt;/strong&gt;, a radius in miles&#10;Extra Value: Only for &lt;strong&gt;geoin&lt;/strong&gt; - the Zip Code to be used as the center point&#10;Field = An &lt;strong&gt;Address&lt;/strong&gt; type Merge Var. Use &lt;strong&gt;Merge0-Merge30&lt;/strong&gt; or the &lt;strong&gt;Custom Tag&lt;/strong&gt; you've setup for your merge field - see listMergeVars(). Note, Address fields can &lt;strong&gt;only&lt;/strong&gt; use the operations listed here.&#10;Valid Op(erations): &lt;strong&gt;like&lt;/strong&gt; (like '%blah%') / &lt;strong&gt;nlike&lt;/strong&gt; (not like '%blah%') / &lt;strong&gt;geoin&lt;/strong&gt;&#10;Valid Values: For &lt;strong&gt;like&lt;/strong&gt; and &lt;strong&gt;nlike&lt;/strong&gt;, a string. For &lt;strong&gt;geoin&lt;/strong&gt;, a radius in miles&#10;Extra Value: Only for &lt;strong&gt;geoin&lt;/strong&gt; - the Zip Code to be used as the center point&#10;Field = A &lt;strong&gt;Number&lt;/strong&gt; type Merge Var. Use &lt;strong&gt;Merge0-Merge30&lt;/strong&gt; or the &lt;strong&gt;Custom Tag&lt;/strong&gt; you've setup for your merge field - see listMergeVars(). Note, Number fields can &lt;strong&gt;only&lt;/strong&gt; use the operations listed here.&#10;Valid Op(erations): &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&lt;) /&#10;Valid Values: Any valid number.&#10;Default Field = A Merge Var. Use &lt;strong&gt;Merge0-Merge30&lt;/strong&gt; or the &lt;strong&gt;Custom Tag&lt;/strong&gt; you've setup for your merge field - see listMergeVars()&#10;Valid Op(erations):&#10;&lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;) / &lt;strong&gt;like&lt;/strong&gt; (like '%blah%') / &lt;strong&gt;nlike&lt;/strong&gt; (not like '%blah%') / &lt;strong&gt;starts&lt;/strong&gt; (like 'blah%') / &lt;strong&gt;ends&lt;/strong&gt; (like '%blah')&#10;Valid Values: any string" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="184" name="return" description="total The total number of subscribers matching your segmentation options" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="289">
          <name>$list_id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="289">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="398" package="Default">
        <name>campaignCreate</name>
        <full_name>campaignCreate</full_name>
        <docblock line="296">
          <description>Create a new draft campaign to send.</description>
          <long-description>&lt;p&gt;You &lt;strong&gt;can not&lt;/strong&gt; have more than 32,000 campaigns in your account.&lt;/p&gt;</long-description>
          <tag line="296" name="section" description="Campaign  Related"/>
          <tag line="296" name="example" description="mcapi_campaignCreate.php"/>
          <tag line="296" name="example" description="xml-rpc_campaignCreate.php"/>
          <tag line="296" name="example" description="xml-rpc_campaignCreateABSplit.php"/>
          <tag line="296" name="example" description="xml-rpc_campaignCreateRss.php"/>
          <tag line="296" name="param" description="the Campaign Type to create - one of &quot;regular&quot;, &quot;plaintext&quot;, &quot;absplit&quot;, &quot;rss&quot;, &quot;auto&quot;" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="296" name="param" description="a hash of the standard options for this campaign :&#10;string list_id the list to send this campaign to- get lists using lists()&#10;string subject the subject line for your campaign message&#10;string from_email the From: email address for your campaign message&#10;string from_name the From: name for your campaign message (not an email address)&#10;string to_name the To: name recipients will see (not email address)&#10;int template_id optional - use this user-created template to generate the HTML content of the campaign (takes precendence over other template options)&#10;int gallery_template_id optional - use a template from the public gallery to generate the HTML content of the campaign (takes precendence over base template options)&#10;int base_template_id optional - use this a base/start-from-scratch template to generate the HTML content of the campaign&#10;int folder_id optional - automatically file the new campaign in the folder_id passed. Get using folders() - note that Campaigns and Autoresponders have separate folder setupsn&#10;array tracking optional - set which recipient actions will be tracked, as a struct of boolean values with the following keys: &quot;opens&quot;, &quot;html_clicks&quot;, and &quot;text_clicks&quot;.  By default, opens and HTML clicks will be tracked. Click tracking can not be disabled for Free accounts.&#10;string title optional - an internal name to use for this campaign.  By default, the campaign subject will be used.&#10;boolean authenticate optional - set to true to enable SenderID, DomainKeys, and DKIM authentication, defaults to false.&#10;array analytics optional - if provided, use a struct with &quot;service type&quot; as a key and the &quot;service tag&quot; as a value. Use &quot;google&quot; for Google Analytics, &quot;clicktale&quot; for ClickTale, and &quot;gooal&quot; for Goo.al tracking. The &quot;tag&quot; is any custom text (up to 50 characters) that should be included.&#10;boolean auto_footer optional Whether or not we should auto-generate the footer for your content. Mostly useful for content from URLs or Imports&#10;boolean inline_css optional Whether or not css should be automatically inlined when this campaign is sent, defaults to false.&#10;boolean generate_text optional Whether of not to auto-generate your Text content from the HTML content. Note that this will be ignored if the Text part of the content passed is not empty, defaults to false.&#10;boolean auto_tweet optional If set, this campaign will be auto-tweeted when it is sent - defaults to false. Note that if a Twitter account isn't linked, this will be silently ignored.&#10;array auto_fb_post optional If set, this campaign will be auto-posted to the page_ids contained in the array. If a Facebook account isn't linked or the account does not have permission to post to the page_ids requested, those failures will be silently ignored.&#10;boolean fb_comments optional If true, the Facebook comments (and thus the &lt;a href=&quot;http://kb.mailchimp.com/article/i-dont-want-an-archiave-of-my-campaign-can-i-turn-it-off/&quot; target=&quot;_blank&quot;&gt;archive bar&lt;/a&gt; will be displayed. If false, Facebook comments will not be enabled (does not imply no archive bar, see previous link). Defaults to &quot;true&quot;.&#10;boolean timewarp optional If set, this campaign must be scheduled 24 hours in advance of sending - default to false. Only valid for &quot;regular&quot; campaigns and &quot;absplit&quot; campaigns that split on schedule_time.&#10;boolean ecomm360 optional If set, our &lt;a href=&quot;http://www.mailchimp.com/blog/ecommerce-tracking-plugin/&quot; target=&quot;_blank&quot;&gt;Ecommerce360 tracking&lt;/a&gt; will be enabled for links in the campaign&#10;array crm_tracking optional If set, enable CRM tracking for:&lt;div style=&quot;padding-left:15px&quot;&gt;&lt;table&gt;&#10;array salesforce optional Enable SalesForce push back&lt;div style=&quot;padding-left:15px&quot;&gt;&lt;table&gt;&#10;bool campaign optional - if true, create a Campaign object and update it with aggregate stats&#10;bool notes  optional - if true, attempt to update Contact notes based on email address&lt;/table&gt;&lt;/div&gt;&#10;array highrise optional Enable SalesForce push back&lt;div style=&quot;padding-left:15px&quot;&gt;&lt;table&gt;&#10;bool campaign optional - if true, create a Kase object and update it with aggregate stats&#10;bool notes  optional - if true, attempt to update Contact notes based on email address&lt;/table&gt;&lt;/div&gt;&#10;array capsule optional Enable Capsule push back (only notes are supported)&lt;div style=&quot;padding-left:15px&quot;&gt;&lt;table&gt;&#10;bool notes optional - if true, attempt to update Contact notes based on email address&lt;/table&gt;&lt;/div&gt;&lt;/table&gt;&lt;/div&gt;" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="296" name="param" description="the content for this campaign - use a struct with the following keys:&#10;string html for pasted HTML content&#10;string text for the plain-text version&#10;string url to have us pull in content from a URL. Note, this will override any other content options - for lists with Email Format options, you'll need to turn on generate_text as well&#10;string archive to send a Base64 encoded archive file for us to import all media from. Note, this will override any other content options - for lists with Email Format options, you'll need to turn on generate_text as well&#10;string archive_type optional - only necessary for the &quot;archive&quot; option. Supported formats are: zip, tar.gz, tar.bz2, tar, tgz, tbz . If not included, we will default to zip&#10;If you chose a template instead of pasting in your HTML content, then use &quot;html_&quot; followed by the template sections as keys - for example, use a key of &quot;html_MAIN&quot; to fill in the &quot;MAIN&quot; section of a template." type="array" variable="$content">
            <type by_reference="false">array</type>
          </tag>
          <tag line="296" name="param" description="optional - if you wish to do Segmentation with this campaign this array should contain: see campaignSegmentTest(). It's suggested that you test your options against campaignSegmentTest()." type="array" variable="$segment_opts">
            <type by_reference="false">array</type>
          </tag>
          <tag line="296" name="param" description="optional -&#10;For RSS Campaigns this, array should contain:&#10;string url the URL to pull RSS content from - it will be verified and must exist&#10;string schedule optional one of &quot;daily&quot;, &quot;weekly&quot;, &quot;monthly&quot; - defaults to &quot;daily&quot;&#10;string schedule_hour optional an hour between 0 and 24 - default to 4 (4am &lt;em&gt;local time&lt;/em&gt;) - applies to all schedule types&#10;string schedule_weekday optional for &quot;weekly&quot; only, a number specifying the day of the week to send: 0 (Sunday) - 6 (Saturday) - defaults to 1 (Monday)&#10;string schedule_monthday optional for &quot;monthly&quot; only, a number specifying the day of the month to send (1 - 28) or &quot;last&quot; for the last day of a given month. Defaults to the 1st day of the month&#10;array days optional used for &quot;daily&quot; schedules only, an array of the &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-8601#Week_dates&quot; target=&quot;_blank&quot;&gt;ISO-8601 weekday numbers&lt;/a&gt; to send on&#10;bool 1 optional Monday, defaults to true&#10;bool 2 optional Tuesday, defaults to true&#10;bool 3 optional Wednesday, defaults to true&#10;bool 4 optional Thursday, defaults to true&#10;bool 5 optional Friday, defaults to true&#10;bool 6 optional Saturday, defaults to true&#10;bool 7 optional Sunday, defaults to true&#10;For A/B Split campaigns, this array should contain:&#10;string split_test The values to segment based on. Currently, one of: &quot;subject&quot;, &quot;from_name&quot;, &quot;schedule&quot;. NOTE, for &quot;schedule&quot;, you will need to call campaignSchedule() separately!&#10;string pick_winner How the winner will be picked, one of: &quot;opens&quot; (by the open_rate), &quot;clicks&quot; (by the click rate), &quot;manual&quot; (you pick manually)&#10;int wait_units optional the default time unit to wait before auto-selecting a winner - use &quot;3600&quot; for hours, &quot;86400&quot; for days. Defaults to 86400.&#10;int wait_time optional the number of units to wait before auto-selecting a winner - defaults to 1, so if not set, a winner will be selected after 1 Day.&#10;int split_size optional this is a percentage of what size the Campaign's List plus any segmentation options results in. &quot;schedule&quot; type forces 50%, all others default to 10%&#10;string from_name_a optional sort of, required when split_test is &quot;from_name&quot;&#10;string from_name_b optional sort of, required when split_test is &quot;from_name&quot;&#10;string from_email_a optional sort of, required when split_test is &quot;from_name&quot;&#10;string from_email_b optional sort of, required when split_test is &quot;from_name&quot;&#10;string subject_a optional sort of, required when split_test is &quot;subject&quot;&#10;string subject_b optional sort of, required when split_test is &quot;subject&quot;&#10;For AutoResponder campaigns, this array should contain:&#10;string offset-units one of &quot;hourly&quot;, &quot;day&quot;, &quot;week&quot;, &quot;month&quot;, &quot;year&quot; - required&#10;string offset-time optional, sort of - the number of units must be a number greater than 0 for signup based autoresponders, ignored for &quot;hourly&quot;&#10;string offset-dir either &quot;before&quot; or &quot;after&quot;, ignored for &quot;hourly&quot;&#10;string event optional &quot;signup&quot; (default) to base this members added to a list, &quot;date&quot;, &quot;annual&quot;, or &quot;birthday&quot; to base this on merge field in the list, &quot;campaignOpen&quot; or &quot;campaignClicka&quot; to base this on any activity for a campaign, &quot;campaignClicko&quot; to base this on clicks on a specific URL in a campaign, &quot;mergeChanged&quot; to base this on a specific merge field being changed to a specific value&#10;string event-datemerge optional sort of, this is required if the event is &quot;date&quot;, &quot;annual&quot;, &quot;birthday&quot;, or &quot;mergeChanged&quot;&#10;string campaign_id optional sort of, required for &quot;campaignOpen&quot;, &quot;campaignClicka&quot;, or &quot;campaignClicko&quot;&#10;string campaign_url optional sort of, required for &quot;campaignClicko&quot;&#10;int schedule_hour The hour of the day - 24 hour format in GMT - the autoresponder should be triggered, ignored for &quot;hourly&quot;&#10;boolean use_import_time whether or not imported subscribers (ie, &lt;em&gt;any&lt;/em&gt; non-double optin subscribers) will receive&#10;array days optional used for &quot;daily&quot; schedules only, an array of the &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-8601#Week_dates&quot; target=&quot;_blank&quot;&gt;ISO-8601 weekday numbers&lt;/a&gt; to send on&#10;bool 1 optional Monday, defaults to true&#10;bool 2 optional Tuesday, defaults to true&#10;bool 3 optional Wednesday, defaults to true&#10;bool 4 optional Thursday, defaults to true&#10;bool 5 optional Friday, defaults to true&#10;bool 6 optional Saturday, defaults to true&#10;bool 7 optional Sunday, defaults to true" type="array" variable="$type_opts">
            <type by_reference="false">array</type>
          </tag>
          <tag line="296" name="return" description="the ID for the created campaign" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="398">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="398">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
        <argument line="398">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
        <argument line="398">
          <name>$segment_opts</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="398">
          <name>$type_opts</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="429" package="Default">
        <name>campaignUpdate</name>
        <full_name>campaignUpdate</full_name>
        <docblock line="408">
          <description>Update just about any setting for a campaign that has &lt;em&gt;not&lt;/em&gt; been sent.</description>
          <long-description>&lt;p&gt;See campaignCreate() for details.&lt;/p&gt;

&lt;p&gt;Caveats:&amp;lt;br/&gt;&lt;/p&gt;

&lt;ul class='simplelist square'&gt;
       &lt;li&gt;If you set list_id, all segmentation options will be deleted and must be re-added.&lt;/li&gt;
       &lt;li&gt;If you set template_id, you need to follow that up by setting it's 'content'&lt;/li&gt;
       &lt;li&gt;If you set segment_opts, you should have tested your options against campaignSegmentTest() as campaignUpdate() will not allow you to set a segment that includes no members.&lt;/li&gt;
       &lt;li&gt;To clear/unset segment_opts, pass an empty string or array as the value. Various wrappers may require one or the other.&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="408" name="section" description="Campaign  Related"/>
          <tag line="408" name="example" description="mcapi_campaignUpdate.php"/>
          <tag line="408" name="example" description="mcapi_campaignUpdateAB.php"/>
          <tag line="408" name="example" description="xml-rpc_campaignUpdate.php"/>
          <tag line="408" name="example" description="xml-rpc_campaignUpdateAB.php"/>
          <tag line="408" name="param" description="the Campaign Id to update" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="408" name="param" description="the parameter name ( see campaignCreate() ). For items in the &lt;strong&gt;options&lt;/strong&gt; array, this will be that parameter's name (subject, from_email, etc.). Additional parameters will be that option name  (content, segment_opts). &quot;type_opts&quot; will be the name of the type - rss, auto, etc." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="408" name="param" description="an appropriate value for the parameter ( see campaignCreate() ). For items in the &lt;strong&gt;options&lt;/strong&gt; array, this will be that parameter's value. For additional parameters, this is the same value passed to them." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="408" name="return" description="true if the update succeeds, otherwise an error will be thrown" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="429">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="429">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="429">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="446" package="Default">
        <name>campaignReplicate</name>
        <full_name>campaignReplicate</full_name>
        <docblock line="437">
          <description>Replicate a campaign.</description>
          <long-description></long-description>
          <tag line="437" name="section" description="Campaign  Related"/>
          <tag line="437" name="example" description="mcapi_campaignReplicate.php"/>
          <tag line="437" name="param" description="the Campaign Id to replicate" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="437" name="return" description="the id of the replicated Campaign created, otherwise an error will be thrown" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="446">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="461" package="Default">
        <name>campaignDelete</name>
        <full_name>campaignDelete</full_name>
        <docblock line="452">
          <description>Delete a campaign.</description>
          <long-description>&lt;p&gt;Seriously, "poof, gone!" - be careful!&lt;/p&gt;</long-description>
          <tag line="452" name="section" description="Campaign  Related"/>
          <tag line="452" name="example" description="mcapi_campaignDelete.php"/>
          <tag line="452" name="param" description="the Campaign Id to delete" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="452" name="return" description="true if the delete succeeds, otherwise an error will be thrown" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="461">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="531" package="Default">
        <name>campaigns</name>
        <full_name>campaigns</full_name>
        <docblock line="467">
          <description>Get the list of campaigns and their details matching the specified filters</description>
          <long-description></long-description>
          <tag line="467" name="section" description="Campaign  Related"/>
          <tag line="467" name="example" description="mcapi_campaigns.php"/>
          <tag line="467" name="example" description="xml-rpc_campaigns.php"/>
          <tag line="467" name="param" description="a hash of filters to apply to this query - all are optional:&#10;string campaign_id optional - return the campaign using a know campaign_id.  Accepts multiples separated by commas when not using exact matching.&#10;string parent_id optional - return the child campaigns using a know parent campaign_id.  Accepts multiples separated by commas when not using exact matching.&#10;string list_id optional - the list to send this campaign to- get lists using lists(). Accepts multiples separated by commas when not using exact matching.&#10;int folder_id optional - only show campaigns from this folder id - get folders using campaignFolders(). Accepts multiples separated by commas when not using exact matching.&#10;int template_id optional - only show campaigns using this template id - get templates using templates(). Accepts multiples separated by commas when not using exact matching.&#10;string  status optional - return campaigns of a specific status - one of &quot;sent&quot;, &quot;save&quot;, &quot;paused&quot;, &quot;schedule&quot;, &quot;sending&quot;. Accepts multiples separated by commas when not using exact matching.&#10;string  type optional - return campaigns of a specific type - one of &quot;regular&quot;, &quot;plaintext&quot;, &quot;absplit&quot;, &quot;rss&quot;, &quot;auto&quot;. Accepts multiples separated by commas when not using exact matching.&#10;string  from_name optional - only show campaigns that have this &quot;From Name&quot;&#10;string  from_email optional - only show campaigns that have this &quot;Reply-to Email&quot;&#10;string  title optional - only show campaigns that have this title&#10;string  subject optional - only show campaigns that have this subject&#10;string  sendtime_start optional - only show campaigns that have been sent since this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)&#10;string  sendtime_end optional - only show campaigns that have been sent before this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)&#10;boolean uses_segment - whether to return just campaigns with or without segments&#10;boolean exact optional - flag for whether to filter on exact values when filtering, or search within content for filter values - defaults to true. Using this disables the use of any filters that accept multiples." type="array" variable="$filters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="467" name="param" description="optional - control paging of campaigns, start results at this campaign #, defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="467" name="param" description="optional - control paging of campaigns, number of campaigns to return with each call, defaults to 25 (max=1000)" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="467" name="return" description="an array containing a count of all matching campaigns and the specific ones for the current page (see Returned Fields for description)&#10;int total the total number of campaigns matching the filters passed in&#10;array data the data for each campaign being returned&#10;string id Campaign Id (used for all other campaign functions)&#10;int web_id The Campaign id used in our web app, allows you to create a link directly to it&#10;string list_id The List used for this campaign&#10;int folder_id The Folder this campaign is in&#10;int template_id The Template this campaign uses&#10;string content_type How the campaign's content is put together - one of 'template', 'html', 'url'&#10;string title Title of the campaign&#10;string type The type of campaign this is (regular,plaintext,absplit,rss,inspection,auto)&#10;string create_time Creation time for the campaign&#10;string send_time Send time for the campaign - also the scheduled time for scheduled campaigns.&#10;int emails_sent Number of emails email was sent to&#10;string status Status of the given campaign (save,paused,schedule,sending,sent)&#10;string from_name From name of the given campaign&#10;string from_email Reply-to email of the given campaign&#10;string subject Subject of the given campaign&#10;string to_name Custom &quot;To:&quot; email string using merge variables&#10;string archive_url Archive link for the given campaign&#10;boolean inline_css Whether or not the campaign content's css was auto-inlined&#10;string analytics Either &quot;google&quot; if enabled or &quot;N&quot; if disabled&#10;string analytics_tag The name/tag the campaign's links were tagged with if analytics were enabled.&#10;boolean authenticate Whether or not the campaign was authenticated&#10;boolean ecomm360 Whether or not ecomm360 tracking was appended to links&#10;boolean auto_tweet Whether or not the campaign was auto tweeted after sending&#10;string auto_fb_post A comma delimited list of Facebook Profile/Page Ids the campaign was posted to after sending. If not used, blank.&#10;boolean auto_footer Whether or not the auto_footer was manually turned on&#10;boolean timewarp Whether or not the campaign used Timewarp&#10;string timewarp_schedule The time, in GMT, that the Timewarp campaign is being sent. For A/B Split campaigns, this is blank and is instead in their schedule_a and schedule_b in the type_opts array&#10;string parent_id the unique id of the parent campaign (currently only valid for rss children)&#10;array tracking the various tracking options used&#10;boolean html_clicks whether or not tracking for html clicks was enabled.&#10;boolean text_clicks whether or not tracking for text clicks was enabled.&#10;boolean opens whether or not opens tracking was enabled.&#10;string segment_text a string marked-up with HTML explaining the segment used for the campaign in plain English&#10;array segment_opts the segment used for the campaign - can be passed to campaignSegmentTest() or campaignCreate()&#10;array type_opts the type-specific options for the campaign - can be passed to campaignCreate()" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="531">
          <name>$filters</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="532">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="532">
          <name>$limit</name>
          <default>25</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="604" package="Default">
        <name>campaignStats</name>
        <full_name>campaignStats</full_name>
        <docblock line="540">
          <description>Given a list and a campaign, get all the relevant campaign statistics (opens, bounces, clicks, etc.)</description>
          <long-description></long-description>
          <tag line="540" name="section" description="Campaign  Stats"/>
          <tag line="540" name="example" description="mcapi_campaignStats.php"/>
          <tag line="540" name="example" description="xml-rpc_campaignStats.php"/>
          <tag line="540" name="param" description="the campaign id to pull stats for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="540" name="return" description="struct of the statistics for this campaign&#10;int syntax_errors Number of email addresses in campaign that had syntactical errors.&#10;int hard_bounces Number of email addresses in campaign that hard bounced.&#10;int soft_bounces Number of email addresses in campaign that soft bounced.&#10;int unsubscribes Number of email addresses in campaign that unsubscribed.&#10;int abuse_reports Number of email addresses in campaign that reported campaign for abuse.&#10;int forwards Number of times email was forwarded to a friend.&#10;int forwards_opens Number of times a forwarded email was opened.&#10;int opens Number of times the campaign was opened.&#10;string last_open Date of the last time the email was opened.&#10;int unique_opens Number of people who opened the campaign.&#10;int clicks Number of times a link in the campaign was clicked.&#10;int unique_clicks Number of unique recipient/click pairs for the campaign.&#10;string last_click Date of the last time a link in the email was clicked.&#10;int users_who_clicked Number of unique recipients who clicked on a link in the campaign.&#10;int emails_sent Number of email addresses campaign was sent to.&#10;int unique_likes total number of unique likes (Facebook)&#10;int recipient_likes total number of recipients who liked (Facebook) the campaign&#10;int facebook_likes total number of likes (Facebook) that came from Facebook&#10;array absplit If this was an absplit campaign, stats for the A and B groups will be returned&#10;int bounces_a bounces for the A group&#10;int bounces_b bounces for the B group&#10;int forwards_a forwards for the A group&#10;int forwards_b forwards for the B group&#10;int abuse_reports_a abuse reports for the A group&#10;int abuse_reports_b abuse reports for the B group&#10;int unsubs_a unsubs for the A group&#10;int unsubs_b unsubs for the B group&#10;int recipients_click_a clicks for the A group&#10;int recipients_click_b clicks for the B group&#10;int forwards_opens_a opened forwards for the A group&#10;int forwards_opens_b opened forwards for the B group&#10;int opens_a total opens for the A group&#10;int opens_b total opens for the B group&#10;string last_open_a date/time of last open for the A group&#10;string last_open_b date/time of last open for the BG group&#10;int unique_opens_a unique opens for the A group&#10;int unique_opens_b unique opens for the B group&#10;array timewarp If this campaign was a Timewarp campaign, an array of stats from each timezone for it, with the GMT offset as they key. Each timezone will contain:&#10;int opens opens for this timezone&#10;string last_open the date/time of the last open for this timezone&#10;int unique_opens the unique opens for this timezone&#10;int clicks the total clicks for this timezone&#10;string last_click the date/time of the last click for this timezone&#10;int unique_opens the unique clicks for this timezone&#10;int bounces the total bounces for this timezone&#10;int total the total number of members sent to in this timezone&#10;int sent the total number of members delivered to in this timezone&#10;array timeseries For the first 24 hours of the campaign, per-hour stats:&#10;string timestamp The timestemp in Y-m-d H:00:00 format&#10;int emails_sent the total emails sent during the hour&#10;int unique_opens unique opens seen during the hour&#10;int recipients_click unique clicks seen during the hour" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="604">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="623" package="Default">
        <name>campaignClickStats</name>
        <full_name>campaignClickStats</full_name>
        <docblock line="610">
          <description>Get an array of the urls being tracked, and their click counts for a given campaign</description>
          <long-description></long-description>
          <tag line="610" name="section" description="Campaign  Stats"/>
          <tag line="610" name="example" description="mcapi_campaignClickStats.php"/>
          <tag line="610" name="example" description="xml-rpc_campaignClickStats.php"/>
          <tag line="610" name="param" description="the campaign id to pull stats for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="610" name="return" description="urls will be keys and contain their associated statistics:&#10;int clicks Number of times the specific link was clicked&#10;int unique Number of unique people who clicked on the specific link" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="623">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="653" package="Default">
        <name>campaignEmailDomainPerformance</name>
        <full_name>campaignEmailDomainPerformance</full_name>
        <docblock line="629">
          <description>Get the top 5 performing email domains for this campaign.</description>
          <long-description>&lt;p&gt;Users want more than 5 should use campaign campaignEmailStatsAIM()
or campaignEmailStatsAIMAll() and generate any additional stats they require.&lt;/p&gt;</long-description>
          <tag line="629" name="section" description="Campaign  Stats"/>
          <tag line="629" name="example" description="mcapi_campaignEmailDomainPerformance.php"/>
          <tag line="629" name="param" description="the campaign id to pull email domain performance for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="629" name="return" description="domains email domains and their associated stats&#10;string domain Domain name or special &quot;Other&quot; to roll-up stats past 5 domains&#10;int total_sent Total Email across all domains - this will be the same in every row&#10;int emails Number of emails sent to this domain&#10;int bounces Number of bounces&#10;int opens Number of opens&#10;int clicks Number of clicks&#10;int unsubs Number of unsubs&#10;int delivered Number of deliveries&#10;int emails_pct Percentage of emails that went to this domain (whole number)&#10;int bounces_pct Percentage of bounces from this domain (whole number)&#10;int opens_pct Percentage of opens from this domain (whole number)&#10;int clicks_pct Percentage of clicks from this domain (whole number)&#10;int unsubs_pct Percentage of unsubs from this domain (whole number)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="653">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="676" package="Default">
        <name>campaignMembers</name>
        <full_name>campaignMembers</full_name>
        <docblock line="659">
          <description>Get all email addresses the campaign was successfully sent to (ie, no bounces)</description>
          <long-description></long-description>
          <tag line="659" name="section" description="Campaign  Stats"/>
          <tag line="659" name="param" description="the campaign id to pull members for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="659" name="param" description="optional the status to pull - one of 'sent', 'hard' (bounce), or 'soft' (bounce). By default, all records are returned" type="string" variable="$status">
            <type by_reference="false">string</type>
          </tag>
          <tag line="659" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="659" name="param" description="optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="659" name="return" description="a total of all matching emails and the specific emails for this page&#10;int total   the total number of members for the campaign and status&#10;array data  the full campaign member records&#10;string email the email address sent to&#10;string status the status of the send - one of 'sent', 'hard', 'soft'&#10;string absplit_group if this was an absplit campaign, one of 'a','b', or 'winner'&#10;string tz_group if this was an timewarp campaign the timezone GMT offset the member was included in" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="676">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="676">
          <name>$status</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="676">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="676">
          <name>$limit</name>
          <default>1000</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="699" package="Default">
        <name>campaignHardBounces</name>
        <full_name>campaignHardBounces</full_name>
        <docblock line="685">
          <description>&lt;strong&gt;DEPRECATED&lt;/strong&gt; Get all email addresses with Hard Bounces for a given campaign</description>
          <long-description></long-description>
          <tag line="685" name="deprecated" description="See campaignMembers() for a replacement"/>
          <tag line="685" name="section" description="Campaign  Stats"/>
          <tag line="685" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="685" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="685" name="param" description="optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="685" name="return" description="a total of all hard bounced emails and the specific emails for this page&#10;int total   the total number of hard bounces for the campaign&#10;array data array of the full email addresses that bounced" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="699">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="699">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="699">
          <name>$limit</name>
          <default>1000</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="721" package="Default">
        <name>campaignSoftBounces</name>
        <full_name>campaignSoftBounces</full_name>
        <docblock line="707">
          <description>&lt;strong&gt;DEPRECATED&lt;/strong&gt; Get all email addresses with Soft Bounces for a given campaign</description>
          <long-description></long-description>
          <tag line="707" name="deprecated" description="See campaignMembers() for a replacement"/>
          <tag line="707" name="section" description="Campaign  Stats"/>
          <tag line="707" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="707" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="707" name="param" description="optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="707" name="return" description="a total of all soft bounced emails and the specific emails for this page&#10;int total   the total number of soft bounces for the campaign&#10;array data array of the full email addresses that bounced" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="721">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="721">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="721">
          <name>$limit</name>
          <default>1000</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="744" package="Default">
        <name>campaignUnsubscribes</name>
        <full_name>campaignUnsubscribes</full_name>
        <docblock line="729">
          <description>Get all unsubscribed email addresses for a given campaign</description>
          <long-description></long-description>
          <tag line="729" name="section" description="Campaign  Stats"/>
          <tag line="729" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="729" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="729" name="param" description="optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="729" name="return" description="a total of all unsubscribed emails and the specific emails for this page&#10;int total   the total number of unsubscribes for the campaign&#10;array data  the full email addresses that unsubscribed&#10;string email the email address that unsubscribed&#10;string reason For unsubscribes only - the reason collected for the unsubscribe. If populated, one of 'NORMAL','NOSIGNUP','INAPPROPRIATE','SPAM','OTHER'&#10;string reason_text For unsubscribes only - if the reason is OTHER, the text entered." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="744">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="744">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="744">
          <name>$limit</name>
          <default>1000</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="770" package="Default">
        <name>campaignAbuseReports</name>
        <full_name>campaignAbuseReports</full_name>
        <docblock line="752">
          <description>Get all email addresses that complained about a given campaign</description>
          <long-description></long-description>
          <tag line="752" name="section" description="Campaign  Stats"/>
          <tag line="752" name="example" description="mcapi_campaignAbuseReports.php"/>
          <tag line="752" name="param" description="the campaign id to pull abuse reports for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="752" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="752" name="param" description="optional for large data sets, the number of results to return - defaults to 500, upper limit set at 1000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="752" name="param" description="optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;" type="string" variable="$since">
            <type by_reference="false">string</type>
          </tag>
          <tag line="752" name="return" description="reports the abuse reports for this campaign&#10;int total the total reports matched&#10;array data the report data for each, including:&#10;string date date/time the abuse report was received and processed&#10;string email the email address that reported abuse&#10;string type an internal type generally specifying the orginating mail provider - may not be useful outside of filling report views" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="770">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="770">
          <name>$since</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="770">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="770">
          <name>$limit</name>
          <default>500</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="792" package="Default">
        <name>campaignAdvice</name>
        <full_name>campaignAdvice</full_name>
        <docblock line="779">
          <description>Retrieve the text presented in our app for how a campaign performed and any advice we may have for you - best
suited for display in customized reports pages.</description>
          <long-description>&lt;p&gt;Note: some messages will contain HTML - clean tags as necessary&lt;/p&gt;</long-description>
          <tag line="779" name="section" description="Campaign  Stats"/>
          <tag line="779" name="example" description="mcapi_campaignAdvice.php"/>
          <tag line="779" name="param" description="the campaign id to pull advice text for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="779" name="return" description="advice on the campaign's performance, each containing:&#10;msg the advice message&#10;type the &quot;type&quot; of the message. one of: negative, positive, or neutral" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="792">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="821" package="Default">
        <name>campaignAnalytics</name>
        <full_name>campaignAnalytics</full_name>
        <docblock line="798">
          <description>Retrieve the Google Analytics data we've collected for this campaign.</description>
          <long-description>&lt;p&gt;Note, requires Google Analytics Add-on to be installed and configured.&lt;/p&gt;</long-description>
          <tag line="798" name="section" description="Campaign  Stats"/>
          <tag line="798" name="example" description="mcapi_campaignAnalytics.php"/>
          <tag line="798" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="798" name="return" description="analytics we've collected for the passed campaign.&#10;int visits number of visits&#10;int pages number of page views&#10;int new_visits new visits recorded&#10;int bounces vistors who &quot;bounced&quot; from your site&#10;double time_on_site the total time visitors spent on your sites&#10;int goal_conversions number of goals converted&#10;double goal_value value of conversion in dollars&#10;double revenue revenue generated by campaign&#10;int transactions number of transactions tracked&#10;int ecomm_conversions number Ecommerce transactions tracked&#10;array goals an array containing goal names and number of conversions&#10;string name the name of the goal&#10;int conversions the number of conversions for the goal" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="821">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="840" package="Default">
        <name>campaignGeoOpens</name>
        <full_name>campaignGeoOpens</full_name>
        <docblock line="827">
          <description>Retrieve the countries and number of opens tracked for each.</description>
          <long-description>&lt;p&gt;Email address are not returned.&lt;/p&gt;</long-description>
          <tag line="827" name="section" description="Campaign  Stats"/>
          <tag line="827" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="827" name="return" description="countries an array of countries where opens occurred&#10;string code The ISO3166 2 digit country code&#10;string name A version of the country name, if we have it&#10;int opens The total number of opens that occurred in the country&#10;boolean region_detail Whether or not a subsequent call to campaignGeoOpensByCountry() will return anything" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="840">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="859" package="Default">
        <name>campaignGeoOpensForCountry</name>
        <full_name>campaignGeoOpensForCountry</full_name>
        <docblock line="846">
          <description>Retrieve the regions and number of opens tracked for a certain country.</description>
          <long-description>&lt;p&gt;Email address are not returned.&lt;/p&gt;</long-description>
          <tag line="846" name="section" description="Campaign  Stats"/>
          <tag line="846" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="846" name="param" description="An ISO3166 2 digit country code" type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
          <tag line="846" name="return" description="regions an array of regions within the provided country where opens occurred.&#10;string code An internal code for the region. When this is blank, it indicates we know the country, but not the region&#10;string name The name of the region, if we have one. For blank &quot;code&quot; values, this will be &quot;Rest of Country&quot;&#10;int opens The total number of opens that occurred in the country" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="859">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="859">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="901" package="Default">
        <name>campaignEepUrlStats</name>
        <full_name>campaignEepUrlStats</full_name>
        <docblock line="866">
          <description>Retrieve the tracked eepurl mentions on Twitter</description>
          <long-description></long-description>
          <tag line="866" name="section" description="Campaign  Stats"/>
          <tag line="866" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="866" name="return" description="stats an array containing tweets, retweets, clicks, and referrer related to using the campaign's eepurl&#10;array twitter various Twitter related stats&#10;int tweets Total number of tweets seen&#10;string first_tweet date and time of the first tweet seen&#10;string last_tweet date and time of the last tweet seen&#10;int retweets Total number of retweets seen&#10;string first_retweet date and time of the first retweet seen&#10;string last_retweet date and time of the last retweet seen&#10;array statuses an array of statuses recorded inclduing:&#10;string status the text of the tweet/update&#10;string screen_name the screen name as recorded when first seen&#10;string status_id the status id of the tweet (they are really unsigned 64 bit ints)&#10;string datetime the date/time of the tweet&#10;bool is_retweet whether or not this was a retweet&#10;array clicks stats related to click-throughs on the eepurl&#10;int clicks Total number of clicks seen&#10;string first_click date and time of the first click seen&#10;string last_click date and time of the first click seen&#10;array locations an array of geographic locations including:&#10;string country the country name the click was tracked to&#10;string region the region in the country the click was tracked to (if available)&#10;int total clicks total clicks occuring in this country+region pair&#10;array referrers an array of arrays, each containing&#10;string referrer the referrer, truncated to 100 bytes&#10;int clicks Total number of clicks seen from this referrer&#10;string first_click date and time of the first click seen from this referrer&#10;string last_click date and time of the first click seen from this referrer" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="901">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="921" package="Default">
        <name>campaignBounceMessage</name>
        <full_name>campaignBounceMessage</full_name>
        <docblock line="907">
          <description>Retrieve the most recent full bounce message for a specific email address on the given campaign.</description>
          <long-description>&lt;p&gt;Messages over 30 days old are subject to being removed&lt;/p&gt;</long-description>
          <tag line="907" name="section" description="Campaign  Stats"/>
          <tag line="907" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="907" name="param" description="the email address or unique id of the member to pull a bounce message for." type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="907" name="return" description="the full bounce message for this email+campaign along with some extra data.&#10;string date date/time the bounce was received and processed&#10;string email the email address that bounced&#10;string message the entire bounce message received" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="921">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="921">
          <name>$email</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="948" package="Default">
        <name>campaignBounceMessages</name>
        <full_name>campaignBounceMessages</full_name>
        <docblock line="928">
          <description>Retrieve the full bounce messages for the given campaign.</description>
          <long-description>&lt;p&gt;Note that this can return very large amounts
of data depending on how large the campaign was and how much cruft the bounce provider returned. Also,
message over 30 days old are subject to being removed&lt;/p&gt;</long-description>
          <tag line="928" name="section" description="Campaign  Stats"/>
          <tag line="928" name="example" description="mcapi_campaignBounceMessages.php"/>
          <tag line="928" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="928" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="928" name="param" description="optional for large data sets, the number of results to return - defaults to 25, upper limit set at 50" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="928" name="param" description="optional pull only messages since this time - use YYYY-MM-DD format in &lt;strong&gt;GMT&lt;/strong&gt; (we only store the date, not the time)" type="string" variable="$since">
            <type by_reference="false">string</type>
          </tag>
          <tag line="928" name="return" description="bounces the full bounce messages for this campaign&#10;int total that total number of bounce messages for the campaign&#10;array data an array containing the data for this page&#10;string date date/time the bounce was received and processed&#10;string email the email address that bounced&#10;string message the entire bounce message received" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="948">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="948">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="948">
          <name>$limit</name>
          <default>25</default>
          <type/>
        </argument>
        <argument line="948">
          <name>$since</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="987" package="Default">
        <name>campaignEcommOrders</name>
        <full_name>campaignEcommOrders</full_name>
        <docblock line="957">
          <description>Retrieve the Ecommerce Orders tracked by campaignEcommOrderAdd()</description>
          <long-description></long-description>
          <tag line="957" name="section" description="Campaign  Stats"/>
          <tag line="957" name="param" description="the campaign id to pull bounces for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="957" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="957" name="param" description="optional for large data sets, the number of results to return - defaults to 100, upper limit set at 500" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="957" name="param" description="optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;" type="string" variable="$since">
            <type by_reference="false">string</type>
          </tag>
          <tag line="957" name="return" description="the total matching orders and the specific orders for the requested page&#10;int total the total matching orders&#10;array data the actual data for each order being returned&#10;string store_id the store id generated by the plugin used to uniquely identify a store&#10;string store_name the store name collected by the plugin - often the domain name&#10;string order_id the internal order id the store tracked this order by&#10;string email  the email address that received this campaign and is associated with this order&#10;double order_total the order total&#10;double tax_total the total tax for the order (if collected)&#10;double ship_total the shipping total for the order (if collected)&#10;string order_date the date the order was tracked - from the store if possible, otherwise the GMT time we received it&#10;array lines containing detail of the order:&#10;int line_num the line number assigned to this line&#10;int product_id the product id assigned to this item&#10;string product_name the product name&#10;string product_sku the sku for the product&#10;int product_category_id the id for the product category&#10;string product_category_name the product category name&#10;int qty the quantity of items ordered&#10;cost the total cost  of items ordered" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="987">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="987">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="987">
          <name>$limit</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="987">
          <name>$since</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1013" package="Default">
        <name>campaignShareReport</name>
        <full_name>campaignShareReport</full_name>
        <docblock line="996">
          <description>Get the URL to a customized &lt;a href="http://eepurl.com/gKmL" target="_blank"&gt;VIP Report&lt;/a&gt; for the specified campaign and optionally send an email to someone with links to it.</description>
          <long-description>&lt;p&gt;Note subsequent calls will overwrite anything already set for the same campign (eg, the password)&lt;/p&gt;</long-description>
          <tag line="996" name="section" description="Campaign  Related"/>
          <tag line="996" name="param" description="the campaign id to share a report for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="996" name="param" description="optional various parameters which can be used to configure the shared report&#10;string to_email optional - optional, comma delimited list of email addresses to share the report with - no value means an email will not be sent&#10;string company optional - a company name to be displayed (use of a theme may hide this) - max 255 bytes&#10;int theme_id optional - either a global or a user-specific theme id. Currently this needs to be pulled out of either the Share Report or Cobranding web views by grabbing the &quot;theme&quot; attribute from the list presented.&#10;string  css_url    optional - a link to an external CSS file to be included after our default CSS (http://vip-reports.net/css/vip.css) &lt;strong&gt;only if&lt;/strong&gt; loaded via the &quot;secure_url&quot; - max 255 bytes" type="array" variable="$opts">
            <type by_reference="false">array</type>
          </tag>
          <tag line="996" name="return" description="Array containing details for the shared report&#10;string title The Title of the Campaign being shared&#10;string url The URL to the shared report&#10;string secure_url The URL to the shared report, including the password (good for loading in an IFRAME). For non-secure reports, this will not be returned&#10;string password If secured, the password for the report, otherwise this field will not be returned" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1013">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1013">
          <name>$opts</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1032" package="Default">
        <name>campaignContent</name>
        <full_name>campaignContent</full_name>
        <docblock line="1021">
          <description>Get the content (both html and text) for a campaign either as it would appear in the campaign archive or as the raw, original content</description>
          <long-description></long-description>
          <tag line="1021" name="section" description="Campaign  Related"/>
          <tag line="1021" name="param" description="the campaign id to get content for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1021" name="param" description="optional controls whether we return the Archive version (true) or the Raw version (false), defaults to true" type="bool" variable="$for_archive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1021" name="return" description="Array containing all content for the campaign&#10;string html The HTML content used for the campgain with merge tags intact&#10;string text The Text content used for the campgain with merge tags intact" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1032">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1032">
          <name>$for_archive</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1048" package="Default">
        <name>campaignTemplateContent</name>
        <full_name>campaignTemplateContent</full_name>
        <docblock line="1039">
          <description>Get the HTML template content sections for a campaign.</description>
          <long-description>&lt;p&gt;Note that this &lt;strong&gt;will&lt;/strong&gt; return very jagged, non-standard results based on the template
a campaign is using. You only want to use this if you want to allow editing template sections in your applicaton.&lt;/p&gt;</long-description>
          <tag line="1039" name="section" description="Campaign  Related"/>
          <tag line="1039" name="param" description="the campaign id to get content for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1039" name="return" description="array containing all content section for the campaign - section name are dependent upon the template used and thus can't be documented" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1048">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1069" package="Default">
        <name>campaignOpenedAIM</name>
        <full_name>campaignOpenedAIM</full_name>
        <docblock line="1054">
          <description>Retrieve the list of email addresses that opened a given campaign with how many times they opened - note: this AIM function is free and does
not actually require the AIM module to be installed</description>
          <long-description></long-description>
          <tag line="1054" name="section" description="Campaign Report Data"/>
          <tag line="1054" name="param" description="the campaign id to get opens for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1054" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1054" name="param" description="optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1054" name="return" description="array containing the total records matched and the specific records for this page&#10;int total the total number of records matched&#10;array data the actual opens data, including:&#10;string email Email address that opened the campaign&#10;int open_count Total number of times the campaign was opened by this email address" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1069">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1069">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1069">
          <name>$limit</name>
          <default>1000</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1089" package="Default">
        <name>campaignNotOpenedAIM</name>
        <full_name>campaignNotOpenedAIM</full_name>
        <docblock line="1077">
          <description>Retrieve the list of email addresses that did not open a given campaign</description>
          <long-description></long-description>
          <tag line="1077" name="section" description="Campaign Report Data"/>
          <tag line="1077" name="param" description="the campaign id to get no opens for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1077" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1077" name="param" description="optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1077" name="return" description="array containing the total records matched and the specific records for this page&#10;int total the total number of records matched&#10;array data the email addresses that did not open the campaign" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1089">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1089">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1089">
          <name>$limit</name>
          <default>1000</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1112" package="Default">
        <name>campaignClickDetailAIM</name>
        <full_name>campaignClickDetailAIM</full_name>
        <docblock line="1097">
          <description>Return the list of email addresses that clicked on a given url, and how many times they clicked</description>
          <long-description></long-description>
          <tag line="1097" name="section" description="Campaign Report Data"/>
          <tag line="1097" name="param" description="the campaign id to get click stats for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1097" name="param" description="the URL of the link that was clicked on" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1097" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1097" name="param" description="optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1097" name="return" description="array containing the total records matched and the specific records for this page&#10;int total the total number of records matched&#10;array data the email addresses that did not open the campaign&#10;string email Email address that opened the campaign&#10;int clicks Total number of times the URL was clicked on by this email address" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1112">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1112">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1112">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1112">
          <name>$limit</name>
          <default>1000</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1136" package="Default">
        <name>campaignEmailStatsAIM</name>
        <full_name>campaignEmailStatsAIM</full_name>
        <docblock line="1121">
          <description>Given a campaign and email address, return the entire click and open history with timestamps, ordered by time</description>
          <long-description></long-description>
          <tag line="1121" name="section" description="Campaign Report Data"/>
          <tag line="1121" name="param" description="the campaign id to get stats for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1121" name="param" description="an array of up to 50 email addresses to check OR the email &quot;id&quot; returned from listMemberInfo, Webhooks, and Campaigns. For backwards compatibility, if a string is passed, it will be treated as an array with a single element (will not work with XML-RPC)." type="array" variable="$email_address">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1121" name="return" description="an array with the keys listed in Returned Fields below&#10;int success the number of email address records found&#10;int error the number of email address records which could not be found&#10;array data arrays containing the actions (opens and clicks) that the email took, with timestamps&#10;string action The action taken (open or click)&#10;string timestamp Time the action occurred&#10;string url For clicks, the URL that was clicked" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1136">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1136">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1160" package="Default">
        <name>campaignEmailStatsAIMAll</name>
        <full_name>campaignEmailStatsAIMAll</full_name>
        <docblock line="1143">
          <description>Given a campaign and correct paging limits, return the entire click and open history with timestamps, ordered by time,
for every user a campaign was delivered to.</description>
          <long-description></long-description>
          <tag line="1143" name="section" description="Campaign Report Data"/>
          <tag line="1143" name="example" description="mcapi_campaignEmailStatsAIMAll.php"/>
          <tag line="1143" name="param" description="the campaign id to get stats for (can be gathered using campaigns())" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1143" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1143" name="param" description="optional for large data sets, the number of results to return - defaults to 100, upper limit set at 1000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1143" name="return" description="Array containing a total record count and data including the actions  (opens and clicks) for each email, with timestamps&#10;int total the total number of records&#10;array data each record keyed by email address containing arrays of actions including:&#10;string action The action taken (open or click)&#10;string timestamp Time the action occurred&#10;string url For clicks, the URL that was clicked" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1160">
          <name>$cid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1160">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1160">
          <name>$limit</name>
          <default>100</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1196" package="Default">
        <name>campaignEcommOrderAdd</name>
        <full_name>campaignEcommOrderAdd</full_name>
        <docblock line="1168">
          <description>Attach Ecommerce Order Information to a Campaign.</description>
          <long-description>&lt;p&gt;This will generally be used by ecommerce package plugins
&lt;a href="http://connect.mailchimp.com/category/ecommerce" target="_blank"&gt;provided by us or by 3rd part system developers&lt;/a&gt;.&lt;/p&gt;</long-description>
          <tag line="1168" name="section" description="Campaign  Related"/>
          <tag line="1168" name="param" description="an array of information pertaining to the order that has completed. Use the following keys:&#10;string id the Order Id&#10;string campaign_id the Campaign Id to track this order with (see the &quot;mc_cid&quot; query string variable a campaign passes)&#10;string email_id the Email Id of the subscriber we should attach this order to (see the &quot;mc_eid&quot; query string variable a campaign passes)&#10;double total The Order Total (ie, the full amount the customer ends up paying)&#10;string order_date optional the date of the order - if this is not provided, we will default the date to now&#10;double shipping optional the total paid for Shipping Fees&#10;double tax optional the total tax paid&#10;string store_id a unique id for the store sending the order in (20 bytes max)&#10;string store_name optional a &quot;nice&quot; name for the store - typically the base web address (ie, &quot;store.mailchimp.com&quot;). We will automatically update this if it changes (based on store_id)&#10;array items the individual line items for an order using these keys:&#10;&lt;div style=&quot;padding-left:30px&quot;&gt;&lt;table&gt;&#10;int line_num optional the line number of the item on the order. We will generate these if they are not passed&#10;int product_id the store's internal Id for the product. Lines that do no contain this will be skipped&#10;string sku optional the store's internal SKU for the product. (max 30 bytes)&#10;string product_name the product name for the product_id associated with this item. We will auto update these as they change (based on product_id)&#10;int category_id the store's internal Id for the (main) category associated with this product. Our testing has found this to be a &quot;best guess&quot; scenario&#10;string category_name the category name for the category_id this product is in. Our testing has found this to be a &quot;best guess&quot; scenario. Our plugins walk the category heirarchy up and send &quot;Root - SubCat1 - SubCat4&quot;, etc.&#10;double qty the quantity of the item ordered&#10;double cost the cost of a single item (ie, not the extended cost of the line)&#10;&lt;/table&gt;&lt;/div&gt;" type="array" variable="$order">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1168" name="return" description="true if the data is saved, otherwise an error is thrown." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1196">
          <name>$order</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1258" package="Default">
        <name>lists</name>
        <full_name>lists</full_name>
        <docblock line="1202">
          <description>Retrieve all of the lists defined for your user account</description>
          <long-description></long-description>
          <tag line="1202" name="section" description="List Related"/>
          <tag line="1202" name="example" description="mcapi_lists.php"/>
          <tag line="1202" name="example" description="xml-rpc_lists.php"/>
          <tag line="1202" name="param" description="a hash of filters to apply to this query - all are optional:&#10;string list_id optional - return a single list using a known list_id. Accepts multiples separated by commas when not using exact matching&#10;string list_name optional - only lists that match this name&#10;string from_name optional - only lists that have a default from name matching this&#10;string from_email optional - only lists that have a default from email matching this&#10;string from_subject optional - only lists that have a default from email matching this&#10;string created_before optional - only show lists that were created before this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)&#10;string created_after optional - only show lists that were created since this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)&#10;boolean exact optional - flag for whether to filter on exact values when filtering, or search within content for filter values - defaults to true" type="array" variable="$filters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1202" name="param" description="optional - control paging of lists, start results at this list #, defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1202" name="param" description="optional - control paging of lists, number of lists to return with each call, defaults to 25 (max=100)" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1202" name="param" description="sort_field optional - &quot;created&quot; (the created date, default) or &quot;web&quot; (the display order in the web app). Invalid values will fall back on &quot;created&quot; - case insensitive." type="string" variable="$sort_field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1202" name="param" description="sort_dir optional - &quot;DESC&quot; for descending (default), &quot;ASC&quot; for Ascending.  Invalid values will fall back on &quot;created&quot; - case insensitive. Note: to get the exact display order as the web app you'd use &quot;web&quot; and &quot;ASC&quot;" type="string" variable="$sort_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1202" name="return" description="an array with keys listed in Returned Fields below&#10;int total the total number of lists which matched the provided filters&#10;array data the lists which matched the provided filters, including the following for&#10;string id The list id for this list. This will be used for all other list management functions.&#10;int web_id The list id used in our web app, allows you to create a link directly to it&#10;string name The name of the list.&#10;string date_created The date that this list was created.&#10;boolean email_type_option Whether or not the List supports multiple formats for emails or just HTML&#10;boolean use_awesomebar Whether or not campaigns for this list use the Awesome Bar in archives by default&#10;string default_from_name Default From Name for campaigns using this list&#10;string default_from_email Default From Email for campaigns using this list&#10;string default_subject Default Subject Line for campaigns using this list&#10;string default_language Default Language for this list's forms&#10;double list_rating An auto-generated activity score for the list (0 - 5)&#10;string subscribe_url_short Our eepurl shortened version of this list's subscribe form (will not change)&#10;string subscribe_url_long The full version of this list's subscribe form (host will vary)&#10;string beamer_address The email address to use for this list's &lt;a href=&quot;http://kb.mailchimp.com/article/how-do-i-import-a-campaign-via-email-email-beamer/&quot;&gt;Email Beamer&lt;/a&gt;&#10;string visibility Whether this list is Public (pub) or Private (prv). Used internally for projects like &lt;a href=&quot;http://blog.mailchimp.com/introducing-wavelength/&quot; target=&quot;_blank&quot;&gt;Wavelength&lt;/a&gt;&#10;array stats various stats and counts for the list - many of these are cached for at least 5 minutes&#10;double member_count The number of active members in the given list.&#10;double unsubscribe_count The number of members who have unsubscribed from the given list.&#10;double cleaned_count The number of members cleaned from the given list.&#10;double member_count_since_send The number of active members in the given list since the last campaign was sent&#10;double unsubscribe_count_since_send The number of members who have unsubscribed from the given list since the last campaign was sent&#10;double cleaned_count_since_send The number of members cleaned from the given list since the last campaign was sent&#10;double campaign_count The number of campaigns in any status that use this list&#10;double grouping_count The number of Interest Groupings for this list&#10;double group_count The number of Interest Groups (regardless of grouping) for this list&#10;double merge_var_count The number of merge vars for this list (not including the required EMAIL one)&#10;double avg_sub_rate the average number of subscribe per month for the list (empty value if we haven't calculated this yet)&#10;double avg_unsub_rate the average number of unsubscribe per month for the list (empty value if we haven't calculated this yet)&#10;double target_sub_rate the target subscription rate for the list to keep it growing (empty value if we haven't calculated this yet)&#10;double open_rate the average open rate per campaign for the list  (empty value if we haven't calculated this yet)&#10;double click_rate the average click rate per campaign for the list  (empty value if we haven't calculated this yet)&#10;array modules Any list specific modules installed for this list (example is SocialPro)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1258">
          <name>$filters</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="1259">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1259">
          <name>$limit</name>
          <default>25</default>
          <type/>
        </argument>
        <argument line="1259">
          <name>$sort_field</name>
          <default>'created'</default>
          <type/>
        </argument>
        <argument line="1259">
          <name>$sort_dir</name>
          <default>'DESC'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1288" package="Default">
        <name>listMergeVars</name>
        <full_name>listMergeVars</full_name>
        <docblock line="1269">
          <description>Get the list of merge tags for a given list, including their name, tag, and required setting</description>
          <long-description></long-description>
          <tag line="1269" name="section" description="List Related"/>
          <tag line="1269" name="example" description="xml-rpc_listMergeVars.php"/>
          <tag line="1269" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1269" name="return" description="list of merge tags for the list&#10;string name Name of the merge field&#10;bool req Denotes whether the field is required (true) or not (false)&#10;string field_type The &quot;data type&quot; of this merge var. One of: email, text, number, radio, dropdown, date, address, phone, url, imageurl&#10;bool public Whether or not this field is visible to list subscribers&#10;bool show Whether the list owner has this field displayed on their list dashboard&#10;string order The order the list owner has set this field to display in&#10;string default The default value the list owner has set for this field&#10;string size The width of the field to be used&#10;string tag The merge tag that's used for forms and listSubscribe() and listUpdateMember()&#10;array choices For radio and dropdown field types, an array of the options available" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1288">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1317" package="Default">
        <name>listMergeVarAdd</name>
        <full_name>listMergeVarAdd</full_name>
        <docblock line="1294">
          <description>Add a new merge tag to a given list</description>
          <long-description></long-description>
          <tag line="1294" name="section" description="List Related"/>
          <tag line="1294" name="example" description="xml-rpc_listMergeVarAdd.php"/>
          <tag line="1294" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1294" name="param" description="The merge tag to add, e.g. FNAME. 10 bytes max, valid characters: &quot;A-Z 0-9 _&quot; no spaces, dashes, etc." type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1294" name="param" description="The long description of the tag being added, used for user displays" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1294" name="param" description="optional Various options for this merge var. &lt;em&gt;note:&lt;/em&gt; for historical purposes this can also take a &quot;boolean&quot;&#10;string field_type optional one of: text, number, radio, dropdown, date, address, phone, url, imageurl, zip, birthday - defaults to text&#10;boolean req optional indicates whether the field is required - defaults to false&#10;boolean public optional indicates whether the field is displayed in public - defaults to true&#10;boolean show optional indicates whether the field is displayed in the app's list member view - defaults to true&#10;int order The order this merge tag should be displayed in - this will cause existing values to be reset so this fits&#10;string default_value optional the default value for the field. See listSubscribe() for formatting info. Defaults to blank&#10;array choices optional kind of - an array of strings to use as the choices for radio and dropdown type fields&#10;string dateformat optional only valid for birthday and date fields. For birthday type, must be &quot;MM/DD&quot; (default) or &quot;DD/MM&quot;. For date type, must be &quot;MM/DD/YYYY&quot; (default) or &quot;DD/MM/YYYY&quot;. Any other values will be converted to the default.&#10;string phoneformat optional &quot;US&quot; is the default - any other value will cause them to be unformatted (international)&#10;string defaultcountry optional the &lt;a href=&quot;http://www.iso.org/iso/english_country_names_and_code_elements&quot; target=&quot;_blank&quot;&gt;ISO 3166 2 digit character code&lt;/a&gt; for the default country. Defaults to &quot;US&quot;. Anything unrecognized will be converted to the default." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1294" name="return" description="true if the request succeeds, otherwise an error will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1317">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1317">
          <name>$tag</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1317">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1317">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1337" package="Default">
        <name>listMergeVarUpdate</name>
        <full_name>listMergeVarUpdate</full_name>
        <docblock line="1327">
          <description>Update most parameters for a merge tag on a given list.</description>
          <long-description>&lt;p&gt;You cannot currently change the merge type&lt;/p&gt;</long-description>
          <tag line="1327" name="section" description="List Related"/>
          <tag line="1327" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1327" name="param" description="The merge tag to update" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1327" name="param" description="The options to change for a merge var. See listMergeVarAdd() for valid options. &quot;tag&quot; and &quot;name&quot; may also be used here." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1327" name="return" description="true if the request succeeds, otherwise an error will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1337">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1337">
          <name>$tag</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1337">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1356" package="Default">
        <name>listMergeVarDel</name>
        <full_name>listMergeVarDel</full_name>
        <docblock line="1345">
          <description>Delete a merge tag from a given list and all its members.</description>
          <long-description>&lt;p&gt;Seriously - the data is removed from all members as well!
Note that on large lists this method may seem a bit slower than calls you typically make.&lt;/p&gt;</long-description>
          <tag line="1345" name="section" description="List Related"/>
          <tag line="1345" name="example" description="xml-rpc_listMergeVarDel.php"/>
          <tag line="1345" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1345" name="param" description="The merge tag to delete" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1345" name="return" description="true if the request succeeds, otherwise an error will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1356">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1356">
          <name>$tag</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1372" package="Default">
        <name>listMergeVarReset</name>
        <full_name>listMergeVarReset</full_name>
        <docblock line="1363">
          <description>Completely resets all data stored in a merge var on a list.</description>
          <long-description>&lt;p&gt;All data is removed and this action can not be undone.&lt;/p&gt;</long-description>
          <tag line="1363" name="section" description="List Related"/>
          <tag line="1363" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1363" name="param" description="The merge tag to reset" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1363" name="return" description="true if the request succeeds, otherwise an error will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1372">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1372">
          <name>$tag</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1396" package="Default">
        <name>listInterestGroupings</name>
        <full_name>listInterestGroupings</full_name>
        <docblock line="1379">
          <description>Get the list of interest groupings for a given list, including the label, form information, and included groups for each</description>
          <long-description></long-description>
          <tag line="1379" name="section" description="List Related"/>
          <tag line="1379" name="example" description="xml-rpc_listInterestGroupings.php"/>
          <tag line="1379" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1379" name="return" description="list of interest groups for the list&#10;int id The id for the Grouping&#10;string name Name for the Interest groups&#10;string form_field Gives the type of interest group: checkbox,radio,select&#10;array groups Array of the grouping options including:&#10;string bit the bit value - not really anything to be done with this&#10;string name the name of the group&#10;string display_order the display order of the group, if set&#10;int subscribers total number of subscribers who have this group" type="\struct">
            <type by_reference="false">\struct</type>
          </tag>
        </docblock>
        <argument line="1396">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1413" package="Default">
        <name>listInterestGroupAdd</name>
        <full_name>listInterestGroupAdd</full_name>
        <docblock line="1402">
          <description>Add a single Interest Group - if interest groups for the List are not yet enabled, adding the first
 group will automatically turn them on.</description>
          <long-description></long-description>
          <tag line="1402" name="section" description="List Related"/>
          <tag line="1402" name="example" description="xml-rpc_listInterestGroupAdd.php"/>
          <tag line="1402" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1402" name="param" description="the interest group to add - group names must be unique within a grouping" type="string" variable="$group_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1402" name="param" description="optional The grouping to add the new group to - get using listInterestGrouping() . If not supplied, the first grouping on the list is used." type="int" variable="$grouping_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1402" name="return" description="true if the request succeeds, otherwise an error will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1413">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1413">
          <name>$group_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1413">
          <name>$grouping_id</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1431" package="Default">
        <name>listInterestGroupDel</name>
        <full_name>listInterestGroupDel</full_name>
        <docblock line="1421">
          <description>Delete a single Interest Group - if the last group for a list is deleted, this will also turn groups for the list off.</description>
          <long-description></long-description>
          <tag line="1421" name="section" description="List Related"/>
          <tag line="1421" name="example" description="xml-rpc_listInterestGroupDel.php"/>
          <tag line="1421" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1421" name="param" description="the interest group to delete" type="string" variable="$group_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1421" name="param" description="The grouping to delete the group from - get using listInterestGrouping() . If not supplied, the first grouping on the list is used." type="int" variable="$grouping_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1421" name="return" description="true if the request succeeds, otherwise an error will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1431">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1431">
          <name>$group_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1431">
          <name>$grouping_id</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1449" package="Default">
        <name>listInterestGroupUpdate</name>
        <full_name>listInterestGroupUpdate</full_name>
        <docblock line="1439">
          <description>Change the name of an Interest Group</description>
          <long-description></long-description>
          <tag line="1439" name="section" description="List Related"/>
          <tag line="1439" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1439" name="param" description="the interest group name to be changed" type="string" variable="$old_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1439" name="param" description="the new interest group name to be set" type="string" variable="$new_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1439" name="param" description="optional The grouping to delete the group from - get using listInterestGrouping() . If not supplied, the first grouping on the list is used." type="int" variable="$grouping_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1439" name="return" description="true if the request succeeds, otherwise an error will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1449">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1449">
          <name>$old_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1449">
          <name>$new_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1449">
          <name>$grouping_id</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1470" package="Default">
        <name>listInterestGroupingAdd</name>
        <full_name>listInterestGroupingAdd</full_name>
        <docblock line="1458">
          <description>Add a new Interest Grouping - if interest groups for the List are not yet enabled, adding the first
 grouping will automatically turn them on.</description>
          <long-description></long-description>
          <tag line="1458" name="section" description="List Related"/>
          <tag line="1458" name="example" description="xml-rpc_listInterestGroupingAdd.php"/>
          <tag line="1458" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1458" name="param" description="the interest grouping to add - grouping names must be unique" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1458" name="param" description="The type of the grouping to add - one of &quot;checkboxes&quot;, &quot;hidden&quot;, &quot;dropdown&quot;, &quot;radio&quot;" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1458" name="param" description="The lists of initial group names to be added - at least 1 is required and the names must be unique within a grouping. If the number takes you over the 60 group limit, an error will be thrown." type="array" variable="$groups">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1458" name="return" description="the new grouping id if the request succeeds, otherwise an error will be thrown" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="1470">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1470">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1470">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1470">
          <name>$groups</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1489" package="Default">
        <name>listInterestGroupingUpdate</name>
        <full_name>listInterestGroupingUpdate</full_name>
        <docblock line="1479">
          <description>Update an existing Interest Grouping</description>
          <long-description></long-description>
          <tag line="1479" name="section" description="List Related"/>
          <tag line="1479" name="example" description="xml-rpc_listInterestGroupingUpdate.php"/>
          <tag line="1479" name="param" description="the interest grouping id - get from listInterestGroupings()" type="int" variable="$grouping_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1479" name="param" description="The name of the field to update - either &quot;name&quot; or &quot;type&quot;. Groups with in the grouping should be manipulated using the standard listInterestGroup* methods" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1479" name="param" description="The new value of the field. Grouping names must be unique - only &quot;hidden&quot; and &quot;checkboxes&quot; grouping types can be converted between each other." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1479" name="return" description="true if the request succeeds, otherwise an error will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1489">
          <name>$grouping_id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1489">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1489">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1505" package="Default">
        <name>listInterestGroupingDel</name>
        <full_name>listInterestGroupingDel</full_name>
        <docblock line="1497">
          <description>Delete an existing Interest Grouping - this will permanently delete all contained interest groups and will remove those selections from all list members</description>
          <long-description></long-description>
          <tag line="1497" name="section" description="List Related"/>
          <tag line="1497" name="example" description="xml-rpc_listInterestGroupingDel.php"/>
          <tag line="1497" name="param" description="the interest grouping id - get from listInterestGroupings()" type="int" variable="$grouping_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1497" name="return" description="true if the request succeeds, otherwise an error will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1505">
          <name>$grouping_id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1530" package="Default">
        <name>listWebhooks</name>
        <full_name>listWebhooks</full_name>
        <docblock line="1511">
          <description>Return the Webhooks configured for the given list</description>
          <long-description></long-description>
          <tag line="1511" name="section" description="List Related"/>
          <tag line="1511" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1511" name="return" description="list of webhooks&#10;string url the URL for this Webhook&#10;array actions the possible actions and whether they are enabled&#10;bool subscribe triggered when subscribes happen&#10;bool unsubscribe triggered when unsubscribes happen&#10;bool profile triggered when profile updates happen&#10;bool cleaned triggered when a subscriber is cleaned (bounced) from a list&#10;bool upemail triggered when a subscriber's email address is changed&#10;bool campaign triggered when a campaign is sent or canceled&#10;array sources the possible sources and whether they are enabled&#10;bool user whether user/subscriber triggered actions are returned&#10;bool admin whether admin (manual, in-app) triggered actions are returned&#10;bool api  whether api triggered actions are returned" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1530">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1555" package="Default">
        <name>listWebhookAdd</name>
        <full_name>listWebhookAdd</full_name>
        <docblock line="1536">
          <description>Add a new Webhook URL for the given list</description>
          <long-description></long-description>
          <tag line="1536" name="section" description="List Related"/>
          <tag line="1536" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1536" name="param" description="a valid URL for the Webhook - it will be validated. note that a url may only exist on a list once." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1536" name="param" description="optional a hash of actions to fire this Webhook for&#10;bool subscribe optional as subscribes occur, defaults to true&#10;bool unsubscribe optional as subscribes occur, defaults to true&#10;bool profile optional as profile updates occur, defaults to true&#10;bool cleaned optional as emails are cleaned from the list, defaults to true&#10;bool upemail optional when  subscribers change their email address, defaults to true&#10;bool campaign option when a campaign is sent or canceled, defaults to true" type="array" variable="$actions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1536" name="param" description="optional a hash of sources to fire this Webhook for&#10;bool user optional user/subscriber initiated actions, defaults to true&#10;bool admin optional admin actions in our web app, defaults to true&#10;bool api optional actions that happen via API calls, defaults to false" type="array" variable="$sources">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1536" name="return" description="true if the call succeeds, otherwise an exception will be thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1555">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$actions</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="1556">
          <name>$sources</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1574" package="Default">
        <name>listWebhookDel</name>
        <full_name>listWebhookDel</full_name>
        <docblock line="1566">
          <description>Delete an existing Webhook URL from a given list</description>
          <long-description></long-description>
          <tag line="1566" name="section" description="List Related"/>
          <tag line="1566" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1566" name="param" description="the URL of a Webhook on this list" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1566" name="return" description="true if the call succeeds, otherwise an exception will be thrown" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1574">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1574">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1594" package="Default">
        <name>listStaticSegments</name>
        <full_name>listStaticSegments</full_name>
        <docblock line="1581">
          <description>Retrieve all of the Static Segments for a list.</description>
          <long-description></long-description>
          <tag line="1581" name="section" description="List Related"/>
          <tag line="1581" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1581" name="return" description="an array of parameters for each static segment&#10;int id the id of the segment&#10;string name the name for the segment&#10;int member_count the total number of subscribed members currently in a segment&#10;string created_date the date/time the segment was created&#10;string last_update the date/time the segment was last updated (add or del)&#10;string last_reset the date/time the segment was last reset (ie had all members cleared from it)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1594">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1611" package="Default">
        <name>listStaticSegmentAdd</name>
        <full_name>listStaticSegmentAdd</full_name>
        <docblock line="1600">
          <description>Save a segment against a list for later use.</description>
          <long-description>&lt;p&gt;There is no limit to the number of segments which can be saved. Static Segments &lt;strong&gt;are not&lt;/strong&gt; tied
 to any merge data, interest groups, etc. They essentially allow you to configure an unlimited number of custom segments which will have standard performance.
 When using proper segments, Static Segments are one of the available options for segmentation just as if you used a merge var (and they can be used with other segmentation
 options), though performance may degrade at that point.&lt;/p&gt;</long-description>
          <tag line="1600" name="section" description="List Related"/>
          <tag line="1600" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1600" name="param" description="a unique name per list for the segment - 50 byte maximum length, anything longer will throw an error" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1600" name="return" description="the id of the new segment, otherwise an error will be thrown." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="1611">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1611">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1626" package="Default">
        <name>listStaticSegmentReset</name>
        <full_name>listStaticSegmentReset</full_name>
        <docblock line="1618">
          <description>Resets a static segment - removes &lt;strong&gt;all&lt;/strong&gt; members from the static segment.</description>
          <long-description>&lt;p&gt;Note: does not actually affect list member data&lt;/p&gt;</long-description>
          <tag line="1618" name="section" description="List Related"/>
          <tag line="1618" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1618" name="param" description="the id of the static segment to reset  - get from listStaticSegments()" type="int" variable="$seg_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1618" name="return" description="true if it worked, otherwise an error is thrown." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1626">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1626">
          <name>$seg_id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1641" package="Default">
        <name>listStaticSegmentDel</name>
        <full_name>listStaticSegmentDel</full_name>
        <docblock line="1633">
          <description>Delete a static segment.</description>
          <long-description>&lt;p&gt;Note that this will, of course, remove any member affiliations with the segment&lt;/p&gt;</long-description>
          <tag line="1633" name="section" description="List Related"/>
          <tag line="1633" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1633" name="param" description="the id of the static segment to delete - get from listStaticSegments()" type="int" variable="$seg_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1633" name="return" description="true if it worked, otherwise an error is thrown." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1641">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1641">
          <name>$seg_id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1663" package="Default">
        <name>listStaticSegmentMembersAdd</name>
        <full_name>listStaticSegmentMembersAdd</full_name>
        <docblock line="1648">
          <description>Add list members to a static segment.</description>
          <long-description>&lt;p&gt;It is suggested that you limit batch size to no more than 10,000 addresses per call. Email addresses must exist on the list
 in order to be included - this &lt;strong&gt;will not&lt;/strong&gt; subscribe them to the list!&lt;/p&gt;</long-description>
          <tag line="1648" name="section" description="List Related"/>
          <tag line="1648" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1648" name="param" description="the id of the static segment to modify - get from listStaticSegments()" type="int" variable="$seg_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1648" name="param" description="an array of email addresses and/or unique_ids to add to the segment" type="array" variable="$batch">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1648" name="return" description="an array with the results of the operation&#10;int success the total number of successful updates (will include members already in the segment)&#10;array errors error data including:&#10;string email address the email address in question&#10;string code the error code&#10;string msg  the full error message" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1663">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1663">
          <name>$seg_id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1663">
          <name>$batch</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1686" package="Default">
        <name>listStaticSegmentMembersDel</name>
        <full_name>listStaticSegmentMembersDel</full_name>
        <docblock line="1671">
          <description>Remove list members from a static segment.</description>
          <long-description>&lt;p&gt;It is suggested that you limit batch size to no more than 10,000 addresses per call. Email addresses must exist on the list
 in order to be removed - this &lt;strong&gt;will not&lt;/strong&gt; unsubscribe them from the list!&lt;/p&gt;</long-description>
          <tag line="1671" name="section" description="List Related"/>
          <tag line="1671" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1671" name="param" description="the id of the static segment to delete - get from listStaticSegments()" type="int" variable="$seg_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1671" name="param" description="an array of email addresses and/or unique_ids to remove from the segment" type="array" variable="$batch">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1671" name="return" description="an array with the results of the operation&#10;int success the total number of succesful removals&#10;array errors error data including:&#10;string email address the email address in question&#10;string code the error code&#10;string msg  the full error message" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1686">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1686">
          <name>$seg_id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1686">
          <name>$batch</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1737" package="Default">
        <name>listSubscribe</name>
        <full_name>listSubscribe</full_name>
        <docblock line="1694">
          <description>Subscribe the provided email to a list.</description>
          <long-description>&lt;p&gt;By default this sends a confirmation email - you will not see new members until the link contained in it is clicked!&lt;/p&gt;</long-description>
          <tag line="1694" name="section" description="List Related"/>
          <tag line="1694" name="example" description="mcapi_listSubscribe.php"/>
          <tag line="1694" name="example" description="json_listSubscribe.php"/>
          <tag line="1694" name="example" description="xml-rpc_listSubscribe.php"/>
          <tag line="1694" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1694" name="param" description="the email address to subscribe" type="string" variable="$email_address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1694" name="param" description="optional merges for the email (FNAME, LNAME, etc.) (see examples below for handling &quot;blank&quot; arrays). Note that a merge field can only hold up to 255 bytes. Also, there are a few &quot;special&quot; keys:&#10;string EMAIL set this to change the email address. This is only respected on calls using update_existing or when passed to listUpdateMember()&#10;string NEW-EMAIL set this to change the email address. This is only respected on calls using update_existing or when passed to listUpdateMember(). Required to change via listBatchSubscribe() - EMAIL takes precedence on other calls, though either will work.&#10;array GROUPINGS Set Interest Groups by Grouping. Each element in this array should be an array containing the &quot;groups&quot; parameter which contains a comma delimited list of Interest Groups to add. Commas in Interest Group names should be escaped with a backslash. ie, &quot;,&quot; =&amp;gt; &quot;\,&quot; and either an &quot;id&quot; or &quot;name&quot; parameter to specify the Grouping - get from listInterestGroupings()&#10;string OPTIN_IP Set the Opt-in IP field. &lt;em&gt;Abusing this may cause your account to be suspended.&lt;/em&gt; We do validate this and it must not be a private IP address.&#10;string OPTIN_TIME Set the Opt-in Time field. &lt;em&gt;Abusing this may cause your account to be suspended.&lt;/em&gt; We do validate this and it must be a valid date. Use YYYY-MM-DD HH:ii:ss to be safe. Generally, though, anything strtotime() understands we'll understand - &lt;a href=&quot;http://us2.php.net/strtotime&quot; target=&quot;_blank&quot;&gt;http://us2.php.net/strtotime&lt;/a&gt;&#10;array MC_LOCATION Set the members geographic location. By default if this merge field exists, we'll update using the optin_ip if it exists. If the array contains LATITUDE and LONGITUDE keys, they will be used. NOTE - this will slow down each subscribe call a bit, especially for lat/lng pairs in sparsely populated areas. Currently our automated background processes can and will overwrite this based on opens and clicks.&#10;&lt;strong&gt;Handling Field Data Types&lt;/strong&gt; - most fields you can just pass a string and all is well. For some, though, that is not the case...&#10;Field values should be formatted as follows:&#10;string address For the string version of an Address, the fields should be delimited by &lt;strong&gt;2&lt;/strong&gt; spaces. Address 2 can be skipped. The Country should be a 2 character ISO-3166-1 code and will default to your default country if not set&#10;array address For the array version of an Address, the requirements for Address 2 and Country are the same as with the string version. Then simply pass us an array with the keys &lt;strong&gt;addr1&lt;/strong&gt;, &lt;strong&gt;addr2&lt;/strong&gt;, &lt;strong&gt;city&lt;/strong&gt;, &lt;strong&gt;state&lt;/strong&gt;, &lt;strong&gt;zip&lt;/strong&gt;, &lt;strong&gt;country&lt;/strong&gt; and appropriate values for each&#10;string birthday the month and day of birth, passed as MM/DD&#10;array birthday the month and day of birth, passed in an array using the keys &lt;strong&gt;month&lt;/strong&gt; and &lt;strong&gt;day&lt;/strong&gt;&#10;string date use YYYY-MM-DD to be safe. Generally, though, anything strtotime() understands we'll understand - &lt;a href=&quot;http://us2.php.net/strtotime&quot; target=&quot;_blank&quot;&gt;http://us2.php.net/strtotime&lt;/a&gt;&#10;string dropdown can be a normal string - we &lt;em&gt;will&lt;/em&gt; validate that the value is a valid option&#10;string image must be a valid, existing url. we &lt;em&gt;will&lt;/em&gt; check its existence&#10;string multi_choice can be a normal string - we &lt;em&gt;will&lt;/em&gt; validate that the value is a valid option&#10;double number pass in a valid number - anything else will turn in to zero (0). Note, this will be rounded to 2 decimal places&#10;string phone If your account has the US Phone numbers option set, this &lt;em&gt;must&lt;/em&gt; be in the form of NPA-NXX-LINE (404-555-1212). If not, we assume an International number and will simply set the field with what ever number is passed in.&#10;string website This is a standard string, but we &lt;em&gt;will&lt;/em&gt; verify that it looks like a valid URL&#10;string zip A U.S. zip code. We'll validate this is a 4 or 5 digit number." type="array" variable="$merge_vars">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1694" name="param" description="optional email type preference for the email (html, text, or mobile defaults to html)" type="string" variable="$email_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1694" name="param" description="optional flag to control whether a double opt-in confirmation message is sent, defaults to true. &lt;em&gt;Abusing this may cause your account to be suspended.&lt;/em&gt;" type="bool" variable="$double_optin">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1694" name="param" description="optional flag to control whether existing subscribers should be updated instead of throwing an error, defaults to false" type="bool" variable="$update_existing">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1694" name="param" description="optional flag to determine whether we replace the interest groups with the groups provided or we add the provided groups to the member's interest groups (optional, defaults to true)" type="bool" variable="$replace_interests">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1694" name="param" description="optional if your double_optin is false and this is true, we will send your lists Welcome Email if this subscribe succeeds - this will *not* fire if we end up updating an existing subscriber. If double_optin is true, this has no effect. defaults to false." type="bool" variable="$send_welcome">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1694" name="return" description="true on success, false on failure. When using MCAPI.class.php, the value can be tested and error messages pulled from the MCAPI object (see below)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1737">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1737">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1737">
          <name>$merge_vars</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="1737">
          <name>$email_type</name>
          <default>'html'</default>
          <type/>
        </argument>
        <argument line="1737">
          <name>$double_optin</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="1737">
          <name>$update_existing</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1737">
          <name>$replace_interests</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="1737">
          <name>$send_welcome</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1764" package="Default">
        <name>listUnsubscribe</name>
        <full_name>listUnsubscribe</full_name>
        <docblock line="1750">
          <description>Unsubscribe the given email address from the list</description>
          <long-description></long-description>
          <tag line="1750" name="section" description="List Related"/>
          <tag line="1750" name="example" description="mcapi_listUnsubscribe.php"/>
          <tag line="1750" name="example" description="xml-rpc_listUnsubscribe.php"/>
          <tag line="1750" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1750" name="param" description="the email address to unsubscribe  OR the email &quot;id&quot; returned from listMemberInfo, Webhooks, and Campaigns" type="string" variable="$email_address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1750" name="param" description="flag to completely delete the member from your list instead of just unsubscribing, default to false" type="boolean" variable="$delete_member">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1750" name="param" description="flag to send the goodbye email to the email address, defaults to true" type="boolean" variable="$send_goodbye">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1750" name="param" description="flag to send the unsubscribe notification email to the address defined in the list email notification settings, defaults to true" type="boolean" variable="$send_notify">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1750" name="return" description="true on success, false on failure. When using MCAPI.class.php, the value can be tested and error messages pulled from the MCAPI object (see below)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1764">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1764">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1764">
          <name>$delete_member</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1764">
          <name>$send_goodbye</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="1764">
          <name>$send_notify</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1788" package="Default">
        <name>listUpdateMember</name>
        <full_name>listUpdateMember</full_name>
        <docblock line="1774">
          <description>Edit the email address, merge fields, and interest groups for a list member.</description>
          <long-description>&lt;p&gt;If you are doing a batch update on lots of users,
consider using listBatchSubscribe() with the update_existing and possible replace_interests parameter.&lt;/p&gt;</long-description>
          <tag line="1774" name="section" description="List Related"/>
          <tag line="1774" name="example" description="mcapi_listUpdateMember.php"/>
          <tag line="1774" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1774" name="param" description="the current email address of the member to update OR the &quot;id&quot; for the member returned from listMemberInfo, Webhooks, and Campaigns" type="string" variable="$email_address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1774" name="param" description="array of new field values to update the member with.  See merge_vars in listSubscribe() for details." type="array" variable="$merge_vars">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1774" name="param" description="change the email type preference for the member (&quot;html&quot;, &quot;text&quot;, or &quot;mobile&quot;).  Leave blank to keep the existing preference (optional)" type="string" variable="$email_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1774" name="param" description="flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)" type="boolean" variable="$replace_interests">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1774" name="return" description="true on success, false on failure. When using MCAPI.class.php, the value can be tested and error messages pulled from the MCAPI object" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1788">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1788">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1788">
          <name>$merge_vars</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1788">
          <name>$email_type</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="1788">
          <name>$replace_interests</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1822" package="Default">
        <name>listBatchSubscribe</name>
        <full_name>listBatchSubscribe</full_name>
        <docblock line="1798">
          <description>Subscribe a batch of email addresses to a list at once.</description>
          <long-description>&lt;p&gt;If you are using a serialized version of the API, we strongly suggest that you
only run this method as a POST request, and &lt;em&gt;not&lt;/em&gt; a GET request. Maximum batch sizes vary based on the amount of data in each record,
though you should cap them at 5k - 10k records, depending on your experience. These calls are also long, so be sure you increase your timeout values.&lt;/p&gt;</long-description>
          <tag line="1798" name="section" description="List Related"/>
          <tag line="1798" name="example" description="mcapi_listBatchSubscribe.php"/>
          <tag line="1798" name="example" description="xml-rpc_listBatchSubscribe.php"/>
          <tag line="1798" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1798" name="param" description="an array of structs for each address to import with two special keys: &quot;EMAIL&quot; for the email address, and &quot;EMAIL_TYPE&quot; for the email type option (html, text, or mobile)" type="array" variable="$batch">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1798" name="param" description="flag to control whether to send an opt-in confirmation email - defaults to true" type="boolean" variable="$double_optin">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1798" name="param" description="flag to control whether to update members that are already subscribed to the list or to return an error, defaults to false (return error)" type="boolean" variable="$update_existing">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1798" name="param" description="flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)" type="boolean" variable="$replace_interests">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1798" name="return" description="Array of result counts and any errors that occurred&#10;int add_count Number of email addresses that were succesfully added&#10;int update_count Number of email addresses that were succesfully updated&#10;int error_count Number of email addresses that failed during addition/updating&#10;array errors error data including:&#10;string email address the email address in question&#10;int code the error code&#10;string message the full error message" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1822">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1822">
          <name>$batch</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1822">
          <name>$double_optin</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="1822">
          <name>$update_existing</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1822">
          <name>$replace_interests</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1852" package="Default">
        <name>listBatchUnsubscribe</name>
        <full_name>listBatchUnsubscribe</full_name>
        <docblock line="1832">
          <description>Unsubscribe a batch of email addresses to a list</description>
          <long-description></long-description>
          <tag line="1832" name="section" description="List Related"/>
          <tag line="1832" name="example" description="mcapi_listBatchUnsubscribe.php"/>
          <tag line="1832" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1832" name="param" description="array of email addresses to unsubscribe" type="array" variable="$emails">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1832" name="param" description="flag to completely delete the member from your list instead of just unsubscribing, default to false" type="boolean" variable="$delete_member">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1832" name="param" description="flag to send the goodbye email to the email addresses, defaults to true" type="boolean" variable="$send_goodbye">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1832" name="param" description="flag to send the unsubscribe notification email to the address defined in the list email notification settings, defaults to false" type="boolean" variable="$send_notify">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1832" name="return" description="Array of result counts and any errors that occurred&#10;int success_count Number of email addresses that were succesfully added/updated&#10;int error_count Number of email addresses that failed during addition/updating&#10;array errors error data including:&#10;string email address the email address in question&#10;int code the error code&#10;string message  the full error message" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1852">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1852">
          <name>$emails</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1852">
          <name>$delete_member</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1852">
          <name>$send_goodbye</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="1852">
          <name>$send_notify</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1883" package="Default">
        <name>listMembers</name>
        <full_name>listMembers</full_name>
        <docblock line="1862">
          <description>Get all of the list members for a list that are of a particular status.</description>
          <long-description>&lt;p&gt;Are you trying to get a dump including lots of merge
data or specific members of a list? If so, checkout the &lt;a href="/export"&gt;Export API&lt;/a&gt;&lt;/p&gt;</long-description>
          <tag line="1862" name="section" description="List Related"/>
          <tag line="1862" name="example" description="mcapi_listMembers.php"/>
          <tag line="1862" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1862" name="param" description="the status to get members for - one of(subscribed, unsubscribed, &lt;a target=&quot;_blank&quot; href=&quot;http://eepurl.com/gWOO&quot;&gt;cleaned&lt;/a&gt;, updated), defaults to subscribed" type="string" variable="$status">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1862" name="param" description="optional pull all members whose status (subscribed/unsubscribed/cleaned) has changed or whose profile (updated) has changed since this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)" type="string" variable="$since">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1862" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1862" name="param" description="optional for large data sets, the number of results to return - defaults to 100, upper limit set at 15000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1862" name="param" description="optional ASC for ascending, DESC for descending. defaults to ASC even if an invalid value is encountered." type="string" variable="$sort_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1862" name="return" description="Array of a the total records match and matching list member data for this page (see Returned Fields for details)&#10;int total the total matching records&#10;array data the data for each member, including:&#10;string email Member email address&#10;date timestamp timestamp of their associated status date (subscribed, unsubscribed, cleaned, or updated) in GMT&#10;string reason For unsubscribes only - the reason collected for the unsubscribe. If populated, one of 'NORMAL','NOSIGNUP','INAPPROPRIATE','SPAM','OTHER'&#10;string reason_text For unsubscribes only - if the reason is OTHER, the text entered." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1883">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1883">
          <name>$status</name>
          <default>'subscribed'</default>
          <type/>
        </argument>
        <argument line="1883">
          <name>$since</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="1883">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1883">
          <name>$limit</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="1883">
          <name>$sort_dir</name>
          <default>'ASC'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1939" package="Default">
        <name>listMemberInfo</name>
        <full_name>listMemberInfo</full_name>
        <docblock line="1894">
          <description>Get all the information for particular members of a list</description>
          <long-description></long-description>
          <tag line="1894" name="section" description="List Related"/>
          <tag line="1894" name="example" description="mcapi_listMemberInfo.php"/>
          <tag line="1894" name="example" description="xml-rpc_listMemberInfo.php"/>
          <tag line="1894" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1894" name="param" description="an array of up to 50 email addresses to get information for OR the &quot;id&quot;(s) for the member returned from listMembers, Webhooks, and Campaigns. For backwards compatibility, if a string is passed, it will be treated as an array with a single element (will not work with XML-RPC)." type="array" variable="$email_address">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1894" name="return" description="array of list members with their info in an array (see Returned Fields for details)&#10;int success the number of subscribers successfully found on the list&#10;int errors the number of subscribers who were not found on the list&#10;array data an array of arrays where each one has member info:&#10;string id The unique id for this email address on an account&#10;string email The email address associated with this record&#10;string email_type The type of emails this customer asked to get: html, text, or mobile&#10;array merges An associative array of all the merge tags and the data for those tags for this email address. &lt;em&gt;Note&lt;/em&gt;: Interest Groups are returned as comma delimited strings - if a group name contains a comma, it will be escaped with a backslash. ie, &quot;,&quot; =&amp;gt; &quot;\,&quot;. Groupings will be returned with their &quot;id&quot; and &quot;name&quot; as well as a &quot;groups&quot; field formatted just like Interest Groups&#10;string status The subscription status for this email address, either pending, subscribed, unsubscribed, or cleaned&#10;string ip_signup IP Address this address signed up from. This may be blank if single optin is used.&#10;string timestamp_signup The date/time the double optin was initiated. This may be blank if single optin is used.&#10;string ip_opt IP Address this address opted in from.&#10;string timestamp_opt The date/time the optin completed&#10;int member_rating the rating of the subscriber. This will be 1 - 5 as described &lt;a href=&quot;http://eepurl.com/f-2P&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;&#10;string campaign_id If the user is unsubscribed and they unsubscribed from a specific campaign, that campaign_id will be listed, otherwise this is not returned.&#10;array lists An associative array of the other lists this member belongs to - the key is the list id and the value is their status in that list.&#10;string timestamp The date/time this email address entered it's current status&#10;string info_changed The last time this record was changed. If the record is old enough, this may be blank.&#10;int web_id The Member id used in our web app, allows you to create a link directly to it&#10;bool is_gmonkey Whether the member is a &lt;a href=&quot;http://mailchimp.com/features/golden-monkeys/&quot; target=&quot;_blank&quot;&gt;Golden Monkey&lt;/a&gt; or not.&#10;array geo the geographic information if we have it. including:&#10;string latitude the latitude&#10;string longitude the longitude&#10;string gmtoff GMT offset&#10;string dstoff GMT offset during daylight savings (if DST not observered, will be same as gmtoff&#10;string timezone the timezone we've place them in&#10;string cc 2 digit ISO-3166 country code&#10;string region generally state, province, or similar&#10;array clients the client we've tracked the address as using with two keys:&#10;string name the common name of the client&#10;string icon_url a url representing a path to an icon representing this client&#10;array static_segments static segments the member is a part of including:&#10;int id the segment id&#10;string name the name given to the segment&#10;string added the date the member was added" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1939">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1939">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1963" package="Default">
        <name>listMemberActivity</name>
        <full_name>listMemberActivity</full_name>
        <docblock line="1946">
          <description>Get the most recent 100 activities for particular list members (open, click, bounce, unsub, abuse, sent to)</description>
          <long-description></long-description>
          <tag line="1946" name="section" description="List Related"/>
          <tag line="1946" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1946" name="param" description="an array of up to 50 email addresses to get information for OR the &quot;id&quot;(s) for the member returned from listMembers, Webhooks, and Campaigns." type="array" variable="$email_address">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1946" name="return" description="array of data and success/error counts&#10;int success the number of subscribers successfully found on the list&#10;int errors the number of subscribers who were not found on the list&#10;array data an array of arrays where each activity record has:&#10;string action The action name, one of: open, click, bounce, unsub, abuse, sent&#10;string timestamp The date/time of the action&#10;string url For click actions, the url clicked, otherwise this is empty&#10;string bounce_type For bounce actions, the bounce type, otherwise this is empty&#10;string campaign_id The campaign id the action was related to, if it exists - otherwise empty (ie, direct unsub from list)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1963">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1963">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1989" package="Default">
        <name>listAbuseReports</name>
        <full_name>listAbuseReports</full_name>
        <docblock line="1970">
          <description>Get all email addresses that complained about a given campaign</description>
          <long-description></long-description>
          <tag line="1970" name="section" description="List Related"/>
          <tag line="1970" name="example" description="mcapi_listAbuseReports.php"/>
          <tag line="1970" name="param" description="the list id to pull abuse reports for (can be gathered using lists())" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1970" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1970" name="param" description="optional for large data sets, the number of results to return - defaults to 500, upper limit set at 1000" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1970" name="param" description="optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;" type="string" variable="$since">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1970" name="return" description="the total of all reports and the specific reports reports this page&#10;int total the total number of matching abuse reports&#10;array data the actual data for each reports, including:&#10;string date date/time the abuse report was received and processed&#10;string email the email address that reported abuse&#10;string campaign_id the unique id for the campaign that report was made against&#10;string type an internal type generally specifying the orginating mail provider - may not be useful outside of filling report views" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1989">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1989">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1989">
          <name>$limit</name>
          <default>500</default>
          <type/>
        </argument>
        <argument line="1989">
          <name>$since</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2012" package="Default">
        <name>listGrowthHistory</name>
        <full_name>listGrowthHistory</full_name>
        <docblock line="1998">
          <description>Access the Growth History by Month for a given list.</description>
          <long-description></long-description>
          <tag line="1998" name="section" description="List Related"/>
          <tag line="1998" name="example" description="mcapi_listGrowthHistory.php"/>
          <tag line="1998" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1998" name="return" description="array of months and growth&#10;string month The Year and Month in question using YYYY-MM format&#10;int existing number of existing subscribers to start the month&#10;int imports number of subscribers imported during the month&#10;int optins number of subscribers who opted-in during the month" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2012">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2038" package="Default">
        <name>listActivity</name>
        <full_name>listActivity</full_name>
        <docblock line="2018">
          <description>Access up to the previous 180 days of daily detailed aggregated activity stats for a given list</description>
          <long-description></long-description>
          <tag line="2018" name="section" description="List Related"/>
          <tag line="2018" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2018" name="return" description="array of array of daily values, each containing:&#10;string day The day in YYYY-MM-DD&#10;int emails_sent number of emails sent to the list&#10;int unique_opens number of unique opens for the list&#10;int recipient_clicks number of clicks for the list&#10;int hard_bounce number of hard bounces for the list&#10;int soft_bounce number of soft bounces for the list&#10;int abuse_reports number of abuse reports for the list&#10;int subs number of double optin subscribes for the list&#10;int unsubs number of manual unsubscribes for the list&#10;int other_adds number of non-double optin subscribes for the list (manual, API, or import)&#10;int other_removes number of non-manual unsubscribes for the list (deletions, empties, soft-bounce removals)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2038">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2056" package="Default">
        <name>listLocations</name>
        <full_name>listLocations</full_name>
        <docblock line="2044">
          <description>Retrieve the locations (countries) that the list's subscribers have been tagged to based on geocoding their IP address</description>
          <long-description></long-description>
          <tag line="2044" name="section" description="List Related"/>
          <tag line="2044" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2044" name="return" description="array of locations&#10;string country the country name&#10;string cc the 2 digit country code&#10;double percent the percent of subscribers in the country&#10;double total the total number of subscribers in the country" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2056">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2084" package="Default">
        <name>listClients</name>
        <full_name>listClients</full_name>
        <docblock line="2062">
          <description>Retrieve the clients that the list's subscribers have been tagged as being used based on user agents seen.</description>
          <long-description>&lt;p&gt;Made possible by &lt;a href="http://user-agent-string.info" target="_blank"&gt;user-agent-string.info&lt;/a&gt;&lt;/p&gt;</long-description>
          <tag line="2062" name="section" description="List Related"/>
          <tag line="2062" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2062" name="return" description="the desktop and mobile user agents in use on the list&#10;array desktop desktop user agents and percentages&#10;double penetration the percent of desktop clients in use&#10;array clients a record for each containing:&#10;string client the common name for the client&#10;string icon a url to an image representing this client&#10;string percent percent of list using the client&#10;string members total members using the client&#10;array mobile mobile user agents and percentages&#10;double penetration the percent of mobile clients in use&#10;array clients a record for each containing:&#10;string client the common name for the client&#10;string icon a url to an image representing this client&#10;string percent percent of list using the client&#10;string members total members using the client" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2084">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2113" package="Default">
        <name>templates</name>
        <full_name>templates</full_name>
        <docblock line="2090">
          <description>Retrieve various templates available in the system, allowing some thing similar to our template gallery to be created.</description>
          <long-description></long-description>
          <tag line="2090" name="section" description="Template  Related"/>
          <tag line="2090" name="example" description="mcapi_templates.php"/>
          <tag line="2090" name="example" description="xml-rpc_templates.php"/>
          <tag line="2090" name="param" description="optional the types of templates to return&#10;boolean user    Custom templates for this user account. Defaults to true.&#10;boolean gallery Templates from our Gallery. Note that some templates that require extra configuration are withheld. (eg, the Etsy template). Defaults to false.&#10;boolean base    Our &quot;start from scratch&quot; extremely basic templates. Defaults to false." type="array" variable="$types">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2090" name="param" description="optional for Gallery templates only, limit to a specific template category" type="string" variable="$category">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2090" name="param" description="optional options to control how inactive templates are returned, if at all&#10;boolean include user templates are not deleted, only set inactive. defaults to false.&#10;boolean only    only include inactive templates. defaults to false." type="array" variable="$inactives">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2090" name="return" description="An array of arrays, one for each template&#10;int id Id of the template&#10;string name Name of the template&#10;string layout Layout of the template - &quot;basic&quot;, &quot;left_column&quot;, &quot;right_column&quot;, or &quot;postcard&quot;&#10;string preview_image If we've generated it, the url of the preview image for the template. We do out best to keep these up to date, but Preview image urls are not guaranteed to be available&#10;string date_created The date/time the template was created&#10;boolean edit_source Whether or not you are able to edit the source of a template." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2113">
          <name>$types</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="2114">
          <name>$category</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="2114">
          <name>$inactives</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2136" package="Default">
        <name>templateInfo</name>
        <full_name>templateInfo</full_name>
        <docblock line="2123">
          <description>Pull details for a specific template to help support editing</description>
          <long-description></long-description>
          <tag line="2123" name="section" description="Template  Related"/>
          <tag line="2123" name="param" description="the template id - get from templates()" type="int" variable="$tid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2123" name="param" description="optional the template type to load - one of 'user', 'gallery', 'base', defaults to user." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2123" name="return" description="an array of info to be used when editing&#10;array default_content the default content broken down into the named editable sections for the template - dependant upon template, so not documented&#10;array sections the valid editable section names - dependant upon template, so not documented&#10;string source the full source of the template as if you exported it via our template editor&#10;string preview similar to the source, but the rendered version of the source from our popup preview" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2136">
          <name>$tid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2136">
          <name>$type</name>
          <default>'user'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2154" package="Default">
        <name>templateAdd</name>
        <full_name>templateAdd</full_name>
        <docblock line="2143">
          <description>Create a new user template, &lt;strong&gt;NOT&lt;/strong&gt; campaign content.</description>
          <long-description>&lt;p&gt;These templates can then be applied while creating campaigns.&lt;/p&gt;</long-description>
          <tag line="2143" name="section" description="Template  Related"/>
          <tag line="2143" name="example" description="mcapi_create_template.php"/>
          <tag line="2143" name="example" description="xml-rpc_create_template.php"/>
          <tag line="2143" name="param" description="the name for the template - names must be unique and a max of 50 bytes" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2143" name="param" description="a string specifying the entire template to be created. This is &lt;strong&gt;NOT&lt;/strong&gt; campaign content. They are intended to utilize our &lt;a href=&quot;http://www.mailchimp.com/resources/email-template-language/&quot; target=&quot;_blank&quot;&gt;template language&lt;/a&gt;." type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2143" name="return" description="the new template id, otherwise an error is thrown." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="2154">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2154">
          <name>$html</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2173" package="Default">
        <name>templateUpdate</name>
        <full_name>templateUpdate</full_name>
        <docblock line="2161">
          <description>Replace the content of a user template, &lt;strong&gt;NOT&lt;/strong&gt; campaign content.</description>
          <long-description></long-description>
          <tag line="2161" name="section" description="Template  Related"/>
          <tag line="2161" name="param" description="the id of the user template to update" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2161" name="param" description="the values to updates - while both are optional, at least one should be provided. Both can be updated at the same time.&#10;string name optional the name for the template - names must be unique and a max of 50 bytes&#10;string html optional a string specifying the entire template to be created. This is &lt;strong&gt;NOT&lt;/strong&gt; campaign content. They are intended to utilize our &lt;a href=&quot;http://www.mailchimp.com/resources/email-template-language/&quot; target=&quot;_blank&quot;&gt;template language&lt;/a&gt;." type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2161" name="return" description="true if the template was updated, otherwise an error will be thrown" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2173">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2173">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2188" package="Default">
        <name>templateDel</name>
        <full_name>templateDel</full_name>
        <docblock line="2180">
          <description>Delete (deactivate) a user template</description>
          <long-description></long-description>
          <tag line="2180" name="section" description="Template  Related"/>
          <tag line="2180" name="param" description="the id of the user template to delete" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2180" name="return" description="true if the template was deleted, otherwise an error will be thrown" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2188">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2202" package="Default">
        <name>templateUndel</name>
        <full_name>templateUndel</full_name>
        <docblock line="2194">
          <description>Undelete (reactivate) a user template</description>
          <long-description></long-description>
          <tag line="2194" name="section" description="Template  Related"/>
          <tag line="2194" name="param" description="the id of the user template to reactivate" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2194" name="return" description="true if the template was deleted, otherwise an error will be thrown" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2202">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2281" package="Default">
        <name>getAccountDetails</name>
        <full_name>getAccountDetails</full_name>
        <docblock line="2208">
          <description>Retrieve lots of account information including payments made, plan info, some account stats, installed modules,
contact info, and more.</description>
          <long-description>&lt;p&gt;No private information like Credit Card numbers is available.&lt;/p&gt;</long-description>
          <tag line="2208" name="section" description="Helper"/>
          <tag line="2208" name="param" description="optional defaults to nothing for backwards compatibility. Allows controlling which extra arrays are returned since they can slow down calls. Valid keys are &quot;modules&quot;, &quot;orders&quot;, &quot;rewards-credits&quot;, &quot;rewards-inspections&quot;, &quot;rewards-referrals&quot;, and &quot;rewards-applied&quot;. Hint: &quot;rewards-referrals&quot; is typically the culprit. To avoid confusion, if data is excluded, the corresponding key &lt;strong&gt;will not be returned at all&lt;/strong&gt;." type="array" variable="$exclude">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2208" name="return" description="containing the details for the account tied to this API Key&#10;string username The Account username&#10;string user_id The Account user unique id (for building some links)&#10;bool is_trial Whether the Account is in Trial mode (can only send campaigns to less than 100 emails)&#10;bool is_approved Whether the Account has been approved for purchases&#10;bool has_activated Whether the Account has been activated&#10;string timezone The timezone for the Account - default is &quot;US/Eastern&quot;&#10;string plan_type Plan Type - &quot;monthly&quot;, &quot;payasyougo&quot;, or &quot;free&quot;&#10;int plan_low &lt;em&gt;only for Monthly plans&lt;/em&gt; - the lower tier for list size&#10;int plan_high &lt;em&gt;only for Monthly plans&lt;/em&gt; - the upper tier for list size&#10;string plan_start_date &lt;em&gt;only for Monthly plans&lt;/em&gt; - the start date for a monthly plan&#10;int emails_left &lt;em&gt;only for Free and Pay-as-you-go plans&lt;/em&gt; emails credits left for the account&#10;bool pending_monthly Whether the account is finishing Pay As You Go credits before switching to a Monthly plan&#10;string first_payment date of first payment&#10;string last_payment date of most recent payment&#10;int times_logged_in total number of times the account has been logged into via the web&#10;string last_login date/time of last login via the web&#10;string affiliate_link Monkey Rewards link for our Affiliate program&#10;array contact Contact details for the account&#10;string fname First Name&#10;string lname Last Name&#10;string email Email Address&#10;string company Company Name&#10;string address1 Address Line 1&#10;string address2 Address Line 2&#10;string city City&#10;string state State or Province&#10;string zip Zip or Postal Code&#10;string country Country name&#10;string url Website URL&#10;string phone Phone number&#10;string fax Fax number&#10;array modules Addons installed in the account&#10;string id An internal module id&#10;string name The module name&#10;string added The date the module was added&#10;array data Any extra data associated with this module as key=&gt;value pairs&#10;array orders Order details for the account&#10;int order_id The order id&#10;string type The order type - either &quot;monthly&quot; or &quot;credits&quot;&#10;double amount The order amount&#10;string date The order date&#10;double credits_used The total credits used&#10;array rewards Rewards details for the account including credits &amp; inspections earned, number of referals, referal details, and rewards used&#10;int referrals_this_month the total number of referrals this month&#10;string notify_on whether or not we notify the user when rewards are earned&#10;string notify_email the email address address used for rewards notifications&#10;array credits Email credits earned:&#10;int this_month credits earned this month&#10;int total_earned credits earned all time&#10;int remaining credits remaining&#10;array inspections Inbox Inspections earned:&#10;int this_month credits earned this month&#10;int total_earned credits earned all time&#10;int remaining credits remaining&#10;array referrals All referrals, including:&#10;string name the name of the account&#10;string email the email address associated with the account&#10;string signup_date the signup date for the account&#10;string type the source for the referral&#10;array applied Applied rewards, including:&#10;int value the number of credits user&#10;string date the date appplied&#10;int order_id the order number credits were applied to&#10;string order_desc the order description" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2281">
          <name>$exclude</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2298" package="Default">
        <name>getVerifiedDomains</name>
        <full_name>getVerifiedDomains</full_name>
        <docblock line="2288">
          <description>Retrieve all domains verification records for an account</description>
          <long-description></long-description>
          <tag line="2288" name="section" description="Helper"/>
          <tag line="2288" name="return" description="records of domains verification has been attempted for&#10;string domain the verified domain&#10;string status the status of the verification - either &quot;verified&quot; or &quot;pending&quot;&#10;string email the email address used for verification" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2313" package="Default">
        <name>generateText</name>
        <full_name>generateText</full_name>
        <docblock line="2303">
          <description>Have HTML content auto-converted to a text-only format.</description>
          <long-description>&lt;p&gt;You can send: plain HTML, an array of Template content, an existing Campaign Id, or an existing Template Id. Note that this will &lt;strong&gt;not&lt;/strong&gt; save anything to or update any of your lists, campaigns, or templates.&lt;/p&gt;</long-description>
          <tag line="2303" name="section" description="Helper"/>
          <tag line="2303" name="example" description="xml-rpc_generateText.php"/>
          <tag line="2303" name="param" description="The type of content to parse. Must be one of: &quot;html&quot;, &quot;template&quot;, &quot;url&quot;, &quot;cid&quot; (Campaign Id), or &quot;tid&quot; (Template Id)" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2303" name="param" description="The content to use. For &quot;html&quot; expects  a single string value, &quot;template&quot; expects an array like you send to campaignCreate, &quot;url&quot; expects a valid &amp; public URL to pull from, &quot;cid&quot; expects a valid Campaign Id, and &quot;tid&quot; expects a valid Template Id on your account." type="mixed" variable="$content">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2303" name="return" description="the content pass in converted to text." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2313">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2313">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2330" package="Default">
        <name>inlineCss</name>
        <full_name>inlineCss</full_name>
        <docblock line="2320">
          <description>Send your HTML content to have the CSS inlined and optionally remove the original styles.</description>
          <long-description></long-description>
          <tag line="2320" name="section" description="Helper"/>
          <tag line="2320" name="example" description="xml-rpc_inlineCss.php"/>
          <tag line="2320" name="param" description="Your HTML content" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2320" name="param" description="optional Whether you want the CSS &amp;lt;style&amp;gt; tags stripped from the returned document. Defaults to false." type="bool" variable="$strip_css">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="2320" name="return" description="Your HTML content with all CSS inlined, just like if we sent it." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2330">
          <name>$html</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2330">
          <name>$strip_css</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2351" package="Default">
        <name>folders</name>
        <full_name>folders</full_name>
        <docblock line="2337">
          <description>List all the folders for a user account</description>
          <long-description></long-description>
          <tag line="2337" name="section" description="Folder  Related"/>
          <tag line="2337" name="example" description="mcapi_folders.php"/>
          <tag line="2337" name="example" description="xml-rpc_folders.php"/>
          <tag line="2337" name="param" description="optional the type of folders to return - either &quot;campaign&quot; or &quot;autoresponder&quot;. Defaults to &quot;campaign&quot;" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2337" name="return" description="Array of folder structs (see Returned Fields for details)&#10;int folder_id Folder Id for the given folder, this can be used in the campaigns() function to filter on.&#10;string name Name of the given folder&#10;string date_created The date/time the folder was created&#10;string type The type of the folders being returned, just to make sure you know." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2351">
          <name>$type</name>
          <default>'campaign'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2368" package="Default">
        <name>folderAdd</name>
        <full_name>folderAdd</full_name>
        <docblock line="2357">
          <description>Add a new folder to file campaigns or autoresponders in</description>
          <long-description></long-description>
          <tag line="2357" name="section" description="Folder  Related"/>
          <tag line="2357" name="example" description="mcapi_folderAdd.php"/>
          <tag line="2357" name="example" description="xml-rpc_folderAdd.php"/>
          <tag line="2357" name="param" description="a unique name for a folder (max 100 bytes)" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2357" name="param" description="optional the type of folder to create - either &quot;campaign&quot; or &quot;autoresponder&quot;. Defaults to &quot;campaign&quot;" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2357" name="return" description="the folder_id of the newly created folder." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="2368">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2368">
          <name>$type</name>
          <default>'campaign'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2385" package="Default">
        <name>folderUpdate</name>
        <full_name>folderUpdate</full_name>
        <docblock line="2375">
          <description>Update the name of a folder for campaigns or autoresponders</description>
          <long-description></long-description>
          <tag line="2375" name="section" description="Folder  Related"/>
          <tag line="2375" name="param" description="the folder id to update - retrieve from folders()" type="int" variable="$fid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2375" name="param" description="a new, unique name for the folder (max 100 bytes)" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2375" name="param" description="optional the type of folder to create - either &quot;campaign&quot; or &quot;autoresponder&quot;. Defaults to &quot;campaign&quot;" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2375" name="return" description="true if the update worked, otherwise an exception is thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="2385">
          <name>$fid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2385">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2385">
          <name>$type</name>
          <default>'campaign'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2402" package="Default">
        <name>folderDel</name>
        <full_name>folderDel</full_name>
        <docblock line="2393">
          <description>Delete a campaign or autoresponder folder.</description>
          <long-description>&lt;p&gt;Note that this will simply make campaigns in the folder appear unfiled, they are not removed.&lt;/p&gt;</long-description>
          <tag line="2393" name="section" description="Folder  Related"/>
          <tag line="2393" name="param" description="the folder id to update - retrieve from folders()" type="int" variable="$fid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2393" name="param" description="optional the type of folder to create - either &quot;campaign&quot; or &quot;autoresponder&quot;. Defaults to &quot;campaign&quot;" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2393" name="return" description="true if the delete worked, otherwise an exception is thrown" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="2402">
          <name>$fid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2402">
          <name>$type</name>
          <default>'campaign'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2438" package="Default">
        <name>ecommOrders</name>
        <full_name>ecommOrders</full_name>
        <docblock line="2409">
          <description>Retrieve the Ecommerce Orders for an account</description>
          <long-description></long-description>
          <tag line="2409" name="section" description="Ecommerce"/>
          <tag line="2409" name="param" description="optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2409" name="param" description="optional for large data sets, the number of results to return - defaults to 100, upper limit set at 500" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2409" name="param" description="optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;" type="string" variable="$since">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2409" name="return" description="the total matching orders and the specific orders for the requested page&#10;int total the total matching orders&#10;array data the actual data for each order being returned&#10;string store_id the store id generated by the plugin used to uniquely identify a store&#10;string store_name the store name collected by the plugin - often the domain name&#10;string order_id the internal order id the store tracked this order by&#10;string email  the email address that received this campaign and is associated with this order&#10;double order_total the order total&#10;double tax_total the total tax for the order (if collected)&#10;double ship_total the shipping total for the order (if collected)&#10;string order_date the date the order was tracked - from the store if possible, otherwise the GMT time we received it&#10;array lines containing the detail of line of the order:&#10;int line_num the line number&#10;int product_id the product id&#10;string product_name the product name&#10;string product_sku the sku for the product&#10;int product_category_id the category id for the product&#10;string product_category_name the category name for the product&#10;int qty the quantity ordered&#10;double cost the cost of the item" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2438">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="2438">
          <name>$limit</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="2438">
          <name>$since</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2475" package="Default">
        <name>ecommOrderAdd</name>
        <full_name>ecommOrderAdd</full_name>
        <docblock line="2446">
          <description>Import Ecommerce Order Information to be used for Segmentation.</description>
          <long-description>&lt;p&gt;This will generally be used by ecommerce package plugins
&lt;a href="http://connect.mailchimp.com/category/ecommerce" target="_blank"&gt;provided by us or by 3rd part system developers&lt;/a&gt;.&lt;/p&gt;</long-description>
          <tag line="2446" name="section" description="Ecommerce"/>
          <tag line="2446" name="param" description="an array of information pertaining to the order that has completed. Use the following keys:&#10;string id the Order Id&#10;string email_id optional (kind of) the Email Id of the subscriber we should attach this order to (see the &quot;mc_eid&quot; query string variable a campaign passes) - either this or &lt;strong&gt;email&lt;/strong&gt; is required. If both are provided, email_id takes precedence&#10;string email optional (kind of) the Email Address we should attach this order to - either this or &lt;strong&gt;email_id&lt;/strong&gt; is required. If both are provided, email_id takes precedence&#10;double total The Order Total (ie, the full amount the customer ends up paying)&#10;string order_date optional the date of the order - if this is not provided, we will default the date to now&#10;double shipping optional the total paid for Shipping Fees&#10;double tax optional the total tax paid&#10;string store_id a unique id for the store sending the order in (20 bytes max)&#10;string store_name optional a &quot;nice&quot; name for the store - typically the base web address (ie, &quot;store.mailchimp.com&quot;). We will automatically update this if it changes (based on store_id)&#10;string campaign_id optional the Campaign Id to track this order with (see the &quot;mc_cid&quot; query string variable a campaign passes)&#10;array items the individual line items for an order using these keys:&#10;&lt;div style=&quot;padding-left:30px&quot;&gt;&lt;table&gt;&#10;int line_num optional the line number of the item on the order. We will generate these if they are not passed&#10;int product_id the store's internal Id for the product. Lines that do no contain this will be skipped&#10;string sku optional the store's internal SKU for the product. (max 30 bytes)&#10;string product_name the product name for the product_id associated with this item. We will auto update these as they change (based on product_id)&#10;int category_id the store's internal Id for the (main) category associated with this product. Our testing has found this to be a &quot;best guess&quot; scenario&#10;string category_name the category name for the category_id this product is in. Our testing has found this to be a &quot;best guess&quot; scenario. Our plugins walk the category heirarchy up and send &quot;Root - SubCat1 - SubCat4&quot;, etc.&#10;double qty the quantity of the item ordered&#10;double cost the cost of a single item (ie, not the extended cost of the line)&#10;&lt;/table&gt;&lt;/div&gt;" type="array" variable="$order">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2446" name="return" description="true if the data is saved, otherwise an error is thrown." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="2475">
          <name>$order</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2490" package="Default">
        <name>ecommOrderDel</name>
        <full_name>ecommOrderDel</full_name>
        <docblock line="2481">
          <description>Delete Ecommerce Order Information used for segmentation.</description>
          <long-description>&lt;p&gt;This will generally be used by ecommerce package plugins
&lt;a href="/plugins/ecomm360.phtml"&gt;that we provide&lt;/a&gt; or by 3rd part system developers.&lt;/p&gt;</long-description>
          <tag line="2481" name="section" description="Ecommerce"/>
          <tag line="2481" name="param" description="the store id the order belongs to" type="string" variable="$store_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2481" name="param" description="the order id (generated by the store) to delete" type="string" variable="$order_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2481" name="return" description="true if an order is deleted, otherwise an error is thrown." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="2490">
          <name>$store_id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2490">
          <name>$order_id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2505" package="Default">
        <name>listsForEmail</name>
        <full_name>listsForEmail</full_name>
        <docblock line="2497">
          <description>Retrieve all List Ids a member is subscribed to.</description>
          <long-description></long-description>
          <tag line="2497" name="section" description="Helper"/>
          <tag line="2497" name="param" description="the email address to check OR the email &quot;id&quot; returned from listMemberInfo, Webhooks, and Campaigns" type="string" variable="$email_address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2497" name="return" description="An array of list_ids the member is subscribed to." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2505">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2522" package="Default">
        <name>campaignsForEmail</name>
        <full_name>campaignsForEmail</full_name>
        <docblock line="2511">
          <description>Retrieve all Campaigns Ids a member was sent</description>
          <long-description></long-description>
          <tag line="2511" name="section" description="Helper"/>
          <tag line="2511" name="param" description="the email address to unsubscribe  OR the email &quot;id&quot; returned from listMemberInfo, Webhooks, and Campaigns" type="string" variable="$email_address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2511" name="param" description="optional extra options to modify the returned data.&#10;string list_id optional A list_id to limit the campaigns to&#10;bool   verbose optional Whether or not to return verbose data (beta - this will change the return format into something undocumented, but consistent). defaults to false" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2511" name="return" description="An array of campaign_ids the member received" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2522">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2522">
          <name>$options</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2542" package="Default">
        <name>chimpChatter</name>
        <full_name>chimpChatter</full_name>
        <docblock line="2529">
          <description>Return the current Chimp Chatter messages for an account.</description>
          <long-description></long-description>
          <tag line="2529" name="section" description="Helper"/>
          <tag line="2529" name="return" description="An array of chatter messages and properties&#10;string message The chatter message&#10;string type The type of the message - one of lists:new-subscriber, lists:unsubscribes, lists:profile-updates, campaigns:facebook-likes, campaigns:facebook-comments, campaigns:forward-to-friend, lists:imports, or campaigns:inbox-inspections&#10;string url a url into the web app that the message could link to&#10;string list_id the list_id a message relates to, if applicable&#10;string campaign_id the list_id a message relates to, if applicable&#10;string update_time The date/time the message was last updated" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2563" package="Default">
        <name>searchMembers</name>
        <full_name>searchMembers</full_name>
        <docblock line="2547">
          <description>Search account wide or on a specific list using the specified query terms</description>
          <long-description></long-description>
          <tag line="2547" name="section" description="Helper"/>
          <tag line="2547" name="param" description="terms to search on" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2547" name="param" description="optional $id the list id to limit the search to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2547" name="param" description="offset optional the paging offset to use if more than 100 records match" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2547" name="return" description="An array of both exact matches and partial matches over a full search&#10;    array exact_matches&#10;        int total total members matching&#10;        array members - each entry will match the data format for a single member as returned by listMemberInfo()&#10;    array full_search&#10;        int total total members matching&#10;        array members - each entry will match the data format for a single member as returned by listMemberInfo()" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2563">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2563">
          <name>$id</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="2563">
          <name>$offset</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2588" package="Default">
        <name>searchCampaigns</name>
        <full_name>searchCampaigns</full_name>
        <docblock line="2571">
          <description>Search all campaigns for the specified query terms</description>
          <long-description></long-description>
          <tag line="2571" name="section" description="Helper"/>
          <tag line="2571" name="param" description="terms to search on" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2571" name="param" description="offset optional the paging offset to use if more than 100 records match" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="2571" name="param" description="snip_start optional by default clear text is returned. To have the match highlighted with something (like a strong HTML tag), &lt;strong&gt;both&lt;/strong&gt; this and &quot;snip_end&quot; must be passed. You're on your own to not break the tags - 25 character max." type="string" variable="$snip_start">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2571" name="param" description="snip_end optional see &quot;snip_start&quot; above." type="string" variable="$snip_end">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2571" name="return" description="An array of both exact matches and partial matches over a full search&#10;    array exact_matches&#10;        int total total members matching&#10;        array members - each entry will match the data format for a single member as returned by listMemberInfo()&#10;    array full_search&#10;        int total total members matching&#10;        array results - each entry will match the data format for a single member as returned by listMemberInfo()" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2588">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2588">
          <name>$offset</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="2588">
          <name>$snip_start</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="2588">
          <name>$snip_end</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2612" package="Default">
        <name>apikeys</name>
        <full_name>apikeys</full_name>
        <docblock line="2597">
          <description>Retrieve a list of all MailChimp API Keys for this User</description>
          <long-description></long-description>
          <tag line="2597" name="section" description="Security Related"/>
          <tag line="2597" name="example" description="xml-rpc_apikeyAdd.php"/>
          <tag line="2597" name="example" description="mcapi_apikeyAdd.php"/>
          <tag line="2597" name="param" description="Your MailChimp user name" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2597" name="param" description="Your MailChimp password" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2597" name="param" description="optional - whether or not to include expired keys, defaults to false" type="boolean" variable="$expired">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2597" name="return" description="an array of API keys including:&#10;string apikey The api key that can be used&#10;string created_at The date the key was created&#10;string expired_at The date the key was expired" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2612">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2612">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2612">
          <name>$expired</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2630" package="Default">
        <name>apikeyAdd</name>
        <full_name>apikeyAdd</full_name>
        <docblock line="2620">
          <description>Add an API Key to your account.</description>
          <long-description>&lt;p&gt;We will generate a new key for you and return it.&lt;/p&gt;</long-description>
          <tag line="2620" name="section" description="Security Related"/>
          <tag line="2620" name="example" description="xml-rpc_apikeyAdd.php"/>
          <tag line="2620" name="param" description="Your MailChimp user name" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2620" name="param" description="Your MailChimp password" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2620" name="return" description="a new API Key that can be immediately used." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2630">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2630">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2651" package="Default">
        <name>apikeyExpire</name>
        <full_name>apikeyExpire</full_name>
        <docblock line="2637">
          <description>Expire a Specific API Key.</description>
          <long-description>&lt;p&gt;Note that if you expire all of your keys, just visit &lt;a href="http://admin.mailchimp.com/account/api" target="_blank"&gt;your API dashboard&lt;/a&gt;
to create a new one. If you are trying to shut off access to your account for an old developer, change your
MailChimp password, then expire all of the keys they had access to. Note that this takes effect immediately, so make
sure you replace the keys in any working application before expiring them! Consider yourself warned...&lt;/p&gt;</long-description>
          <tag line="2637" name="section" description="Security Related"/>
          <tag line="2637" name="example" description="mcapi_apikeyExpire.php"/>
          <tag line="2637" name="example" description="xml-rpc_apikeyExpire.php"/>
          <tag line="2637" name="param" description="Your MailChimp user name" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2637" name="param" description="Your MailChimp password" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2637" name="return" description="true if it worked, otherwise an error is thrown." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2651">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2651">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2668" package="Default">
        <name>ping</name>
        <full_name>ping</full_name>
        <docblock line="2658">
          <description>"Ping" the MailChimp API - a simple method you can call that will return a constant value as long as everything is good.</description>
          <long-description>&lt;p&gt;Note
than unlike most all of our methods, we don't throw an Exception if we are having issues. You will simply receive a different
string back that will explain our view on what is going on.&lt;/p&gt;</long-description>
          <tag line="2658" name="section" description="Helper"/>
          <tag line="2658" name="example" description="xml-rpc_ping.php"/>
          <tag line="2658" name="return" description="returns &quot;Everything's Chimpy!&quot; if everything is chimpy, otherwise returns an error message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2683" package="Default">
        <name>deviceRegister</name>
        <full_name>deviceRegister</full_name>
        <docblock line="2673">
          <description>Register a mobile device</description>
          <long-description></long-description>
          <tag line="2673" name="section" description="Mobile"/>
          <tag line="2673" name="param" description="a valid key identifying your mobile application." type="string" variable="$mobile_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2673" name="param" description="the details for the device registration" type="array" variable="$details">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2673" name="return" description="the method completion status&#10;string status The status (success) of the call if it completed. Otherwise an error is thrown." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2683">
          <name>$mobile_key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2683">
          <name>$details</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2700" package="Default">
        <name>deviceUnregister</name>
        <full_name>deviceUnregister</full_name>
        <docblock line="2690">
          <description>Unregister a mobile device</description>
          <long-description></long-description>
          <tag line="2690" name="section" description="Mobile"/>
          <tag line="2690" name="param" description="a valid key identifying your mobile application." type="string" variable="$mobile_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2690" name="param" description="the device id used for the device registration" type="string" variable="$device_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2690" name="return" description="the method completion status&#10;string status The status (success) of the call if it completed. Otherwise an error is thrown." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2700">
          <name>$mobile_key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2700">
          <name>$device_id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2721" package="Default">
        <name>gmonkeyAdd</name>
        <full_name>gmonkeyAdd</full_name>
        <docblock line="2707">
          <description>Add Golden Monkey(s)</description>
          <long-description></long-description>
          <tag line="2707" name="section" description="Golden Monkeys"/>
          <tag line="2707" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2707" name="param" description="an array of email addresses (max 50) to attempt to flag as Golden Monkeys" type="array" variable="$email_address">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2707" name="return" description="an array of API keys including:&#10;int success The number of successful adds&#10;int errors The number of unsuccessful adds&#10;array data details on the errors which occurred&#10;string email_address the email address which errored out&#10;string error an error message explaining the error" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2721">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2721">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2742" package="Default">
        <name>gmonkeyDel</name>
        <full_name>gmonkeyDel</full_name>
        <docblock line="2728">
          <description>Remove Golden Monkey(s)</description>
          <long-description></long-description>
          <tag line="2728" name="section" description="Golden Monkeys"/>
          <tag line="2728" name="param" description="the list id to connect to. Get by calling lists()" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2728" name="param" description="an array of email addresses (max 50) to attempt to remove Golden Monkey status from." type="array" variable="$email_address">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2728" name="return" description="an array of API keys including:&#10;int success The number of successful removals&#10;int errors The number of unsuccessful removals&#10;array data details on the errors which occurred&#10;string email_address the email address which errored out&#10;string error an error message explaining the error" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2742">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2742">
          <name>$email_address</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2763" package="Default">
        <name>gmonkeyMembers</name>
        <full_name>gmonkeyMembers</full_name>
        <docblock line="2749">
          <description>Retrieve all Golden Monkey(s) for an account</description>
          <long-description></long-description>
          <tag line="2749" name="section" description="Golden Monkeys"/>
          <tag line="2749" name="return" description="an array for each Golden Monkey, including:&#10;string list_id   The id of the List the Member appears on&#10;string list_name The name of the List the Member appears on&#10;string email     The email address of the member&#10;string fname IF a FNAME merge field exists on the list, that value for the member&#10;string lname IF a LNAME merge field exists on the list, that value for the member&#10;int    member_rating the rating of the subscriber. This will be 1 - 5 as described &lt;a href=&quot;http://eepurl.com/f-2P&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;&#10;string member_since the datetime the member was added and/or confirmed" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2794" package="Default">
        <name>gmonkeyActivity</name>
        <full_name>gmonkeyActivity</full_name>
        <docblock line="2768">
          <description>Retrieve all Activity (opens/clicks) for Golden Monkeys over the past 10 days</description>
          <long-description></long-description>
          <tag line="2768" name="section" description="Golden Monkeys"/>
          <tag line="2768" name="return" description="an array for each Golden Monkey, including:&#10;string action    The action taken - either &quot;open&quot; or &quot;click&quot;&#10;string timestamp The datetime the action occurred&#10;string url       IF the action is a click, the url that was clicked&#10;string unique_id The campaign_id of the List the Member appears on&#10;string title     The campaign title&#10;string list_name The name of the List the Member appears on&#10;string email     The email address of the member&#10;string fname IF a FNAME merge field exists on the list, that value for the member&#10;string lname IF a LNAME merge field exists on the list, that value for the member&#10;int    member_rating the rating of the subscriber. This will be 1 - 5 as described &lt;a href=&quot;http://eepurl.com/f-2P&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;&#10;string member_since the datetime the member was added and/or confirmed&#10;array geo the geographic information if we have it. including:&#10;string latitude the latitude&#10;string longitude the longitude&#10;string gmtoff GMT offset&#10;string dstoff GMT offset during daylight savings (if DST not observered, will be same as gmtoff&#10;string timezone the timezone we've place them in&#10;string cc 2 digit ISO-3166 country code&#10;string region generally state, province, or similar" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2804" package="Default">
        <name>callMethod</name>
        <full_name>callMethod</full_name>
        <docblock line="2799">
          <description>Internal function - proxy method for certain XML-RPC calls | DO NOT CALL</description>
          <long-description></long-description>
          <tag line="2799" name="param" description="Method to call, with any parameters to pass along" type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2799" name="return" description="the result of the call" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2813" package="Default">
        <name>callServer</name>
        <full_name>callServer</full_name>
        <docblock line="2809">
          <description>Actually connect to the server and call the requested methods, parsing the result
You should never have to call this function manually</description>
          <long-description></long-description>
        </docblock>
        <argument line="2813">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2813">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.mailchimp.php</error>
      <error line="3" code="50000">No DocBlock was found for \MCAPI</error>
      <error line="4" code="50018">No DocBlock was found for property $version</error>
      <error line="5" code="50018">No DocBlock was found for property $errorMessage</error>
      <error line="6" code="50018">No DocBlock was found for property $errorCode</error>
      <error line="44" code="50010">No DocBlock was found for method setTimeout()</error>
      <error line="50" code="50010">No DocBlock was found for method getTimeout()</error>
      <error line="53" code="50010">No DocBlock was found for method useSecure()</error>
      <error line="752" code="50014">Name of argument $since does not match with the DocBlock's name $start in campaignAbuseReports()</error>
      <error line="752" code="50014">Name of argument $start does not match with the DocBlock's name $limit in campaignAbuseReports()</error>
      <error line="752" code="50014">Name of argument $limit does not match with the DocBlock's name $since in campaignAbuseReports()</error>
      <notice line="2799" code="50013">Parameter  could not be found in callMethod()</notice>
      <error line="2809" code="50015">Argument $method is missing from the Docblock of callServer()</error>
      <error line="2809" code="50015">Argument $params is missing from the Docblock of callServer()</error>
    </parse_markers>
  </file>
  <file path="class.mailer.php" hash="543103bfc10d4b5826fcd4cc3c75fc17" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="Phoenix">
      <extends/>
      <name>Mailer</name>
      <full_name>\Mailer</full_name>
      <docblock line="3">
        <description>The Mailer class provides Mandrill app integration for
transactional email services.</description>
        <long-description/>
        <tag line="3" name="author" description="Yectep Studios &lt;info@yectep.hk&gt;"/>
        <tag line="3" name="version" description="20903"/>
        <tag line="3" name="package" description="Phoenix"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="18" package="Phoenix">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="13">
          <description>Constructor is set to protected so nobody can access it</description>
          <long-description/>
          <tag line="13" name="see" description="\__destruct()" refers="\__destruct()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="27" package="Phoenix">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="22">
          <description>Destruct is set to protected so nobody can access it</description>
          <long-description/>
          <tag line="22" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Phoenix">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="31">
          <description>Mail function for Mandrill app integration</description>
          <long-description/>
          <tag line="31" name="param" description="Email address (To) field" type="mixed" variable="$email">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="31" name="param" description="" type="\str" variable="$sujb">
            <type by_reference="false">\str</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$to</name>
          <default/>
          <type/>
        </argument>
        <argument line="37">
          <name>$subj</name>
          <default/>
          <type/>
        </argument>
        <argument line="37">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
        <argument line="37">
          <name>$fromText</name>
          <default>"CIS Summer Program"</default>
          <type/>
        </argument>
        <argument line="37">
          <name>$fromAddr</name>
          <default>"noreply@summer.cis.edu.hk"</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.mailer.php</error>
      <error line="31" code="50014">Name of argument $to does not match with the DocBlock's name $email in send()</error>
      <error line="31" code="50014">Name of argument $subj does not match with the DocBlock's name $sujb in send()</error>
      <error line="31" code="50015">Argument $body is missing from the Docblock of send()</error>
      <error line="31" code="50015">Argument $fromText is missing from the Docblock of send()</error>
      <error line="31" code="50015">Argument $fromAddr is missing from the Docblock of send()</error>
      <notice line="31" code="50013">Parameter $email could not be found in send()</notice>
      <notice line="31" code="50013">Parameter $sujb could not be found in send()</notice>
    </parse_markers>
  </file>
  <file path="class.mandrill.php" hash="3c6c3e482257e7df78eaa05595394859" package="Default">
    <class final="false" abstract="true" namespace="global" line="17" package="Mandrill">
      <extends/>
      <name>Mandrill</name>
      <full_name>\Mandrill</full_name>
      <docblock line="2">
        <description>This class allows the user to easily consume MailChimp's Mandrill services</description>
        <long-description/>
        <tag line="2" name="package" description="Mandrill"/>
        <tag line="2" name="author" description="Wes Widner &lt;wes@werxltd.com&gt;"/>
        <tag line="2" name="version" description="1.0"/>
        <tag line="2" name="method" description="Retrieve the Mandrill PHP library's current version" type="string" method_name="getVersion">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="method" description="Retrieve the API key that is currently set" type="string" method_name="getApiKey">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="method" description="Call Mandril service using an associative array containing the parameters Mandrill for the given type of service and specific call" type="mixed" method_name="call">
          <type by_reference="false">mixed</type>
          <argument>
            <name>$data</name>
            <default/>
            <type>mixed</type>
          </argument>
        </tag>
        <tag line="2" name="link" description="Official documentation for Mandrill API call types and calls" link="http://mandrillapp.com/api/docs/index.html"/>
        <tag line="2" name="link" description="Example: Calling User/Info per http://mandrillapp.com/api/docs/users.html#method=info" link="../../examples/user_info.php"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="24" namespace="global" package="Default">
        <name>$is_cli</name>
        <default>null</default>
        <docblock line="18">
          <description>Stores the operating enviroment state.</description>
          <long-description>&lt;p&gt;Null means the state has not been evaluated yet.&lt;/p&gt;</long-description>
          <tag line="18" name="since" description="1.0"/>
          <tag line="18" name="static" description=""/>
          <tag line="18" name="ignore" description=""/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="32" namespace="global" package="Default">
        <name>$version</name>
        <default>'1.0'</default>
        <docblock line="26">
          <description>The current Mandrill PHP lib version</description>
          <long-description/>
          <tag line="26" name="since" description="1.0"/>
          <tag line="26" name="static" description=""/>
          <tag line="26" name="ignore" description=""/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="40" namespace="global" package="Default">
        <name>$api_url</name>
        <default>'https://mandrillapp.com/api/1.0/%s/%s.json'</default>
        <docblock line="34">
          <description>The Mandrill service URL</description>
          <long-description/>
          <tag line="34" name="since" description="1.0"/>
          <tag line="34" name="static" description=""/>
          <tag line="34" name="ignore" description=""/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="48" namespace="global" package="Default">
        <name>$api_key</name>
        <default>null</default>
        <docblock line="42">
          <description>The user's API key</description>
          <long-description/>
          <tag line="42" name="since" description="1.0"/>
          <tag line="42" name="static" description=""/>
          <tag line="42" name="ignore" description=""/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="56" namespace="global" package="Default">
        <name>$api_calls</name>
        <default>null</default>
        <docblock line="50">
          <description>Holds known Mandrill API call array.</description>
          <long-description>&lt;p&gt;Used to validate user requests&lt;/p&gt;</long-description>
          <tag line="50" name="since" description="1.0"/>
          <tag line="50" name="static" description=""/>
          <tag line="50" name="ignore" description=""/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="64" namespace="global" package="Default">
        <name>$verbose</name>
        <default>false</default>
        <docblock line="58">
          <description>Whether or not to send additional information to error_log</description>
          <long-description/>
          <tag line="58" name="since" description="1.0"/>
          <tag line="58" name="static" description=""/>
          <tag line="58" name="ignore" description=""/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="72" namespace="global" package="Default">
        <name>$required_key</name>
        <default>array('key')</default>
        <docblock line="66">
          <description>Shorthand for the key property which is required for all Mandrill requests</description>
          <long-description/>
          <tag line="66" name="since" description="1.0"/>
          <tag line="66" name="static" description=""/>
          <tag line="66" name="ignore" description=""/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="80" namespace="global" package="Default">
        <name>$last_error</name>
        <default>null</default>
        <docblock line="74">
          <description>Stores last validation error message</description>
          <long-description/>
          <tag line="74" name="since" description="1.0"/>
          <tag line="74" name="static" description=""/>
          <tag line="74" name="ignore" description=""/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="89" package="Mandrill">
        <name>_is_cli</name>
        <full_name>_is_cli</full_name>
        <docblock line="82">
          <description>Returns true if the class is being run from the command line, caches result</description>
          <long-description/>
          <tag line="82" name="since" description="1.0"/>
          <tag line="82" name="static" description=""/>
          <tag line="82" name="ignore" description=""/>
          <tag line="82" name="return" description="True if the script is being run from a CLI or false if its being run from a webserver" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="101" package="Mandrill">
        <name>api_calls</name>
        <full_name>api_calls</full_name>
        <docblock line="94">
          <description>Generates a structured array of valid Mandrill API calls</description>
          <long-description/>
          <tag line="94" name="since" description="1.0"/>
          <tag line="94" name="static" description=""/>
          <tag line="94" name="ignore" description=""/>
          <tag line="94" name="returns" description="mixed Associative array of valid calls and their required parameters"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="173" package="Mandrill">
        <name>_validate_call</name>
        <full_name>_validate_call</full_name>
        <docblock line="163">
          <description>Validates the user's parameters against known valid Mandrill API calls</description>
          <long-description/>
          <tag line="163" name="param" description="The type of Mandrill call to make, ex. 'users' or 'tags'" type="string" variable="$call_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="param" description="The call to make, ex. 'ping' or 'info'" type="string" variable="$call">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="param" description="An associative array of options that correspond with the Mandrill API call being made" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="163" name="return" description="True or false for successful validation" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="163" name="since" description="1.0"/>
          <tag line="163" name="static" description=""/>
          <tag line="163" name="ignore" description=""/>
        </docblock>
        <argument line="173">
          <name>$call_type</name>
          <default/>
          <type/>
        </argument>
        <argument line="173">
          <name>$call</name>
          <default/>
          <type/>
        </argument>
        <argument line="173">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="201" package="Mandrill">
        <name>_set_api_key</name>
        <full_name>_set_api_key</full_name>
        <docblock line="189">
          <description>Set the api_key.</description>
          <long-description>&lt;p&gt;The Mandrill API key can be set in a number of ways.
* It can be set by the parameters passed in for an API call, ie. Mandrill::call(array('key'=&gt;'mykey'));
* It can be set via Mandrill::setApiKey('mykey');
* It can be set directly in this class file
* It can be set by the MANDRILL_API_KEY constant&lt;/p&gt;</long-description>
          <tag line="189" name="param" description="Associative array containing a 'key' element or a the API key as a string" type="mixed|string" variable="$data">
            <type by_reference="false">mixed</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="since" description="1.0"/>
          <tag line="189" name="static" description=""/>
          <tag line="189" name="ignore" description=""/>
        </docblock>
        <argument line="201">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="216" package="Mandrill">
        <name>_call_api</name>
        <full_name>_call_api</full_name>
        <docblock line="208">
          <description>The main method which makes the curl request to the Mandrill API</description>
          <long-description/>
          <tag line="208" name="param" description="An associative array of options that correspond with the Mandrill API call being made" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="208" name="return" description="The response from the server." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="208" name="since" description="1.0"/>
          <tag line="208" name="static" description=""/>
          <tag line="208" name="ignore" description=""/>
        </docblock>
        <argument line="216">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="269" package="Mandrill">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="259">
          <description>Rather than defining each method individually we use this method to route the
method call to the appropriate handler.</description>
          <long-description>&lt;p&gt;This method should not be used directly.&lt;/p&gt;</long-description>
          <tag line="259" name="param" description="Method user attempted to use" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="259" name="param" description="Array of arguments the user passed to the method" type="mixed" variable="$args">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="259" name="since" description="1.0"/>
          <tag line="259" name="static" description=""/>
          <tag line="259" name="ignore" description=""/>
        </docblock>
        <argument line="269">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="269">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.mandrill.php</error>
    </parse_markers>
  </file>
  <file path="class.qr.php" hash="06f8c0ba0f4f2e69a54701cb90b87a02" package="Default">
    <class final="true" abstract="false" namespace="global" line="14" package="BarcodeQR">
      <extends/>
      <name>BarcodeQR</name>
      <full_name>\BarcodeQR</full_name>
      <docblock line="2">
        <description>BarcodeQR - Code QR Barcode Image Generator (PNG)</description>
        <long-description/>
        <tag line="2" name="package" description="BarcodeQR"/>
        <tag line="2" name="category" description="BarcodeQR"/>
        <tag line="2" name="name" description="BarcodeQR"/>
        <tag line="2" name="version" description="1.0"/>
        <tag line="2" name="author" description="Shay Anderson 05.11"/>
        <tag line="2" name="link" description="http://www.shayanderson.com/php/php-qr-code-generator-class.htm" link="http://www.shayanderson.com/php/php-qr-code-generator-class.htm"/>
        <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.html GPL License&#10;This is free software and is distributed WITHOUT ANY WARRANTY"/>
      </docblock>
      <constant namespace="global" line="18" package="BarcodeQR">
        <name>API_CHART_URL</name>
        <full_name>API_CHART_URL</full_name>
        <value>"http://chart.apis.google.com/chart"</value>
        <docblock line="15">
          <description>Chart API URL</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="25" namespace="global" package="Default">
        <name>$_data</name>
        <default/>
        <docblock line="20">
          <description>Code data</description>
          <long-description/>
          <tag line="20" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="BarcodeQR">
        <name>bookmark</name>
        <full_name>bookmark</full_name>
        <docblock line="27">
          <description>Bookmark code</description>
          <long-description/>
          <tag line="27" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$title</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="33">
          <name>$url</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="BarcodeQR">
        <name>contact</name>
        <full_name>contact</full_name>
        <docblock line="37">
          <description>MECARD code</description>
          <long-description/>
          <tag line="37" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="" type="string" variable="$phone">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="45">
          <name>$address</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="45">
          <name>$phone</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="45">
          <name>$email</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="BarcodeQR">
        <name>content</name>
        <full_name>content</full_name>
        <docblock line="49">
          <description>Create code with GIF, JPG, etc.</description>
          <long-description/>
          <tag line="49" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="" type="string" variable="$size">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="56">
          <name>$size</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="56">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="BarcodeQR">
        <name>draw</name>
        <full_name>draw</full_name>
        <docblock line="60">
          <description>Generate QR code image</description>
          <long-description/>
          <tag line="60" name="param" description="" type="int" variable="$size">
            <type by_reference="false">int</type>
          </tag>
          <tag line="60" name="param" description="" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$size</name>
          <default>150</default>
          <type/>
        </argument>
        <argument line="67">
          <name>$filename</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="BarcodeQR">
        <name>email</name>
        <full_name>email</full_name>
        <docblock line="95">
          <description>Email address code</description>
          <long-description/>
          <tag line="95" name="param" description="" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="" type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$email</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="102">
          <name>$subject</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="102">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="BarcodeQR">
        <name>geo</name>
        <full_name>geo</full_name>
        <docblock line="106">
          <description>Geo location code</description>
          <long-description/>
          <tag line="106" name="param" description="" type="string" variable="$lat">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="" type="string" variable="$lon">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="" type="string" variable="$height">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$lat</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$lon</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$height</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="BarcodeQR">
        <name>phone</name>
        <full_name>phone</full_name>
        <docblock line="117">
          <description>Telephone number code</description>
          <long-description/>
          <tag line="117" name="param" description="" type="string" variable="$phone">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$phone</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="BarcodeQR">
        <name>sms</name>
        <full_name>sms</full_name>
        <docblock line="126">
          <description>SMS code</description>
          <long-description/>
          <tag line="126" name="param" description="" type="string" variable="$phone">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$phone</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="132">
          <name>$text</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="BarcodeQR">
        <name>text</name>
        <full_name>text</full_name>
        <docblock line="136">
          <description>Text code</description>
          <long-description/>
          <tag line="136" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$text</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="BarcodeQR">
        <name>url</name>
        <full_name>url</full_name>
        <docblock line="145">
          <description>URL code</description>
          <long-description/>
          <tag line="145" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$url</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="BarcodeQR">
        <name>wifi</name>
        <full_name>wifi</full_name>
        <docblock line="154">
          <description>Wifi code</description>
          <long-description/>
          <tag line="154" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="154" name="param" description="" type="string" variable="$ssid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="154" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="161">
          <name>$ssid</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="161">
          <name>$password</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.qr.php</error>
    </parse_markers>
  </file>
  <file path="class.security.php" hash="d9f21ff1fc2ec1b7a6f93e584b96e10c" package="Phoenix">
    <docblock line="3">
      <description>The Security class includes all security and encryption algorithms,
but no permissions management.</description>
      <long-description>&lt;p&gt;Use the ACL class for that.&lt;/p&gt;

&lt;p&gt;Salt is encoded in hash, does not to be separately stored.&lt;/p&gt;</long-description>
      <tag line="3" name="author" description="Yectep Studios &lt;info@yectep.hk&gt;"/>
      <tag line="3" name="version" description="30104"/>
      <tag line="3" name="package" description="Phoenix"/>
    </docblock>
    <constant namespace="global" line="15" package="Phoenix">
      <name>PBKDF2_HASH_ALGORITHM</name>
      <full_name>\PBKDF2_HASH_ALGORITHM</full_name>
      <value>"sha256"</value>
    </constant>
    <constant namespace="global" line="16" package="Phoenix">
      <name>PBKDF2_ITERATIONS</name>
      <full_name>\PBKDF2_ITERATIONS</full_name>
      <value>1024</value>
    </constant>
    <constant namespace="global" line="17" package="Phoenix">
      <name>PBKDF2_SALT_BYTES</name>
      <full_name>\PBKDF2_SALT_BYTES</full_name>
      <value>32</value>
    </constant>
    <constant namespace="global" line="18" package="Phoenix">
      <name>PBKDF2_HASH_BYTES</name>
      <full_name>\PBKDF2_HASH_BYTES</full_name>
      <value>48</value>
    </constant>
    <constant namespace="global" line="20" package="Phoenix">
      <name>HASH_SECTIONS</name>
      <full_name>\HASH_SECTIONS</full_name>
      <value>4</value>
    </constant>
    <constant namespace="global" line="21" package="Phoenix">
      <name>HASH_ALGORITHM_INDEX</name>
      <full_name>\HASH_ALGORITHM_INDEX</full_name>
      <value>0</value>
    </constant>
    <constant namespace="global" line="22" package="Phoenix">
      <name>HASH_ITERATION_INDEX</name>
      <full_name>\HASH_ITERATION_INDEX</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="23" package="Phoenix">
      <name>HASH_SALT_INDEX</name>
      <full_name>\HASH_SALT_INDEX</full_name>
      <value>2</value>
    </constant>
    <constant namespace="global" line="24" package="Phoenix">
      <name>HASH_PBKDF2_INDEX</name>
      <full_name>\HASH_PBKDF2_INDEX</full_name>
      <value>3</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="26" package="Default">
      <extends/>
      <name>Security</name>
      <full_name>\Security</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="34" package="Default">
        <name>getHash</name>
        <full_name>getHash</full_name>
        <argument line="34">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="49" package="Default">
        <name>checkHash</name>
        <full_name>checkHash</full_name>
        <argument line="49">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$good_hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="71" package="Default">
        <name>slow_equals</name>
        <full_name>slow_equals</full_name>
        <argument line="71">
          <name>$a</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$b</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="96" package="Default">
        <name>pbkdf2</name>
        <full_name>pbkdf2</full_name>
        <argument line="96">
          <name>$algorithm</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$salt</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$count</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$key_length</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$raw_output</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="26" code="50000">No DocBlock was found for \Security</error>
      <error line="34" code="50010">No DocBlock was found for method getHash()</error>
      <error line="49" code="50010">No DocBlock was found for method checkHash()</error>
      <error line="71" code="50010">No DocBlock was found for method slow_equals()</error>
      <error line="96" code="50010">No DocBlock was found for method pbkdf2()</error>
    </parse_markers>
  </file>
  <file path="class.student.php" hash="997448c6022a5aa35118cd114a2c796d" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="Default">
      <extends/>
      <name>FamStu</name>
      <full_name>\FamStu</full_name>
      <docblock line="3">
        <description>The StuFam class provides for two objects - one for the current student or family
and includes data lookup functions</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="14" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="9">
          <description>A new StuFam object defines either the current student or family object</description>
          <long-description></long-description>
          <tag line="9" name="param" description="Parent or student" type="\str" variable="$type">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="9" name="param" description="Family or student ID" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="14">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="14">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>getFamEmail</name>
        <full_name>getFamEmail</full_name>
        <docblock line="64">
          <description>Gets email address</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>getChildren</name>
        <full_name>getChildren</full_name>
        <docblock line="80">
          <description>Returns number of children in a family's account and their 4-Status</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="Default">
        <name>getCosStatus</name>
        <full_name>getCosStatus</full_name>
        <docblock line="96">
          <description>Sees if account registered email address is from CIS</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Default">
        <name>getStudentSchedule</name>
        <full_name>getStudentSchedule</full_name>
        <docblock line="121">
          <description>Gets a student's schedule for a particular week, if given</description>
          <long-description></long-description>
          <tag line="121" name="param" description="Week to look up. Option: if left blank, shows all 4 weeks" type="string" variable="$week">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$week</name>
          <default>'all'</default>
          <type/>
        </argument>
        <argument line="125">
          <name>$getdropped</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="147" package="Default">
        <name>isStudentEnrolled</name>
        <full_name>isStudentEnrolled</full_name>
        <docblock line="142">
          <description>Is the student enrolled (status: "enrolled") during a particular week/period?</description>
          <long-description></long-description>
          <tag line="142" name="param" description="Week to look up." type="string" variable="$week">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="param" description="Period to look up" type="string" variable="$period">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$week</name>
          <default></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$period</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="Default">
        <name>isStudentReserved</name>
        <full_name>isStudentReserved</full_name>
        <docblock line="166">
          <description>Is the student reserved (status: anything but dropped) during a particular week/period?</description>
          <long-description></long-description>
          <tag line="166" name="param" description="Week to look up." type="string" variable="$week">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="param" description="Period to look up" type="string" variable="$period">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$week</name>
          <default></default>
          <type/>
        </argument>
        <argument line="171">
          <name>$period</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="193" package="Default">
        <name>getFamilyList</name>
        <full_name>getFamilyList</full_name>
        <docblock line="190">
          <description>Returns a list of family data</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="209" package="Default">
        <name>getFamilyById</name>
        <full_name>getFamilyById</full_name>
        <docblock line="205">
          <description>Returns a family's data, including child data</description>
          <long-description></long-description>
          <tag line="205" name="param" description="" type="int" variable="$famId">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$famId</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="243" package="Default">
        <name>getPTEList</name>
        <full_name>getPTEList</full_name>
        <docblock line="239">
          <description>Returns PTE list, given an optional $famId</description>
          <long-description></long-description>
          <tag line="239" name="param" description="" type="int" variable="$famId">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="243">
          <name>$famId</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="272" package="Default">
        <name>getAgeDifference</name>
        <full_name>getAgeDifference</full_name>
        <docblock line="269">
          <description>Gets the day difference of the student given the week</description>
          <long-description></long-description>
        </docblock>
        <argument line="272">
          <name>$week</name>
          <default></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$dob</name>
          <default></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$minage</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="301" package="Default">
        <name>isStudentEnrolledStatic</name>
        <full_name>isStudentEnrolledStatic</full_name>
        <docblock line="296">
          <description>Is the student enrolled (status: "enrolled") during a particular week/period?</description>
          <long-description></long-description>
          <tag line="296" name="param" description="Week to look up." type="string" variable="$week">
            <type by_reference="false">string</type>
          </tag>
          <tag line="296" name="param" description="Period to look up" type="string" variable="$period">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$week</name>
          <default></default>
          <type/>
        </argument>
        <argument line="301">
          <name>$period</name>
          <default></default>
          <type/>
        </argument>
        <argument line="301">
          <name>$stuid</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.student.php</error>
      <error line="121" code="50015">Argument $getdropped is missing from the Docblock of getStudentSchedule()</error>
      <error line="269" code="50015">Argument $week is missing from the Docblock of getAgeDifference()</error>
      <error line="269" code="50015">Argument $dob is missing from the Docblock of getAgeDifference()</error>
      <error line="269" code="50015">Argument $minage is missing from the Docblock of getAgeDifference()</error>
      <error line="296" code="50015">Argument $stuid is missing from the Docblock of isStudentEnrolledStatic()</error>
    </parse_markers>
  </file>
  <file path="class.ux.php" hash="59dc6d4a45df42957af700e034053f2e" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="Default">
      <extends/>
      <name>UX</name>
      <full_name>\UX</full_name>
      <property final="false" static="false" visibility="private" line="15" namespace="global" package="Default">
        <name>$env</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="16" namespace="global" package="Default">
        <name>$env_reset</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$head</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="23" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="28" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>grabPage</name>
        <full_name>grabPage</full_name>
        <argument line="39">
          <name>$snippet</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$vars</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="39">
          <name>$nice</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Phoenix">
        <name>makeHead</name>
        <full_name>makeHead</full_name>
        <docblock line="84">
          <description>Upper page maker (includes provisions on announcements)</description>
          <long-description></long-description>
          <tag line="84" name="package" description="Phoenix"/>
          <tag line="84" name="version" description="20819"/>
        </docblock>
        <argument line="89">
          <name>$passToHeader</name>
          <default></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$passToNav</name>
          <default></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$ovrHeader</name>
          <default>'common/header_public'</default>
          <type/>
        </argument>
        <argument line="89">
          <name>$ovrNav</name>
          <default>'common/nav_public'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="Phoenix">
        <name>makeBreadcrumb</name>
        <full_name>makeBreadcrumb</full_name>
        <docblock line="122">
          <description>Breadcrumb maker</description>
          <long-description></long-description>
          <tag line="122" name="package" description="Phoenix"/>
          <tag line="122" name="version" description="20819"/>
        </docblock>
        <argument line="127">
          <name>$crumb</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="Phoenix">
        <name>makeNews</name>
        <full_name>makeNews</full_name>
        <docblock line="140">
          <description>News article maker</description>
          <long-description></long-description>
          <tag line="140" name="package" description="Phoenix"/>
          <tag line="140" name="version" description="20819"/>
        </docblock>
        <argument line="145">
          <name>$newsItem</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="Default">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="157">
          <description>Flushes the buffer as well as the UX push buffer</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="168" package="Default">
        <name>getallheaders</name>
        <full_name>getallheaders</full_name>
        <docblock line="165">
          <description>Placeholder for &lt; PHP 5.4.0 under FastCGI</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file class.ux.php</error>
      <error line="12" code="50000">No DocBlock was found for \UX</error>
      <error line="15" code="50018">No DocBlock was found for property $env</error>
      <error line="16" code="50018">No DocBlock was found for property $env_reset</error>
      <error line="18" code="50018">No DocBlock was found for property $head</error>
      <error line="23" code="50010">No DocBlock was found for method __construct()</error>
      <error line="28" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="39" code="50010">No DocBlock was found for method grabPage()</error>
      <error line="84" code="50015">Argument $passToHeader is missing from the Docblock of makeHead()</error>
      <error line="84" code="50015">Argument $passToNav is missing from the Docblock of makeHead()</error>
      <error line="84" code="50015">Argument $ovrHeader is missing from the Docblock of makeHead()</error>
      <error line="84" code="50015">Argument $ovrNav is missing from the Docblock of makeHead()</error>
      <error line="122" code="50015">Argument $crumb is missing from the Docblock of makeBreadcrumb()</error>
      <error line="140" code="50015">Argument $newsItem is missing from the Docblock of makeNews()</error>
    </parse_markers>
  </file>
  <file path="ignition.php" hash="9dee48b22813916c6ace8f66811d96ac" package="Phoenix">
    <docblock line="3">
      <description>Ignition script to initiate required classes.</description>
      <long-description>&lt;p&gt;For sake of simplicity, we require
classes based on whether or not certain constants are defined.&lt;/p&gt;</long-description>
      <tag line="3" name="author" description="Yectep Studios &lt;info@yectep.hk&gt;"/>
      <tag line="3" name="version" description="20704"/>
      <tag line="3" name="package" description="Phoenix"/>
    </docblock>
    <include line="34" type="Require Once" package="Default">
      <name>class.common.php</name>
    </include>
    <include line="35" type="Require Once" package="Default">
      <name>class.security.php</name>
    </include>
    <include line="36" type="Require Once" package="Default">
      <name>class.data.php</name>
    </include>
    <include line="37" type="Require Once" package="Default">
      <name>class.acl.php</name>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>class.browser.php</name>
    </include>
    <include line="42" type="Require Once" package="Default">
      <name>class.ux.php</name>
    </include>
    <include line="43" type="Require Once" package="Default">
      <name>class.courses.php</name>
    </include>
    <include line="44" type="Require Once" package="Default">
      <name>class.enrolment.php</name>
    </include>
    <include line="45" type="Require Once" package="Default">
      <name>class.laoshi.php</name>
    </include>
    <include line="47" type="Require Once" package="Default">
      <name>class.mailer.php</name>
    </include>
    <include line="48" type="Require Once" package="Default">
      <name>class.mailchimp.php</name>
    </include>
    <include line="50" type="Require Once" package="Default">
      <name>class.student.php</name>
    </include>
    <include line="51" type="Require Once" package="Default">
      <name>class.staff.php</name>
    </include>
    <constant namespace="global" line="16" package="Phoenix">
      <name>DATETIME_FULL</name>
      <full_name>\DATETIME_FULL</full_name>
      <value>'l, j F Y g:i:sa'</value>
    </constant>
    <constant namespace="global" line="17" package="Phoenix">
      <name>DATETIME_SHORT</name>
      <full_name>\DATETIME_SHORT</full_name>
      <value>'d/m/y H:i:s'</value>
    </constant>
    <constant namespace="global" line="18" package="Phoenix">
      <name>DATE_FULL</name>
      <full_name>\DATE_FULL</full_name>
      <value>'j F Y'</value>
    </constant>
    <constant namespace="global" line="19" package="Phoenix">
      <name>DATE_SHORT</name>
      <full_name>\DATE_SHORT</full_name>
      <value>'d/m/y'</value>
    </constant>
    <constant namespace="global" line="22" package="Phoenix">
      <name>BETA</name>
      <full_name>\BETA</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="23" package="Phoenix">
      <name>SITE_DISABLED</name>
      <full_name>\SITE_DISABLED</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="24" package="Phoenix">
      <name>REGISTRATION_OPEN</name>
      <full_name>\REGISTRATION_OPEN</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="25" package="Phoenix">
      <name>MAILER_SENDMAIL</name>
      <full_name>\MAILER_SENDMAIL</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="26" package="Phoenix">
      <name>MANDRILL_KEY</name>
      <full_name>\MANDRILL_KEY</full_name>
      <value>'d4fd5695-5805-43fa-8fd7-2a2f0c30fa9b'</value>
    </constant>
    <constant namespace="global" line="27" package="Phoenix">
      <name>MAILCHIMP_KEY</name>
      <full_name>\MAILCHIMP_KEY</full_name>
      <value>'833ac505565545e81168363505355ad6-us5'</value>
    </constant>
    <constant namespace="global" line="30" package="Phoenix">
      <name>AUTH_ALGORITHM</name>
      <full_name>\AUTH_ALGORITHM</full_name>
      <value>'sha256'</value>
    </constant>
    <constant namespace="global" line="31" package="Phoenix">
      <name>AUTH_ITERATIONS</name>
      <full_name>\AUTH_ITERATIONS</full_name>
      <value>1000</value>
    </constant>
    <constant namespace="global" line="60" package="Phoenix">
      <name>WEEK_1</name>
      <full_name>\WEEK_1</full_name>
      <value>'2013-06-24 00:00:00'</value>
    </constant>
    <constant namespace="global" line="61" package="Phoenix">
      <name>WEEK_2</name>
      <full_name>\WEEK_2</full_name>
      <value>'2013-07-02 00:00:00'</value>
    </constant>
    <constant namespace="global" line="62" package="Phoenix">
      <name>WEEK_3</name>
      <full_name>\WEEK_3</full_name>
      <value>'2013-07-08 00:00:00'</value>
    </constant>
    <constant namespace="global" line="63" package="Phoenix">
      <name>WEEK_4</name>
      <full_name>\WEEK_4</full_name>
      <value>'2013-07-15 00:00:00'</value>
    </constant>
  </file>
  <package name="BarcodeQR" full_name="BarcodeQR"/>
  <package name="Default" full_name="Default"/>
  <package name="Mandrill" full_name="Mandrill"/>
  <package name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld">
    <package name="com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version">
      <package name="&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE">
        <package name="  See the&#10;GNU General Public License for more details at:&#10;http://www" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www">
          <package name="gnu" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu">
            <package name="org/copyleft/gpl" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl">
              <package name="html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER">
                <package name="FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www">
                  <package name="useragentstring" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring">
                    <package name="com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools">
                      <package name="com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1">
                        <package name="9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM">
                          <package name="ANDROID)&#10; + Fixed issue with Android 1" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1">
                            <package name="6/2" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2">
                              <package name="2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1">
                                <package name="8):&#10; + Added iPad Support&#10;2010-03-07 (v1" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1">
                                  <package name="7):&#10; + *MAJOR* Rebuild (preg" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg">
                                    <package name="match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the " full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the ">
                                      <package name="" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \">
                                        <package name="toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5">
                                          <package name="3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1">
                                            <package name="8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5">
                                              <package name="3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator">
                                                <package name="&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods">
                                                  <package name="&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones">
                                                    <package name="&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick">
                                                      <package name="id" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id">
                                                        <package name="au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script">
                                                          <package name=" You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values">
                                                            <package name="&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)" full_name="PegasusPHP&#10;Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld\com)&#10;This program is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU General Public License as&#10;published by the Free Software Foundation; either version 2 of&#10;the License, or (at your option) any later version\&#10;This program is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\  See the&#10;GNU General Public License for more details at:&#10;http://www\gnu\org/copyleft/gpl\html&#10;Typical Usage:&#10;  $browser = new Browser();&#10;  if( $browser-&gt;getBrowser() == Browser::BROWSER\FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {&#10;  &#9;echo 'You have FireFox version 2 or greater';&#10;  }&#10;User Agents Sampled from: http://www\useragentstring\com/&#10;This implementation is based on the original work from Gary White&#10;http://apptools\com/phptools/browser/&#10;UPDATES:&#10;2010-08-20 (v1\9):&#10; + Added MSN Explorer Browser (legacy)&#10; + Added Bing/MSN Robot (Thanks Rob MacDonald)&#10; + Added the Android Platform (PLATFORM\ANDROID)&#10; + Fixed issue with Android 1\6/2\2 (Thanks Tom Hirashima)&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2010-03-07 (v1\7):&#10; + *MAJOR* Rebuild (preg\match and other &quot;slow&quot; routine removal(s))&#10; + Almost allof Gary's original code has been replaced&#10; + Large PHPUNIT testing environment created to validate new releases and additions&#10; + Added FreeBSD Platform&#10; + Added OpenBSD Platform&#10; + Added NetBSD Platform&#10; + Added SunOS Platform&#10; + Added OpenSolaris Platform&#10; + Added support of the Iceweazel Browser&#10; + Added isChromeFrame() call to check if chromeframe is in use&#10; + Moved the Opera check in front of the Firefox check due to legacy Opera User Agents&#10; + Added the \\toString() method (Thanks Deano)&#10;2009-11-15:&#10; + Updated the checkes for Firefox&#10; + Added the NOKIA platform&#10; + Added Checks for the NOKIA brower(s)&#10;2009-11-08:&#10; + PHP 5\3 Support&#10; + Added support for BlackBerry OS and BlackBerry browser&#10; + Added support for the Opera Mini browser&#10; + Added additional documenation&#10; + Added support for isRobot() and isMobile()&#10; + Added support for Opera version 10&#10; + Added support for deprecated Netscape Navigator version 9&#10; + Added support for IceCat&#10; + Added support for Shiretoko&#10;2010-04-27 (v1\8):&#10; + Added iPad Support&#10;2009-08-18:&#10; + Updated to support PHP 5\3 - removed all deprecated function calls&#10; + Updated to remove all double quotes (&quot;) -- converted to single quotes (')&#10;2009-04-27:&#10; + Updated the IE check to remove a typo and bug (thanks John)&#10;2009-04-22:&#10; + Added detection for GoogleBot&#10; + Added detection for the W3C Validator\&#10; + Added detection for Yahoo! Slurp&#10;2009-03-14:&#10; + Added detection for iPods\&#10; + Added Platform detection for iPhones&#10; + Added Platform detection for iPods&#10;2009-02-16: (Rick Hale)&#10; + Added version detection for Android phones\&#10;2008-12-09:&#10; + Removed unused constant&#10;2008-11-07:&#10; + Added Google's Chrome to the detection list&#10; + Added isBrowser(string) to the list of functions special thanks to&#10;   Daniel 'mavrick' Lang for the function concept (http://mavrick\id\au)&#10;Gary White noted: &quot;Since browser detection is so unreliable, I am&#10;no longer maintaining this script\ You are free to use and or&#10;modify/update it as you want, however the author assumes no&#10;responsibility for the accuracy of the detected values\&quot;&#10;Anyone experienced with Gary's script might be interested in these notes:&#10;  Added class constants&#10;  Added detection and version detection for Google's Chrome&#10;  Updated the version detection for Amaya&#10;  Updated the version detection for Firefox&#10;  Updated the version detection for Lynx&#10;  Updated the version detection for WebTV&#10;  Updated the version detection for NetPositive&#10;  Updated the version detection for IE&#10;  Updated the version detection for OmniWeb&#10;  Updated the version detection for iCab&#10;  Updated the version detection for Safari&#10;  Updated Safari to remove mobile devices (iPhone)&#10;  Added detection for iPhone&#10;  Added detection for robots&#10;  Added detection for mobile devices&#10;  Added detection for BlackBerry&#10;  Removed Netscape checks (matches heavily with firefox &amp; mozilla)"/>
                                                          </package>
                                                        </package>
                                                      </package>
                                                    </package>
                                                  </package>
                                                </package>
                                              </package>
                                            </package>
                                          </package>
                                        </package>
                                      </package>
                                    </package>
                                  </package>
                                </package>
                              </package>
                            </package>
                          </package>
                        </package>
                      </package>
                    </package>
                  </package>
                </package>
              </package>
            </package>
          </package>
        </package>
      </package>
    </package>
  </package>
  <package name="Phoenix" full_name="Phoenix"/>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="2"/>
</project>
